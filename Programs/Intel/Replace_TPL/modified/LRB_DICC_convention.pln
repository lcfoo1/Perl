INST tt_userfunc_lrbicc {
    NAME                                    $name;
    TEMPLATE                                iCUserFuncTest;
    function_name                           $functionName;                           #Datatype=STRING, REQUIRED
    function_parameter                      $functionParameter;                      #Datatype=STRING, OPTIONAL
    datalog_mode                             $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
    debug_mode                              $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
    #serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
    bypass_global                           $bypassGlobal;                           #Datatype=STRING, OPTIONAL
    preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
    postinstance                            $postinstance;                           #Datatype=STRING, OPTIONAL
    #preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
    #postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
    #preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
    #postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
    #EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
    #mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
    #thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
    #thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
    #thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
    #instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
    #plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
    #ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
    #ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
    #ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
    #ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
    #ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
    #relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
    #ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
    #capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
}


#C:\INTEL\tpapps\CorTeX\OASIS\Rev4.0.0_Dev\templates\OASIS_icc_tt.ph
#Import C:\INTEL\tpapps\CorTeX\OASIS\Rev4.0.0_Dev\templates\OASIS_tt.ph
INST tt_icc_lrbicc {
	NAME                                    $name;
	TEMPLATE                                iCIccTest;
	template_mode                           $templateMode;                           #Datatype=STRING, REQUIRED  #Choices : TM_PAT_TRIG, TM_MEASURE, TM_INIT_DOWNBIN, TM_CLEAR_DOWNBIN
	input_file                              $inputFile;                              #Datatype=STRING, OPTIONAL
	icc_token                               $iccToken;                               #Datatype=STRING, OPTIONAL
	timings                                 $timings;                                #Datatype=STRING, OPTIONAL
	level                                   $level;                                  #Datatype=STRING, OPTIONAL
	patlist                                 $patlist;                                #Datatype=STRING, OPTIONAL
	pat_name                                $patName;                                #Datatype=STRING, OPTIONAL
	pat_domain_name                         $patDomainName;                                #Datatype=STRING, OPTIONAL
	power_pin                               $powerPin;                               #Datatype=STRING, REQUIRED
	trigger_pin                             $triggerPin;                             #Datatype=STRING, OPTIONAL
	trigger_bit			   	$triggerBit;				 #Datatype=STRING, OPTIONAL
	high_spec                               $highSpec;                               #Datatype=STRING, REQUIRED
	#return_port_array                       $returnPortArray;                        #Datatype=STRING, REQUIRED
	low_spec                                $lowSpec;                                #Datatype=STRING, REQUIRED
	manual_measure_range                    $manualMeasureRange;                     #Datatype=STRING, OPTIONAL
	start_PRA                               $startPra;                               #Datatype=STRING, OPTIONAL
	stop_PRA                                $stopPra;                                #Datatype=STRING, OPTIONAL
	step_size                               $stepSize;                               #Datatype=INTEGER, OPTIONAL
	sampling_interval                       $samplingInterval;                       #Datatype=STRING, OPTIONAL
	measure_result_global                   $measureResultGlobal;                    #Datatype=STRING, OPTIONAL
	user_mode                               $userMode;                               #Datatype=STRING, OPTIONAL  #Choices : PROD, ENG, CHAR, PROFILE, GRAPH, TRACE
	#pass_fail_criteria                     $passFailCriteria;                       #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVE, MEDIAN, ALL
	profile_output_file                     $profileOutputFile;                      #Datatype=STRING, OPTIONAL
        trace_gsds_results                      $traceGSDSResults;                       #Datatype=STRING, OPTIONAL
	ituff_tname                             $ituffTname;                             #Datatype=STRING, OPTIONAL
	ituff_level                             $ituffLevel;                             #Datatype=STRING, OPTIONAL  #Choices : MIN_MAX, AVE, MEDIAN, ALL
	levels_param_ituff                      $levelsParamItuff;                       #Datatype=STRING, OPTIONAL
	flownum_to_ituff                        $flownumToItuff;                         #Datatype=INTEGER, OPTIONAL
	instance_name                           $instanceName;                           #Datatype=STRING, OPTIONAL
	offset_enable                           $offsetEnable;                           #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	offset_slope                            $offsetSlope;                            #Datatype=STRING, OPTIONAL
	offset_constant                         $offsetConstant;                         #Datatype=STRING, OPTIONAL
	clamplo                                 $clamplo;                                #Datatype=STRING, REQUIRED
	clamphi                                 $clamphi;                                #Datatype=STRING, REQUIRED
	power_raise_sequence                    $powerRaiseSequence;                     #Datatype=DOUBLE, OPTIONAL
	power_lower_sequence                    $powerLowerSequence;                     #Datatype=DOUBLE, OPTIONAL
	settling_time                           $settlingTime;                           #Datatype=DOUBLE, OPTIONAL
	dc_focus_cal                            $dcFocusCal;                             #Datatype=STRING, OPTIONAL  #Choices : OFF, ON
	vccspec                                 $vccspec;                                #Datatype=STRING, REQUIRED
	vcc_start                               $vccStart;                               #Datatype=DOUBLE, OPTIONAL
	vcc_end                                 $vccEnd;                                 #Datatype=DOUBLE, OPTIONAL
	vcc_resolution                          $vccResolution;                          #Datatype=DOUBLE, OPTIONAL
	downbin_enable                          $downbinEnable;                          #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	downbin_frequency_guardband             $downbinFrequencyGuardband;              #Datatype=DOUBLE, OPTIONAL
	downbin_df_dv                           $downbinDfDv;                            #Datatype=DOUBLE, OPTIONAL
	downbin_voltage_offset                  $downbinVoltageOffset;                   #Datatype=DOUBLE, OPTIONAL
	core_speed_global                       $coreSpeedGlobal;                        #Datatype=STRING, OPTIONAL
	input_global                            $inputGlobal;                            #Datatype=STRING, OPTIONAL
	update_global                           $updateGlobal;                           #Datatype=STRING, OPTIONAL
	fqa_global                              $fqaGlobal;                              #Datatype=STRING, OPTIONAL
	max_bin_flows                           $maxBinFlows;                            #Datatype=INTEGER, OPTIONAL
	force_power_down                        $forcePowerDown;                         #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	multiple_pin_spec                       $multiplePinSpec;                        #Datatype=STRING, OPTIONAL
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                              $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                           $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                            $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}
