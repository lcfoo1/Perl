COMPOSITE VccContinuity
{
	VccContinuity_Verify (COMPNAME = VccContinuity_Verify)
	0?NEXT,
	1?NEXT;	
	
	VccContinuity_Execute (COMPNAME = VccContinuity_Execute)
	0?NEXT,
	1?NEXT;
	
	
#	#################################################################################################
#    # Test Name: VccContinuity_Verify_NoForceVal_PRODUCTION_$testMode_F0
#    # Test Description: All required parameters defined for $testModeType mode except forceValue.
#    # HSDs: 2626
#    # Expected Behavior: Fails verify for an undefined parameter forceValue.
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################
#	tt_vcccontinuity(name = VccContinuity_Execute_HSD_PROD_LoLimitHSD_VSIM_VERBOSE_F0,
#		testMode=VSIM, 
#		level = "iValVccTC",
#		pins = "HDPS LDPS LDPS LDPS LDPS LDPS LDPS",
#		testModeType = "PRODUCTION",
#		forceValue = "10mV 1mV 1mV 1mV 1mV 1mV 1mV",#"0.01 0.001 0.001 0.001 0.001 0.001 0.001",
#		lowValue = "0mA 0mA 0mA 0mA 0mA 0mA 0mA",
#		highValue = "250mA 80mA 80mA 80mA 80mA 80mA 80mA",
#		userPause = 0.01,
#		clampLowValue = "-160mA -20mA -20mA -20mA -20mA -20mA -20mA",
#		clampHighValue = "2A 2A 2A 2A 2A 2A 2A",
#		manualMeasureRange = "500mA 500mA 500mA 500mA 500mA 500mA 500mA",		
#		forceStartValue = "",
#		forceStopValue = "",
#		forceStepValue = "",
#		restoreForceValue = "DO_NOT_RESTORE",
# # Common Test Class Parameters
#		preinstance = "",
#		ignoreAlarm ="NONE",
#		datalogMode = ON,
#		debugMode = VERBOSE, 
#        #serialMode = "FALSE",
#		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
#		postinstance = "iVal_utilityfunc!GenerateInstanceResults",			#Datatype=STRING, OPTIONAL
#        )
#	0?NEXT,
#	1?NEXT;
}


COMPOSITE VccContinuity_Verify
{
	DEF (ignoreAlarm = "NONE");
	
    VccContinuity_Verify_PROD_ISVM (COMPNAME = VccContinuity_Verify_PROD_ISVM)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Verify_PROD_VSIM (COMPNAME = VccContinuity_Verify_PROD_VSIM)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Verify_CHAR_ISVM (COMPNAME = VccContinuity_Verify_CHAR_ISVM)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Verify_CHAR_VSIM (COMPNAME = VccContinuity_Verify_CHAR_VSIM)
	0?NEXT,
	1?NEXT;	
}



COMPOSITE VccContinuity_Verify_PROD_ISVM
{
	DEF (testModeType = "PRODUCTION",
		 testMode = "ISVM");
	
		 
	VccContinuity_PROD_$testMode_Required (COMPNAME = VccContinuity_PROD_$testMode_Required)
	0?NEXT,
	1?NEXT;	 
  	 	
   	VccContinuity_PROD_$testMode_Invalid_Params (COMPNAME = VccContinuity_PROD_$testMode_Invalid_Params)
	0?NEXT,
   	1?NEXT;
	
   	VccContinuity_PROD_$testMode_MultiPin_Invalid (COMPNAME = VccContinuity_PROD_$testMode_MultiPin_Invalid)
	0?NEXT,
   	1?NEXT;	
   	
    VccContinuity_PROD_$testMode_MultiPin_MoreLess (COMPNAME = VccContinuity_PROD_$testMode_MultiPin_MoreLess)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Verify_PROD_VSIM
{
	DEF (testModeType = "PRODUCTION",
		 testMode = "VSIM");
	
		 
	VccContinuity_PROD_$testMode_Required (COMPNAME = VccContinuity_PROD_$testMode_Required)
	0?NEXT,
	1?NEXT;	 
  	 	
   	VccContinuity_PROD_VSIM_Invalid_Params_Top (COMPNAME = VccContinuity_PROD_VSIM_Invalid_Params_Top)
	0?NEXT,
   	1?NEXT;
	
   	VccContinuity_PROD_VSIM_MultiPin_Invalid_Top (COMPNAME = VccContinuity_PROD_VSIM_MultiPin_Invalid_Top)
	0?NEXT,
   	1?NEXT;	
   	
    VccContinuity_PROD_VSIM_MultiPin_MoreLess_Top (COMPNAME = VccContinuity_PROD_VSIM_MultiPin_MoreLess_Top)
	0?NEXT,
   	1?NEXT;
}


COMPOSITE VccContinuity_Verify_CHAR_ISVM
{
	DEF (testModeType = "CHARACTERIZATION",
		 testMode = "ISVM");
	
	VccContinuity_CHAR_$testMode_Required (COMPNAME = VccContinuity_CHAR_$testMode_Required)
	0?NEXT,
	1?NEXT;		 

   	VccContinuity_CHAR_$testMode_Invalid_Params (COMPNAME = VccContinuity_CHAR_$testMode_Invalid_Params)
	0?NEXT,
   	1?NEXT;
	
   	VccContinuity_CHAR_$testMode_MultiPin_Invalid (COMPNAME = VccContinuity_CHAR_$testMode_MultiPin_Invalid)
	0?NEXT,
   	1?NEXT;	
   	
    VccContinuity_CHAR_$testMode_MultiPin_MoreLess (COMPNAME = VccContinuity_CHAR_$testMode_MultiPin_MoreLess)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Verify_CHAR_VSIM
{
	DEF (testModeType = "CHARACTERIZATION",
		 testMode = "VSIM");
	
	VccContinuity_CHAR_$testMode_Required (COMPNAME = VccContinuity_CHAR_$testMode_Required)
	0?NEXT,
	1?NEXT;		 
	 
   	 	
   	VccContinuity_CHAR_$testMode_Invalid_Params (COMPNAME = VccContinuity_CHAR_$testMode_Invalid_Params)
	0?NEXT,
   	1?NEXT;
	
   	VccContinuity_CHAR_$testMode_MultiPin_Invalid (COMPNAME = VccContinuity_CHAR_$testMode_MultiPin_Invalid)
	0?NEXT,
   	1?NEXT;	
   	
    VccContinuity_CHAR_$testMode_MultiPin_MoreLess (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_MoreLess)
	0?NEXT,
   	1?NEXT;
}

###############################################################################
#############################Comp Separate#####################################
###############################################################################	


COMPOSITE VccContinuity_PROD_$testMode_Required
{
    VccContinuity_$testModeType_$testMode_Required_Params_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_Required_Params_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_Required_Params_PROD_Only (COMPNAME = VccContinuity_$testModeType_$testMode_Required_Params_PROD_Only)
	0?NEXT,
	1?NEXT;	        	
   	
}

COMPOSITE VccContinuity_CHAR_$testMode_Required
{
    VccContinuity_$testModeType_$testMode_Required_Params_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_Required_Params_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_Required_Params_CHAR_Only (COMPNAME = VccContinuity_$testModeType_$testMode_Required_Params_CHAR_Only)
	0?NEXT,
	1?NEXT;	        	
   	
}
###############################################################################
#############################Comp Separate#####################################
###############################################################################

COMPOSITE VccContinuity_PROD_VSIM_Invalid_Params_Top
{
    VccContinuity_PROD_VSIM_Invalid_Params_Only (COMPNAME = VccContinuity_PROD_VSIM_Invalid_Params_Only)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_PROD_$testMode_Invalid_Params (COMPNAME = VccContinuity_PROD_$testMode_Invalid_Params)
	0?NEXT,
	1?NEXT;	

}


COMPOSITE VccContinuity_PROD_$testMode_Invalid_Params
{
    VccContinuity_$testModeType_$testMode_Invalid_Params_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_Invalid_Params_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_Invalid_Params_PROD_Only (COMPNAME = VccContinuity_$testModeType_$testMode_Invalid_Params_PROD_Only)
	0?NEXT,
	1?NEXT;	

}

COMPOSITE VccContinuity_CHAR_$testMode_Invalid_Params
{
    VccContinuity_$testModeType_$testMode_Invalid_Params_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_Invalid_Params_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_Invalid_Params_CHAR_Only (COMPNAME = VccContinuity_$testModeType_$testMode_Invalid_Params_CHAR_Only)
	0?NEXT,
	1?NEXT;	

}

###############################################################################
#############################Comp Separate#####################################
###############################################################################


COMPOSITE VccContinuity_PROD_VSIM_MultiPin_Invalid_Top
{
    VccContinuity_PROD_VSIM_MultiPin_Invalid_Only (COMPNAME = VccContinuity_PROD_VSIM_MultiPin_Invalid_Only)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_PROD_$testMode_MultiPin_Invalid (COMPNAME = VccContinuity_PROD_$testMode_MultiPin_Invalid)
	0?NEXT,
	1?NEXT;	

}

COMPOSITE VccContinuity_PROD_$testMode_MultiPin_Invalid
{
    VccContinuity_$testModeType_$testMode_MultiPin_Invalid_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_Invalid_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_MultiPin_Invalid_PROD_Only (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_Invalid_PROD_Only)
	0?NEXT,
	1?NEXT;	

}

COMPOSITE VccContinuity_CHAR_$testMode_MultiPin_Invalid
{
    VccContinuity_$testModeType_$testMode_MultiPin_Invalid_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_Invalid_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_MultiPin_Invalid_CHAR_Only (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_Invalid_CHAR_Only)
	0?NEXT,
	1?NEXT;	

}


###############################################################################
#############################Comp Separate#####################################
###############################################################################

COMPOSITE VccContinuity_PROD_VSIM_MultiPin_MoreLess_Top
{
    VccContinuity_PROD_VSIM_MultiPin_MoreLess_Only (COMPNAME = VccContinuity_PROD_VSIM_MultiPin_MoreLess_Only)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_PROD_$testMode_MultiPin_MoreLess (COMPNAME = VccContinuity_PROD_$testMode_MultiPin_MoreLess)
	0?NEXT,
	1?NEXT;	

}

COMPOSITE VccContinuity_PROD_$testMode_MultiPin_MoreLess
{
    VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_PROD_Only (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_PROD_Only)
	0?NEXT,
	1?NEXT;	

}

COMPOSITE VccContinuity_CHAR_$testMode_MultiPin_MoreLess
{
    VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_AllModes (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_AllModes)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_CHAR_Only (COMPNAME = VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_CHAR_Only)
	0?NEXT,
	1?NEXT;	

}
###############################################################################
#############################Comp Separate#####################################
###############################################################################


#################################################################################################
# Composite Name: VccContinuity_$testModeType_$testMode_Required_Params
# Composite Description: Contains verify test cases that ensure verify failures when required
#                        parameters are not defined while in $testModeType and $testMode.
#################################################################################################
COMPOSITE VccContinuity_$testModeType_$testMode_Required_Params_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0.000001",
		highValue = "2",
		userPause = 0.015,
		clampLowValue = "0",
		clampHighValue = "4",
		manualMeasureRange = "auto",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_NoLevels_$testModeType_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except Levels.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter Levels.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoLevels_$testModeType_$testMode_F0,
		   level = "")
	0?NEXT,
	1?NEXT;	

	#################################################################################################
    # Test Name: VccContinuity_Verify_NoPins_$testModeType_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except Pins.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter Pins.
    # Collaterals Req: Levels and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoPins_$testModeType_$testMode_F0,
		   pins = "")
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_NoHighLimit_$testModeType_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except highValue.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter highValue.
    # Collaterals Req: Levels/Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoHighLimit_$testModeType_$testMode_F0,
		   highValue = "")
	0?NEXT,
	1?NEXT;	

	#################################################################################################
    # Test Name: VccContinuity_Verify_NoLowLimit_$testModeType_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except lowValue.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter lowValue.
    # Collaterals Req: Levels/Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoLowLimit_$testModeType_$testMode_F0,
		   lowValue = "")
	0?NEXT,
	1?NEXT;	
		
}
	
#################################################################################################
# Composite Name: VccContinuity_$testModeType_$testMode_Required_Params_PROD_Only
# Composite Description: Contains verify test cases that ensure verify failures when required
#                        parameters are not defined while in $testModeType and $testMode.
#################################################################################################
COMPOSITE VccContinuity_$testModeType_$testMode_Required_Params_PROD_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0.000001",
		highValue = "2",
		userPause = 0.015,
		clampLowValue = "0",
		clampHighValue = "4",
		manualMeasureRange = "auto",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_NoForceVal_PRODUCTION_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except forceValue.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter forceValue.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoForceVal_PRODUCTION_$testMode_F0,
		   forceValue = "")
	0?NEXT,
	1?NEXT;

}
		
#################################################################################################
# Composite Name: VccContinuity_PRODUCTION_$testMode_Required_Params
# Composite Description: Contains verify test cases that ensure verify failures when required
#                        parameters are not defined while in $testModeType and $testMode.
#################################################################################################
COMPOSITE VccContinuity_$testModeType_$testMode_Required_Params_CHAR_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0.000001",
		highValue = "2",
		userPause = 0.015,
		clampLowValue = "0",
		clampHighValue = "4",
		manualMeasureRange = "auto",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_NoForceStart_CHARACTERIZATION_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except forceStartValue.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter forceStartValue.
    # Collaterals Req: Pins and other resources in paramter list defined. For CHAR mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoForceStart_CHARACTERIZATION_$testMode_F0,
		   forceStartValue = "")
	0?NEXT,
	1?NEXT;
		
	#################################################################################################
    # Test Name: VccContinuity_Verify_NoForceStop_CHARACTERIZATION_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except forceStopValue.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter forceStopValue.
    # Collaterals Req: Pins and other resources in paramter list defined. For CHAR mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoForceStop_CHARACTERIZATION_$testMode_F0,
		   forceStopValue= "")
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_NoForceStep_CHARACTERIZATION_$testMode_F0
    # Test Description: All required parameters defined for $testModeType mode except forceStepValue.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an undefined parameter forceStepValue.
    # Collaterals Req: Pins and other resources in paramter list defined. For CHAR mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_NoForceStep_CHARACTERIZATION_$testMode_F0,
		   forceStepValue = "")
	0?NEXT,
	1?NEXT;	

}



COMPOSITE VccContinuity_PROD_VSIM_Invalid_Params_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0",
		highValue = "0.05",
		userPause = 0.015,
		clampLowValue = "-1",
		clampHighValue = "1.9",
		manualMeasureRange = "50mA",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidHDPS_manualMeasureRange_$testMode_$testModeType_F0
    # Test Description: Tests InValid/unrecognized string for manualMeasureRange parameter for HCDPS.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidHDPS_manualMeasureRange_$testMode_$testModeType_F0,
	       pins = "HDPS",
		   manualMeasureRange = "InvalidMeasureRange",)
	0?NEXT,
	1?NEXT;
		
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLDPS_manualMeasureRange_$testMode_$testModeType_F0
    # Test Description: Tests InValid/unrecognized string for manualMeasureRange parameter for LCDPS.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLDPS_manualMeasureRange_$testMode_$testModeType_F0,
	       pins = "LDPS",
		   manualMeasureRange = "InvalidMeasureRange",)
	0?NEXT,
	1?NEXT;

	

	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidHDPS_SourceClampMismatch_$testMode_$testModeType_F0
    # Test Description: Tests Source (2.5V Range) Versus Clamp (1.8V Range) Mismatch for HCDPS. 2 ganged channels                  
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch between Source/clamp ranges.
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidHDPS_SourceClampMismatch_$testMode_$testModeType_F0,
	       pins = "HDPS",
	       forceValue = "2.5",
	       clampHighValue = "21",
		   )
	0?NEXT,
	1?NEXT;
	
	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLDPS_SourceClampMismatch_$testMode_$testModeType_F0
    # Test Description: Tests Source (8V Range) Versus Clamp (6V Range) Mismatch for LCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch between Source/clamp ranges.
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLDPS_SourceClampMismatch_$testMode_$testModeType_F0,
	       pins = "LDPS",
	       forceValue = "7",
	       clampHighValue = "4",
		   )
	0?NEXT,
	1?NEXT;
	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidHDPS_MeasureRangeHiLessLimitHi_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for HCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeHI less than LimitHi
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidHDPS_MeasureRangeHiLessLimitHi_$testModeType_$testMode_F0,
	       pins = "HDPS",
	       highValue = "1.5",
		   manualMeasureRange = "50mA",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidHDPS_MeasureRangeLoGreaterLimitLo_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for HCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeLO greater LimitLo
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidHDPS_MeasureRangeLoGreaterLimitLo_$testModeType_$testMode_F0,
	       pins = "HDPS",
	       highValue = "0.04",
	       lowValue = "-1",
	       clampLowValue = "-1.5",
		   manualMeasureRange = "50mA",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLDPS_MeasureRangeHiLessLimitHi_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for LCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeHI less than LimitHi
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLDPS_MeasureRangeHiLessLimitHi_$testModeType_$testMode_F0,
	       pins = "LDPS",
	       highValue = "1.5",
		   manualMeasureRange = "5uA",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLDPS_MeasureRangeLoGreaterLimitLo_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for LCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeLO greater LimitLo
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLDPS_MeasureRangeLoGreaterLimitLo_$testModeType_$testMode_F0,
	       pins = "LDPS",
	       highValue = "0.000004",
	       lowValue = "-1",
	       clampLowValue = "-1.5",
		   manualMeasureRange = "5uA",
		   )
	0?NEXT,
	1?NEXT;
	
	
		#################################################################################################
    # Test Name: VccContinuity_Verify_50mA_InvalidHighLimit_$testModeType_$testMode_F0 
    # Test Description: Tests InValid/unrecognized string for highValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_50mA_InvalidHighLimit_$testModeType_$testMode_F0,
		   highValue = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_50mA_InvalidLowLimit_$testModeType_$testMode_F0 
    # Test Description: Tests InValid/unrecognized string for lowValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_50mA_InvalidLowLimit_$testModeType_$testMode_F0,
		   lowValue = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_50mA_InvalidLimit_LoGreaterHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input for LimitLo Greater than limitHi for highValue and lowValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for LimitLo Greater than limitHi. LimitLo must be lower.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_50mA_InvalidLimit_LoGreaterHi_$testModeType_$testMode_F0,
	       highValue = "0.01",
		   lowValue = "0.02",
		   )
	0?NEXT,
	1?NEXT;

}

COMPOSITE VccContinuity_$testModeType_$testMode_Invalid_Params_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0.000001",
		highValue = "2",
		userPause = 0.015,
		clampLowValue = "0",
		clampHighValue = "1.4",
		manualMeasureRange = "auto",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLevels_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for level parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLevels_$testModeType_$testMode_F0,
		   level = "InvalidLevel",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidPins_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for pins parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidPins_$testModeType_$testMode_F0,
		   pins = "InvalidPins",)
	0?NEXT,
	1?NEXT;
	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidHighLimit_$testModeType_$testMode_F0 
    # Test Description: Tests InValid/unrecognized string for highValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidHighLimit_$testModeType_$testMode_F0,
		   highValue = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLowLimit_$testModeType_$testMode_F0 
    # Test Description: Tests InValid/unrecognized string for lowValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLowLimit_$testModeType_$testMode_F0,
		   lowValue = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidLimit_LoGreaterHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input for LimitLo Greater than limitHi for highValue and lowValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for LimitLo Greater than limitHi. LimitLo must be lower.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidLimit_LoGreaterHi_$testModeType_$testMode_F0,
	       highValue = "1.1",
		   lowValue = "1.2",)
	0?NEXT,
	1?NEXT;
	
		
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidUserPauseOver_$testModeType_$testMode_F0
    # Test Description: Tests Invalid or Over allowable range for userPause parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for range greater than 0.5s or less than 0.1e-3s. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidUserPauseOver_$testModeType_$testMode_F0,
	       userPause = 0.51,
	       )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidUserPauseUnder_$testModeType_$testMode_F0
    # Test Description: Tests Invalid or Under allowable range for userPause parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for range greater than 0.5s or less than 0.1e-3s. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidUserPauseUnder_$testModeType_$testMode_F0,
	       userPause = 0.09e-3,
	       )
	0?NEXT,
	1?NEXT;
}


COMPOSITE VccContinuity_$testModeType_$testMode_Invalid_Params_PROD_Only
{

	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0.000001",
		highValue = "2",
		userPause = 0.015,
		clampLowValue = "0",
		clampHighValue = "4",
		manualMeasureRange = "auto",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidForceVal_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for forceValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidForceVal_$testModeType_$testMode_F0,
		   forceValue = "InvalidForceVal"
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidNegForceVal_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for pins parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	#tt_vcccontinuity(name = FixTBD_VccContinuity_Verify_InvalidNegForceVal_$testModeType_$testMode_F0,
	#	   forceValue = "-0.1",
	#	   bypassGlobal = "GL_FixTBDBypassGlobal",
	#	   )
	#0?NEXT,
	#1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MissingClampHiOnly_$testModeType_$testMode_F0
    # Test Description: Tests Missing ClampHi when ClampLo is defined.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Missing ClampHi since both clamp hi/lo need to be defined together.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MissingClampHiOnly_$testModeType_$testMode_F0,
		    clampLowValue = "0.0",
			clampHighValue = "",)
	0?NEXT,
	1?NEXT;

	#################################################################################################
    # Test Name: VccContinuity_Verify_MissingClampLoOnly_$testModeType_$testMode_F0
    # Test Description: Tests Missing ClampLo when ClampHi is defined.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Missing ClampLo since both clamp hi/lo need to be defined together.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MissingClampLoOnly_$testModeType_$testMode_F0,
		    clampLowValue = "",
			clampHighValue = "1.8",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidClampHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid ClampHi, ClampLo is defined.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid ClampHi.
    # Collaterals Req: Pins and other resources in paramter list defined. ClampLo is defined
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidClampHi_$testModeType_$testMode_F0,
		    clampLowValue = "0",
			clampHighValue = "InvalidClamp",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidClampLo_$testModeType_$testMode_F0
    # Test Description: Tests Invalid ClampLo, ClampHi is defined.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid ClampLo.
    # Collaterals Req: Pins and other resources in paramter list defined. ClampHi is defined
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidClampLo_$testModeType_$testMode_F0,
		    clampLowValue = "InvalidClamp",
			clampHighValue = "1.8",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Invalid_ClampHiLessLimitHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamphi is less than LimitHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamphi is less than LimitHi. Clamp needs to be larger
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Invalid_ClampHiLessLimitHi_$testModeType_$testMode_F0,
			clampHighValue = "1.4",
			highValue = "1.5",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Invalid_ClampHiEqualLimitHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamphi equals LimitHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamphi equals LimitHi. Clamp needs to be larger
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Invalid_ClampHiEqualLimitHi_$testModeType_$testMode_F0,
			clampHighValue = "1.5",
			highValue = "1.5",)
	0?NEXT,
	1?NEXT;

	#################################################################################################
    # Test Name: VccContinuity_Verify_Invalid_ClampLoGreaterLimitLo_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Greater than Limitlo.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Greater than Limitlo. Clamp needs to be less
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Invalid_ClampLoGreaterLimitLo_$testModeType_$testMode_F0,
			lowValue = "0",
			clampLowValue = "0.01",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Invalid_ClampLoEqualLimitLo_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Equal Limitlo.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Equal Limitlo. Clamp needs to be less
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Invalid_ClampLoEqualLimitLo_$testModeType_$testMode_F0,
			lowValue = "0",
			clampLowValue = "0",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidClamps_LoGreaterHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Greater than ClampHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Greater than ClampHi
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidClamps_LoGreaterHi_$testModeType_$testMode_F0,
			clampHighValue = "1.5",
			clampLowValue = "1.6",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidClamps_LoEqualHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Equal ClampHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Equal ClampHi
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidClamps_LoEqualHi_$testModeType_$testMode_F0,
			clampHighValue = "1.5",
			clampLowValue = "1.5",)
	0?NEXT,
	1?NEXT;
	
}


COMPOSITE VccContinuity_$testModeType_$testMode_Invalid_Params_CHAR_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1",
		lowValue = "0.000001",
		highValue = "2",
		userPause = 0.015,
		clampLowValue = "0",
		clampHighValue = "4",
		manualMeasureRange = "auto",		
		forceStartValue = 0.1,
		forceStopValue = 0.2,
		forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidForceStart_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for forceStartValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidForceStart_$testModeType_$testMode_F0,
		   forceStartValue = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidForceStop_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for forceStopValue  parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidForceStop_$testModeType_$testMode_F0,
		   forceStopValue  = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidForceStep_$testModeType_$testMode_F0
    # Test Description: Tests InValid/unrecognized string for forceStepValue  parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidForceStep_$testModeType_$testMode_F0,
		   forceStepValue  = "InvalidValue",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidNegForceStep_$testModeType_$testMode_F0
    # Test Description: Tests InValid or Negative Value for forceStepValue  parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid or Negative Value parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidNegForceStep_$testModeType_$testMode_F0,
		   forceStepValue  = "-0.01",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_InvalidZeroForceStep_$testModeType_$testMode_F0
    # Test Description: Tests InValid or Zero Value for forceStepValue  parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid or Zero Value parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_InvalidZeroForceStep_$testModeType_$testMode_F0,
		   forceStepValue  = "0",)
	0?NEXT,
	1?NEXT;	
}



###############################################################################
#############################Comp Separate#####################################
###############################################################################


COMPOSITE VccContinuity_PROD_VSIM_MultiPin_Invalid_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS LDPS HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.1",
		lowValue = "0 0.000001 0",
		highValue = "1.8 2 1.8",
		userPause = 0.015,
		clampLowValue = "-1 0 -1",
		clampHighValue = "1.9 4 1.9",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidHDPS_manualMeasureRange5uA_$testMode_$testModeType_F0  
    # Test Description: Tests manualMeasureRange parameter for undefined ranges for HCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an invalid range measureRange. ValidRanges= 50mA, 500mA, 16A
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidHDPS_manualMeasureRange5uA_$testMode_$testModeType_F0,
	       manualMeasureRange = "500mA 500mA 5uA",
	       highValue = "0.5 0.5 0.000005",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidHDPS_manualMeasureRange10A_$testMode_$testModeType_F0  
    # Test Description: Tests manualMeasureRange parameter for undefined ranges for HCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an invalid range measureRange. ValidRanges= 50mA, 500mA, 16A
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidHDPS_manualMeasureRange10A_$testMode_$testModeType_F0,
	       manualMeasureRange = "10A 500mA 50mA",
	       highValue = "1.8 0.5 0.05",
		   )
	0?NEXT,
	1?NEXT;

	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidLDPS_manualMeasureRange200mA_$testMode_$testModeType_F0  
    # Test Description: Tests manualMeasureRange parameter for undefined ranges for LCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an invalid range measureRange. ValidRanges= 5uA, 50uA, 500uA, 50mA, 500mA, 4A
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidLDPS_manualMeasureRange200mA_$testMode_$testModeType_F0,
	       manualMeasureRange = "500mA 200mA 500mA",
	       highValue = "0.5 0.1 0.5",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidLDPS_manualMeasureRange16A_$testMode_$testModeType_F0  
    # Test Description: Tests manualMeasureRange parameter for undefined ranges for LCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an invalid range measureRange. ValidRanges= 5uA, 50uA, 500uA, 50mA, 500mA, 4A
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidLDPS_manualMeasureRange16A_$testMode_$testModeType_F0,
	       manualMeasureRange = "500mA 16A 16A",
	       highValue = "0.5 1.8 1.8",
		   )
	0?NEXT,
	1?NEXT;
	
	
	
#######################*******************	
#	#################################################################################################
#    # Test Name: VccContinuity_Verify_Multi_InvalidHDPS_SourceClampMismatch_$testMode_$testModeType_F0
#    # Test Description: Tests Source (2.5V Range) Versus Clamp (1.8V Range) Mismatch for HCDPS.                    
#    # HSDs: 2626
#    # Expected Behavior: Fails verify for an Mismatch between Source/clamp ranges.
#    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
#    #################################################################################################
#	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidHDPS_SourceClampMismatch_$testMode_$testModeType_F0,
#	       forceValue = "2.5 0.1 0.2",
#	       clampHighValue = "16 1.8 1.8",
#		   )
#	0?NEXT,
#	1?NEXT;
#######################****************

	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidLDPS_SourceClampMismatch_$testMode_$testModeType_F0
    # Test Description: Tests Source (8V Range) Versus Clamp (6V Range) Mismatch for LCDPS.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch between Source/clamp ranges.
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidLDPS_SourceClampMismatch_$testMode_$testModeType_F0,
	       forceValue = "0.1 7 0.2",
	       clampHighValue = "1.8 4 1.8",
		   )
	0?NEXT,
	1?NEXT;
	
	
	
    #################################################################################################
    # Test Name: VccContinuity_Verify_Multi_MRangeHiLessLimHi_50mA_5uA_F50mA_5uA_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for HCDPS in MultiPin Setting.
    #                 **Even though fails for Measure/Limit Mismatch, excecises code to verify all possible ranges for both LCDPS and HCDPS.                  
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeHI less than LimitHi in the 3rd Pin
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_MRangeHiLessLimHi_50mA_5uA_F50mA_5uA_$testModeType_$testMode_F0,
	       pins = "HDPS LDPS HDPS LDPS",
		   manualMeasureRange = "50mA 5uA 50mA 5uA",
		   forceValue = "0.2 0.1 0.2 0.1",
		   lowValue = "0.002 0.001 0.002 0.001",
		   highValue = "0.04 0.000004 1.5 0.000004",
		   clampLowValue = "-1 -1 -1 -1",
		   clampHighValue = "1.8 1.6 1.8 1.6",
		   forceStartValue = "0 0.01 0.1 0.01",
		   forceStopValue = "0.6 0.2 0.4 0.2",
		   forceStepValue = "0.02 0.01 0.01 0.01",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_MRangeLoGreaterLimLo_16A_500uA_F50mA_5uA_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for HCDPS in MultiPin Setting.
    #                 **Even though fails for Measure/Limit Mismatch, excecises code to verify all possible ranges for both LCDPS and HCDPS.                  
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeLO greater LimitLo in the 3rd Pin
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_MRangeLoGreaterLimLo_16A_500uA_F50mA_5uA_$testModeType_$testMode_F0,
	       pins = "HDPS LDPS HDPS LDPS",
		   manualMeasureRange = "16A 500uA 50mA 5uA",
		   forceValue = "0.2 0.1 0.2 0.1",
		   lowValue = "0.002 0.001 -1 0.001",
		   highValue = "1.6 0.0004 0.04 0.000004",
		   clampLowValue = "-1 -1 -1.5 -1",
		   clampHighValue = "1.8 1.6 1.8 1.6",
		   forceStartValue = "0 0.01 0.1 0.01",
		   forceStopValue = "0.6 0.2 0.4 0.2",
		   forceStepValue = "0.02 0.01 0.01 0.01",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_MRangeHiLessLimHi_500mA_50uA_5mA_F5uA_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for HCDPS in MultiPin Setting.
    #                 **Even though fails for Measure/Limit Mismatch, excecises code to verify all possible ranges for both LCDPS and HCDPS.                  
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeHI less than LimitHi in the 4th Pin
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_MRangeHiLessLimHi_500mA_50uA_5mA_F5uA_$testModeType_$testMode_F0,
	       pins = "HDPS LDPS LDPS LDPS",
		   manualMeasureRange = "500mA 50uA 5mA 5uA",
		   forceValue = "0.2 0.1 0.2 0.1",
		   lowValue = "0.002 0.001 0 0.001",
		   highValue = "0.4 0.00004 0.004 1.5",
		   clampLowValue = "-1 -1 -1 -1",
		   clampHighValue = "1.8 1.6 1.8 1.6",
		   forceStartValue = "0 0.01 0.1 0.01",
		   forceStopValue = "0.6 0.2 0.4 0.2",
		   forceStepValue = "0.02 0.01 0.01 0.01",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_MRangeLoGreaterLimLo_500mA_4A_50mA_F5uA_$testModeType_$testMode_F0
    # Test Description: Tests Measure range for greater than low_spec/hi_spec for HCDPS in MultiPin Setting.
    #                 **Even though fails for Measure/Limit Mismatch, excecises code to verify all possible ranges for both LCDPS.                  
    # HSDs: 2626
    # Expected Behavior: Fails verify for Measure rangeLO greater LimitLo in the 4th Pin
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_MRangeLoGreaterLimLo_500mA_4A_50mA_F5uA_$testModeType_$testMode_F0,
	       pins = "LDPS LDPS LDPS LDPS",
		   manualMeasureRange = "500mA 4A 50mA 5uA",
		   forceValue = "0.2 0.1 0.2 0.1",
		   lowValue = "0.002 0.001 0.001 -1",
		   highValue = "0.4 1.5 0.04 0.000004",
		   clampLowValue = "-1 -1 -1 -1.5",
		   clampHighValue = "1.8 1.6 1.8 1.6",
		   forceStartValue = "0 0.01 0.1 0.01",
		   forceStopValue = "0.6 0.2 0.4 0.2",
		   forceStepValue = "0.02 0.01 0.01 0.01",
		   )
	0?NEXT,
	1?NEXT;
}




COMPOSITE VccContinuity_$testModeType_$testMode_MultiPin_Invalid_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS LDPS LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.1",
		lowValue = "0.000001 0.000001 0.000001",
		highValue = "2 2 2",
		userPause = 0.015,
		clampLowValue = "0.0 0 0",
		clampHighValue = "4 4 4",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidHighLimit_$testModeType_$testMode_F0
    # Test Description: Tests highValue parameter for invalid inputs in MultiPin setting.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for invalid highValue. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidHighLimit_$testModeType_$testMode_F0,
		   highValue = "1.6 InValid 1.5",)
	0?NEXT,
	1?NEXT;
	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidLowLimit_$testModeType_$testMode_F0
    # Test Description: Tests highValue parameter for invalid inputs in MultiPin setting.    
    # HSDs: 2626
    # Expected Behavior: Fails verify for invalid LowValue.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = FixTBD_VccContinuity_Verify_Multi_InvalidLowLimit_$testModeType_$testMode_F0,
		   lowValue = "0.002 Invalid 0.002",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidPins_$testModeType_$testMode_F0
    # Test Description: Tests pins parameter for invalid inputs in MultiPin setting.    
    # HSDs: 2626
    # Expected Behavior: Fails verify for invalid pins.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidPins_$testModeType_$testMode_F0,
		   pins = "HDPS InValid HDPS",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidLimit_LoGreaterHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input for LimitLo Greater than limitHi for highValue and lowValue parameter.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for LimitLo Greater than limitHi. LimitLo must be lower.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidLimit_LoGreaterHi_$testModeType_$testMode_F0,
		   lowValue = "0.002 1.2 0.002",
		   highValue = "1.6 1.1 1.5",)
	0?NEXT,
	1?NEXT;
	
	
}


COMPOSITE VccContinuity_$testModeType_$testMode_MultiPin_Invalid_PROD_Only
{                                               
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS LDPS LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.1",
		lowValue = "0.000001 0.000001 0.000001",
		highValue = "2 2 2",
		userPause = 0.015,
		clampLowValue = "0.0 0 0",
		clampHighValue = "4 4 4",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidForceVal_$testModeType_$testMode_F0  
    # Test Description: Tests InValid/unrecognized string for forceValue parameter in MultiPin Setting.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidForceVal_$testModeType_$testMode_F0,
		   forceValue = "0.2 Invalid 0.2",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidNegForceVal_$testModeType_$testMode_F0 
    # Test Description: Tests InValid/unrecognized string for forceValue parameter in MultiPin Setting.
    # HSDs: 2626
    # Expected Behavior: Fails verify for an InValid/unrecognized parameter value.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	#tt_vcccontinuity(name = FixTBD_VccContinuity_Verify_Multi_InvalidNegForceVal_$testModeType_$testMode_F0,
	#	   forceValue = "0.2 -0.2 0.2",
	#	   bypassGlobal = "GL_FixTBDBypassGlobal",
	#	   )
	#0?NEXT,
	#1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidClampHi_$testModeType_$testMode_F0     
    # Test Description: Tests Invalid ClampHi, ClampLo is defined.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid ClampHi.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidClampHi_$testModeType_$testMode_F0,
		   clampHighValue = "4 Invalid 4",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidClampLo_$testModeType_$testMode_F0     
    # Test Description: Tests Invalid ClampLo, ClampHi is defined.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid ClampLo.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidClampLo_$testModeType_$testMode_F0,
		   clampLowValue = "0 Invalid 0",)
	0?NEXT,
	1?NEXT;
	
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_Invalid_ClampHiLessLimitHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamphi is less than LimitHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamphi is less than LimitHi. Clamp needs to be larger
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_Invalid_ClampHiLessLimitHi_$testModeType_$testMode_F0,
			clampHighValue = "4 1.4 4",
			highValue = "1.6 1.5 1.5",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_Invalid_ClampHiEqualLimitHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamphi equals LimitHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamphi equals LimitHi. Clamp needs to be larger
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_Invalid_ClampHiEqualLimitHi_$testModeType_$testMode_F0,
			clampHighValue = "1.8 1.5 1.8",
			highValue = "1.6 1.5 1.5",)
	0?NEXT,
	1?NEXT;

	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_Invalid_ClampLoGreaterLimitLo_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Greater than Limitlo.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Greater than Limitlo. Clamp needs to be less
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_Invalid_ClampLoGreaterLimitLo_$testModeType_$testMode_F0,
			lowValue = "0.002 0 0.002",
			clampLowValue = "0.0 0.01 0")
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_Invalid_ClampLoEqualLimitLo_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Equal Limitlo.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Equal Limitlo. Clamp needs to be less
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_Invalid_ClampLoEqualLimitLo_$testModeType_$testMode_F0,
			lowValue = "0.002 0 0.002",
			clampLowValue = "0.0 0 0")
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidClamps_LoGreaterHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Greater than ClampHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Greater than ClampHi
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidClamps_LoGreaterHi_$testModeType_$testMode_F0,
			clampHighValue = "1.8 1.4 1.8",
			clampLowValue = "0.0 1.5 0")
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidClamps_LoEqualHi_$testModeType_$testMode_F0
    # Test Description: Tests Invalid input when Clamplo is Equal ClampHi.
    # HSDs: 2626
    # Expected Behavior: Fails verify for Invalid input when Clamplo is Equal ClampHi
    # Collaterals Req: Pins and other resources in paramter list defined. 
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidClamps_LoEqualHi_$testModeType_$testMode_F0,
			clampHighValue = "1.8 1.4 1.8",
			clampLowValue = "0.0 1.4 0")
	0?NEXT,
	1?NEXT;	
	
}



COMPOSITE VccContinuity_$testModeType_$testMode_MultiPin_Invalid_CHAR_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS LDPS HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.1",
		lowValue = "0 0 0",
		highValue = "1.8 1.8 1.8",
		userPause = 0.015,
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidForceStart_$testModeType_$testMode_F0 
    # Test Description: Tests forceStartValue parameter for Invalid input in multipin setting.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for forceStartValue.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = FixTBD_VccContinuity_Verify_Multi_InvalidForceStart_$testModeType_$testMode_F0,
		   forceStartValue = "0.1 Invalid 0.1",
		   bypassGlobal = "GL_FixTBDBypassGlobal",		   
		   )
	0?NEXT,
	1?NEXT;
	
		
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidForceStop_$testModeType_$testMode_F0 
    # Test Description: Tests forceStopValue parameter for Invalid input in multipin setting                   
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for forceStopValue. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_InvalidForceStop_$testModeType_$testMode_F0,
		   forceStopValue = "0.2 Invalid 0.2",)
	0?NEXT,
	1?NEXT;
	

	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_InvalidForceStep_$testModeType_$testMode_F0  
    # Test Description: Tests forceStepValue parameter for Invalid input in multipin setting    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for forceStepValue. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = FixTBD_VccContinuity_Verify_Multi_InvalidForceStep_$testModeType_$testMode_F0,
		   forceStepValue = "0.1 Invalid 0.1",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
           )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_NegForceStep_$testModeType_$testMode_F0  
    # Test Description: Tests forceStepValue parameter for Invalid input in multipin setting    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for forceStepValue. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_NegForceStep_$testModeType_$testMode_F0,
		   forceStepValue = "0.1 -0.1 0.1",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_Multi_ZeroForceStep_$testModeType_$testMode_F0  
    # Test Description: Tests forceStepValue parameter for Invalid input in multipin setting    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Invalid input for forceStepValue. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_Multi_ZeroForceStep_$testModeType_$testMode_F0,
		   forceStepValue = "0.1 0 0.1",)
	0?NEXT,
	1?NEXT;
}



###############################################################################
#############################Comp Separate#####################################
###############################################################################

COMPOSITE VccContinuity_PROD_VSIM_MultiPin_MoreLess_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS LDPS HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.1",
		lowValue = "0 0.000001 0",
		highValue = "1.8 2 1.8",
		userPause = 0.015,
		clampLowValue = "-1 0 -1",
		clampHighValue = "1.9 4 1.9",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_manualMeasureRange_$testMode_$testModeType_F0  
    # Test Description: Tests manualMeasureRange parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs measureRange. Each pin/group must have corresponding measureRange
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_manualMeasureRange_$testMode_$testModeType_F0 ,
	       manualMeasureRange = "16A 4A 16A 16A",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_manualMeasureRange_$testMode_$testModeType_F0  
    # Test Description: Tests manualMeasureRange parameter for lesser inputs than defined pins.             
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs measureRange. Each pin/group must have corresponding measureRange
    # Collaterals Req: Pins and other resources in paramter list defined. For PROD and VSIM mode only
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_manualMeasureRange_$testMode_$testModeType_F0 ,
	       manualMeasureRange = "16A 4A",
		   )
	0?NEXT,
	1?NEXT;

}

COMPOSITE VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS LDPS LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.2",
		lowValue = "0.000001 0.000001 0.000001",
		highValue = "2 2 2",
		userPause = 0.015,
		clampLowValue = "0 0 0",
		clampHighValue = "4 4 4",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_HighLimit_$testModeType_$testMode_F0
    # Test Description: Tests highValue parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs highValuee. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_HighLimit_$testModeType_$testMode_F0,
		   highValue = "2 2 2 2",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_HighLimit_$testModeType_$testMode_F0
    # Test Description: Tests highValue parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs highValuee. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_HighLimit_$testModeType_$testMode_F0,
		   highValue = "2 2",)
	0?NEXT,
	1?NEXT;

	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_LowLimit_$testModeType_$testMode_F0
    # Test Description: Tests lowValue parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs lowValuee. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_LowLimit_$testModeType_$testMode_F0,
		   lowValue = "0.000001 0.000001 0.000001 0.000001",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_LowLimit_$testModeType_$testMode_F0
    # Test Description: Tests lowValue parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs lowValuee. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_LowLimit_$testModeType_$testMode_F0,
		   lowValue = "0.000001 0.000001",)
	0?NEXT,
	1?NEXT;
	
}


COMPOSITE VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_PROD_Only
{

	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "LDPS LDPS LDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.1",
		lowValue = "0.000001 0.000001 0.000001",
		highValue = "2 2 2",
		userPause = 0.015,
		clampLowValue = "0 0 0",
		clampHighValue = "4 4 4",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_ClampHi_$testModeType_$testMode_F0 
    # Test Description: Tests ClampHi parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs ClampHi. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_ClampHi_$testModeType_$testMode_F0,
		   clampHighValue = "4 4 4 4",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_ClampHi_$testModeType_$testMode_F0 
    # Test Description: Tests ClampHi parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs ClampHi. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_ClampHi_$testModeType_$testMode_F0,
		   clampHighValue = "4 4",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_ClampLo_$testModeType_$testMode_F0 
    # Test Description: Tests ClampLo parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs ClampLo. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_ClampLo_$testModeType_$testMode_F0,
		   clampLowValue = "0 0 0 0",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_ClampLo_$testModeType_$testMode_F0 
    # Test Description: Tests ClampLo parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs ClampLo. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_ClampLo_$testModeType_$testMode_F0,
		   clampLowValue = "0 0",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_ForceVal_$testModeType_$testMode_F0 
    # Test Description: Tests forceValue parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_ForceVal_$testModeType_$testMode_F0,
		   forceValue = "0.1 0.1 0.1 0.1",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_ForceVal_$testModeType_$testMode_F0 
    # Test Description: Tests forceValue parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_ForceVal_$testModeType_$testMode_F0,
		   forceValue = "0.1 0.1",)
	0?NEXT,
	1?NEXT;
	
}



COMPOSITE VccContinuity_$testModeType_$testMode_MultiPin_MoreLess_CHAR_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS LDPS HDPS",
		#testModeType = "PRODUCTION",
		forceValue = "0.1 0.1 0.2",
		lowValue = "0 0.000001 0",
		highValue = "1.8 2 1.8",
		userPause = 0.015,
		clampLowValue = "-1 0 -1",
		clampHighValue = "1.9 4 1.9",
		manualMeasureRange = "auto",		
		forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.2 0.2 0.2",
		forceStepValue = "0.1 0.1 0.1",
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		debugMode = VERBOSE, 
        #serialMode = "FALSE",
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_ForceStart_$testModeType_$testMode_F0 
    # Test Description: Tests forceStartValue parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceStartValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_ForceStart_$testModeType_$testMode_F0,
		   forceStartValue = "0.1 0.01 0.1 0.1",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_ForceStart_$testModeType_$testMode_F0 
    # Test Description: Tests forceStartValue parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceStartValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_ForceStart_$testModeType_$testMode_F0,
		   forceStartValue = "0.1 0.1",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_ForceStop_$testModeType_$testMode_F0 
    # Test Description: Tests forceStopValue parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceStopValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_ForceStop_$testModeType_$testMode_F0,
		   forceStopValue = "0.2 0.2 0.2 0.2",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_ForceStop_$testModeType_$testMode_F0 
    # Test Description: Tests forceStopValue parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceStopValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_ForceStop_$testModeType_$testMode_F0,
		   forceStopValue = "0.2 0.2",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiMore_ForceStep_$testModeType_$testMode_F0 
    # Test Description: Tests forceStepValue parameter for more inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceStepValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiMore_ForceStep_$testModeType_$testMode_F0,
		   forceStepValue = "0.1 0.1 0.1 0.1",)
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Verify_MultiLess_ForceStep_$testModeType_$testMode_F0 
    # Test Description: Tests forceStepValue parameter for less inputs than defined pins.                    
    # HSDs: 2626
    # Expected Behavior: Fails verify for an Mismatch declared pins vs forceStepValue. Each pin/group must have corresponding parameter
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Verify_MultiLess_ForceStep_$testModeType_$testMode_F0,
		   forceStepValue = "0.1 0.1",)
	0?NEXT,
	1?NEXT;
}





################################################################################################
################################################################################################
#################################################################################################
###################################################################################################e
################################################################################################    
################################################################################################    
#################################################################################################   
###################################################################################################e


COMPOSITE VccContinuity_Execute
{
        VccContinuity_Execute_Alarm (COMPNAME = VccContinuity_Execute_Alarm)
	0?NEXT,
	1?NEXT;	

	VccContinuity_Execute_PROD_only_VSIM (COMPNAME = VccContinuity_Execute_PROD_only_VSIM)
	0?NEXT,
	1?NEXT;	
	
	VccContinuity_Execute_CHAR_only_VSIM (COMPNAME = VccContinuity_Execute_CHAR_only_VSIM)
	0?NEXT,
	1?NEXT;	
	
	VccContinuity_Execute_PROD_only_ISVM (COMPNAME = VccContinuity_Execute_PROD_only_ISVM)
	0?NEXT,
	1?NEXT;	
	
	VccContinuity_Execute_CHAR_only_ISVM (COMPNAME = VccContinuity_Execute_CHAR_only_ISVM)
	0?NEXT,
	1?NEXT;	
       
        VccContinuity_HSD (COMPNAME = VccContinuity_HSD)
	0?NEXT,
	1?NEXT;
	
	
}

COMPOSITE VccContinuity_Execute_PROD_only_VSIM
{
    DEF (testModeType = "PRODUCTION",
        ignoreAlarm = "NONE");                  

    VccContinuity_Execute_PROD_Single_only_VSIM (COMPNAME = VccContinuity_Execute_PROD_Single_only_VSIM)
    0?NEXT,
    1?NEXT;
    
    VccContinuity_Execute_PROD_Multi_only_VSIM (COMPNAME = VccContinuity_Execute_PROD_Multi_only_VSIM)
    0?NEXT,                                                                         
    1?NEXT;                                                                         
   
}    

COMPOSITE VccContinuity_Execute_PROD_only_ISVM
{
    DEF (testModeType = "PRODUCTION",
        ignoreAlarm = "NONE");       

    VccContinuity_Execute_PROD_Single_only_ISVM (COMPNAME = VccContinuity_Execute_PROD_Single_only_ISVM)
    0?NEXT,
    1?NEXT;
    
    VccContinuity_Execute_PROD_Multi_only_ISVM (COMPNAME = VccContinuity_Execute_PROD_Multi_only_ISVM)
    0?NEXT,                                                                         
    1?NEXT;                                                                         
   
}    

COMPOSITE VccContinuity_Execute_CHAR_only_VSIM
{
    DEF (testModeType = "CHARACTERIZATION",
        ignoreAlarm = "NONE");       

    VccContinuity_Execute_CHAR_Single_only_VSIM (COMPNAME = VccContinuity_Execute_$testModeType_Single_only_VSIM)
	0?NEXT,
	1?NEXT;
	
    VccContinuity_Execute_CHAR_Multi_only_VSIM (COMPNAME = VccContinuity_Execute_CHAR_Multi_only_VSIM)
	0?NEXT,
	1?NEXT;
		
}

COMPOSITE VccContinuity_Execute_CHAR_only_ISVM
{    
	DEF (testModeType = "CHARACTERIZATION",
        ignoreAlarm = "NONE");
        
    VccContinuity_Execute_CHAR_Single_only_ISVM (COMPNAME = VccContinuity_Execute_$testModeType_Single_only_ISVM)
	0?NEXT,
	1?NEXT;
	
    VccContinuity_Execute_CHAR_Multi_only_ISVM(COMPNAME = VccContinuity_Execute_CHAR_Multi_only_ISVM)
	0?NEXT,
	1?NEXT;	 
    
    
}

COMPOSITE VccContinuity_Execute_Alarm
{                                       

    DEF (debugMode = "OBNOXIOUS");     

    VccContinuity_Execute_Alarm_PROD_ISVM (COMPNAME = VccContinuity_Execute_Alarm_PROD_ISVM)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_Alarm_PROD_VSIM (COMPNAME = VccContinuity_Execute_Alarm_PROD_VSIM)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_Alarm_CHAR_ISVM (COMPNAME = VccContinuity_Execute_Alarm_CHAR_ISVM)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_Alarm_CHAR_VSIM (COMPNAME = VccContinuity_Execute_Alarm_CHAR_VSIM)
	0?NEXT,
	1?NEXT;
	
}

COMPOSITE VccContinuity_Execute_PROD_Single_only_VSIM
{    
	VccContinuity_Execute_PROD_Single_VSIM_DISABLED (COMPNAME = VccContinuity_Execute_PROD_Single_VSIM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_PROD_Single_VSIM_BRIEF (COMPNAME = VccContinuity_Execute_PROD_Single_VSIM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Single_VSIM_VERBOSE (COMPNAME = VccContinuity_Execute_PROD_Single_VSIM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Single_VSIM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_PROD_Single_VSIM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_only_ISVM
{                                       

	VccContinuity_Execute_PROD_Single_ISVM_DISABLED (COMPNAME = VccContinuity_Execute_PROD_Single_ISVM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_PROD_Single_ISVM_BRIEF (COMPNAME = VccContinuity_Execute_PROD_Single_ISVM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Single_ISVM_VERBOSE (COMPNAME = VccContinuity_Execute_PROD_Single_ISVM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Single_ISVM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_PROD_Single_ISVM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_only_VSIM
{                                       
	
	VccContinuity_Execute_CHAR_Single_VSIM_DISABLED (COMPNAME = VccContinuity_Execute_CHAR_Single_VSIM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_CHAR_Single_VSIM_BRIEF (COMPNAME = VccContinuity_Execute_CHAR_Single_VSIM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Single_VSIM_VERBOSE (COMPNAME = VccContinuity_Execute_CHAR_Single_VSIM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Single_VSIM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_CHAR_Single_VSIM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;
}


COMPOSITE VccContinuity_Execute_CHAR_Single_only_ISVM
{                                          
	VccContinuity_Execute_CHAR_Single_ISVM_DISABLED (COMPNAME = VccContinuity_Execute_CHAR_Single_ISVM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_CHAR_Single_ISVM_BRIEF (COMPNAME = VccContinuity_Execute_CHAR_Single_ISVM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Single_ISVM_VERBOSE (COMPNAME = VccContinuity_Execute_CHAR_Single_ISVM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Single_ISVM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_CHAR_Single_ISVM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Multi_only_VSIM
{                                          
 ########################################################################################
 # Start PROD_Multi mode composites
 ########################################################################################
	
	VccContinuity_Execute_PROD_Multi_VSIM_DISABLED (COMPNAME = VccContinuity_Execute_PROD_Multi_VSIM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_PROD_Multi_VSIM_BRIEF (COMPNAME = VccContinuity_Execute_PROD_Multi_VSIM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Multi_VSIM_VERBOSE (COMPNAME = VccContinuity_Execute_PROD_Multi_VSIM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Multi_VSIM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_PROD_Multi_VSIM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;

}	


COMPOSITE VccContinuity_Execute_PROD_Multi_only_ISVM
{                                          
	VccContinuity_Execute_PROD_Multi_ISVM_DISABLED (COMPNAME = VccContinuity_Execute_PROD_Multi_ISVM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_PROD_Multi_ISVM_BRIEF (COMPNAME = VccContinuity_Execute_PROD_Multi_ISVM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Multi_ISVM_VERBOSE (COMPNAME = VccContinuity_Execute_PROD_Multi_ISVM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_PROD_Multi_ISVM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_PROD_Multi_ISVM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;
}	


COMPOSITE VccContinuity_Execute_CHAR_Multi_only_VSIM
{                                          
 ########################################################################################
 # Start CHAR_Multi mode composites
 ########################################################################################
	
	VccContinuity_Execute_CHAR_Multi_VSIM_DISABLED (COMPNAME = VccContinuity_Execute_CHAR_Multi_VSIM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_CHAR_Multi_VSIM_BRIEF (COMPNAME = VccContinuity_Execute_CHAR_Multi_VSIM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Multi_VSIM_VERBOSE (COMPNAME = VccContinuity_Execute_CHAR_Multi_VSIM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Multi_VSIM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_CHAR_Multi_VSIM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;

}	

COMPOSITE VccContinuity_Execute_CHAR_Multi_only_ISVM
{
	VccContinuity_Execute_CHAR_Multi_ISVM_DISABLED (COMPNAME = VccContinuity_Execute_CHAR_Multi_ISVM_DISABLED)
	0?NEXT,
	1?NEXT;
		
	VccContinuity_Execute_CHAR_Multi_ISVM_BRIEF (COMPNAME = VccContinuity_Execute_CHAR_Multi_ISVM_BRIEF)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Multi_ISVM_VERBOSE (COMPNAME = VccContinuity_Execute_CHAR_Multi_ISVM_VERBOSE)
	0?NEXT,
	1?NEXT;
	
	VccContinuity_Execute_CHAR_Multi_ISVM_OBNOXIOUS (COMPNAME = VccContinuity_Execute_CHAR_Multi_ISVM_OBNOXIOUS)
	0?NEXT,
	1?NEXT;
	
}	
######################################################################################333
######################################################################################333

COMPOSITE VccContinuity_Execute_Alarm_PROD_ISVM
{
    DEF (testMode = "ISVM",
        testModeType ="PRODUCTION",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.005",
		clampLowValue = "0",
		clampHighValue = "1.9");  
        
    VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;        

}

COMPOSITE VccContinuity_Execute_Alarm_CHAR_ISVM
{
    DEF (testMode = "ISVM",
        testModeType ="CHARACTERIZATION",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.8",
		clampLowValue = "0",
		clampHighValue = "1.9");  
        
    VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;        

}
COMPOSITE VccContinuity_Execute_Alarm_PROD_VSIM
{
    DEF (testMode = "VSIM",
        testModeType ="PRODUCTION",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.019",
		highValue = "0.021",
		clampLowValue = "-1",
		clampHighValue = "1.9");  
        
    VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;        

}

COMPOSITE VccContinuity_Execute_Alarm_CHAR_VSIM
{
    DEF (testMode = "VSIM",
        testModeType ="CHARACTERIZATION",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.02",
		highValue = "0.04",
		clampLowValue = "-1",
		clampHighValue = "1.9");  
        
    VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode (COMPNAME = VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode)
	0?NEXT,
   	1?NEXT;        
}

######################################################################################333 
######################################################################################333


COMPOSITE VccContinuity_Execute_PROD_Single_ISVM_DISABLED
{
    DEF (testMode = "ISVM",
        debugMode ="DISABLED",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.001",
		clampLowValue = "0",
		clampHighValue = "1.9");     
    
	VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;		    

    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_ISVM_BRIEF
{
    DEF (testMode = "ISVM",
        debugMode ="BRIEF",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",        
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.001",
		clampLowValue = "0",
		clampHighValue = "1.9");     
        
	VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;	
			
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_ISVM_VERBOSE
{
    DEF (testMode = "ISVM",
        debugMode ="VERBOSE",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_RestoreToEquation.txt",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.001",
		clampLowValue = "0",
		clampHighValue = "1.9");     
		
	VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;	

    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_ISVM_OBNOXIOUS
{
    DEF (testMode = "ISVM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.001",
		clampLowValue = "0",
		clampHighValue = "1.9");     
    
	VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;	

    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}


COMPOSITE VccContinuity_Execute_PROD_Single_VSIM_DISABLED
{
    DEF (testMode = "VSIM",
        debugMode ="DISABLED",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.019",
		highValue = "0.021",
		clampLowValue = "-1",
		clampHighValue = "1.9");     
        
	VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
			
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_VSIM_BRIEF
{
    DEF (testMode = "VSIM",
        debugMode ="BRIEF",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.019",
		highValue = "0.021",
		clampLowValue = "-1",
		clampHighValue = "1.9");     
    
	VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;		
		    
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_VSIM_VERBOSE
{
    DEF (testMode = "VSIM",
        debugMode ="VERBOSE",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.019",
		highValue = "0.021",
		clampLowValue = "-1",
		clampHighValue = "1.9");     
        
    VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
		
	VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Single_VSIM_OBNOXIOUS
{
    DEF (testMode = "VSIM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.019",
		highValue = "0.021",
		clampLowValue = "-1",
		clampHighValue = "1.9");     
        
    VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
		
	VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

######################################################################################333

######################################################################################333 VccCont_Execute_ISVM.txt
######################################################################################333

COMPOSITE VccContinuity_Execute_PROD_Multi_ISVM_DISABLED
{
    DEF (testMode = "ISVM",
        debugMode ="DISABLED",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.001 1.001 1.001",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");     
        
		
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Multi_ISVM_BRIEF
{
    DEF (testMode = "ISVM",
        debugMode ="BRIEF",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",        
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.001 1.001 1.001",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");      
        	
		
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Multi_ISVM_VERBOSE
{
    DEF (testMode = "ISVM",
        debugMode ="VERBOSE",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_RestoreToEquation.txt",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.001 1.001 1.001",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");      
    
		    
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
}

COMPOSITE VccContinuity_Execute_PROD_Multi_ISVM_OBNOXIOUS
{
    DEF (testMode = "ISVM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.001 1.001 1.001",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");     
    
		    
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}


COMPOSITE VccContinuity_Execute_PROD_Multi_VSIM_DISABLED
{
    DEF (testMode = "VSIM",
        debugMode ="DISABLED",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.021 0.021 0.021",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");     
        
	VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
			
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;   	
}

COMPOSITE VccContinuity_Execute_PROD_Multi_VSIM_BRIEF
{
    DEF (testMode = "VSIM",
        debugMode ="BRIEF",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.021 0.021 0.021",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");    
    
	VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;		
		    
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Multi_VSIM_VERBOSE
{
    DEF (testMode = "VSIM",
        debugMode ="VERBOSE",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.021 0.021 0.021",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");   
        
    VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
		
	VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_PROD_Multi_VSIM_OBNOXIOUS
{
    DEF (testMode = "VSIM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1",
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.021 0.021 0.021",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");  
        
    VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
		
	VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
   	VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

######################################################################################333
######################################################################################333

COMPOSITE VccContinuity_Execute_CHAR_Single_ISVM_DISABLED
{
    DEF (testMode = "ISVM",
        debugMode ="DISABLED",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.6",
		clampLowValue = "0",
		clampHighValue = "1.9");            
	
   	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;		
		
	VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_ISVM_BRIEF
{
    DEF (testMode = "ISVM",
        debugMode ="BRIEF",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",        
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.6",
		clampLowValue = "0",
		clampHighValue = "1.9");     
    
	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;				
		    
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_ISVM_VERBOSE
{
    DEF (testMode = "ISVM",
        debugMode ="VERBOSE",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_RestoreToEquation.txt",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.6",
		clampLowValue = "0",
		clampHighValue = "1.9");     
    	
	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;			
			    
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_ISVM_OBNOXIOUS
{
    DEF (testMode = "ISVM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.15,
		forceStepValue = 0.05,
		lowValue = "0.95",
		highValue = "1.6",
		clampLowValue = "0",
		clampHighValue = "1.9");     
    	
	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly)
	0?NEXT,
   	1?NEXT;		
		    
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}


COMPOSITE VccContinuity_Execute_CHAR_Single_VSIM_DISABLED
{
    DEF (testMode = "VSIM",
        debugMode ="DISABLED",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.105, #dchange
		forceStepValue = 0.003, #changed to 0.03 to hit certain code.
		lowValue = "0.019",
		highValue = "0.031",
		clampLowValue = "-1",
		clampHighValue = "1.9"); 
		
    VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	    
        			
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_VSIM_BRIEF
{
    DEF (testMode = "VSIM",
        debugMode ="BRIEF",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.105, #dchange
		forceStepValue = 0.003, #changed to 0.03 to hit certain code.
		lowValue = "0.019",
		highValue = "0.031",
		clampLowValue = "-1",
		clampHighValue = "1.9"); 
		
	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	 	    
    		    
    VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_VSIM_VERBOSE
{
    DEF (testMode = "VSIM",
        debugMode ="VERBOSE",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.105, #dchange
		forceStepValue = 0.003, #changed to 0.03 to hit certain code.
		lowValue = "0.019",
		highValue = "0.031",
		clampLowValue = "-1",
		clampHighValue = "1.9");     
    
	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	 	
		    		
	VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Single_VSIM_OBNOXIOUS
{
    DEF (testMode = "VSIM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1",
        forceStartValue = 0.1,
		forceStopValue = 0.105, #dchange
		forceStepValue = 0.003, #changed to 0.03 to hit certain code.
		lowValue = "0.019",
		highValue = "0.031",
		clampLowValue = "-1",
		clampHighValue = "1.9");     
        		
	VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	 		
		
	VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}


######################################################################################333

######################################################################################333

COMPOSITE VccContinuity_Execute_CHAR_Multi_ISVM_DISABLED
{
    DEF (testMode = "ISVM",
        debugMode ="DISABLED",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.6 1.6 1.6",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");     
        
		
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_ISVM_BRIEF
{
    DEF (testMode = "ISVM",
        debugMode ="BRIEF",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_ISVM.txt",        
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.6 1.6 1.6",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");     
        		
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_ISVM_VERBOSE
{
    DEF (testMode = "ISVM",
        debugMode ="VERBOSE",
        #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_RestoreToEquation.txt",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.6 1.6 1.6",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");      
    		    
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_ISVM_OBNOXIOUS
{
    DEF (testMode = "ISVM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.15 0.15 0.15",
		forceStepValue = "0.05 0.05 0.05",
		lowValue = "0.95 0.95 0.95",
		highValue = "1.6 1.6 1.6",
		clampLowValue = "0 0 0",
		clampHighValue = "1.9 1.9 1.9");     
    	
		    
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}


COMPOSITE VccContinuity_Execute_CHAR_Multi_VSIM_DISABLED
{
    DEF (testMode = "VSIM",
        debugMode ="DISABLED",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.105 0.105 0.105", #dchange
		forceStepValue = "0.005 0.005 0.005",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.031 0.031 0.031",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");       
		
	VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;		
        			
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_VSIM_BRIEF
{
    DEF (testMode = "VSIM",
        debugMode ="BRIEF",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.105 0.105 0.105", #dchange
		forceStepValue = "0.005 0.005 0.005",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.031 0.031 0.031",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");        
		
	VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;		
    		    
    VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_VSIM_VERBOSE
{
    DEF (testMode = "VSIM",
        debugMode ="VERBOSE",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.105 0.105 0.105", #dchange
		forceStepValue = "0.005 0.005 0.005",
		lowValue = "0.019 0.019 0.019",
		highValue = "0.031 0.031 0.031",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");        
        
	VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;	
		
	VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_VSIM_OBNOXIOUS
{
    DEF (testMode = "VSIM",
        debugMode ="OBNOXIOUS",
        preinstance = "",
        forceValue = "0.1 0.1 0.1",
        forceStartValue = "0.1 0.1 0.1"
		forceStopValue = "0.105 0.105 0.105", #dchange
		forceStepValue = "0.005 0.005 0.005", 
		lowValue = "0.019 0.019 0.019",
		highValue = "0.031 0.031 0.031",
		clampLowValue = "-1 -1 -1",
		clampHighValue = "1.9 1.9 1.9");     
		
	VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly (COMPNAME = VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly)
	0?NEXT,
   	1?NEXT;		
        
	VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
   	
    VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode (COMPNAME = VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode)
	0?NEXT,
   	1?NEXT;
}



####################################################################################################
##################################################################################################33333
###########


COMPOSITE VccContinuity_Execute_Alarm_LDPS_$testModeType_$testMode
{
    DEF (pins = "LDPS");     
        
   	
    VccContinuity_Alarm_LDPS_$testModeType_$testMode_Only (COMPNAME = VccContinuity_Alarm_$pins_$testModeType_$testMode_Only)
	0?NEXT,
   	1?NEXT;
   	
}

COMPOSITE VccContinuity_Execute_Alarm_HDPS_$testModeType_$testMode
{
    DEF (pins = "HDPS");     
        
   	
    VccContinuity_Alarm_HDPS_$testModeType_$testMode_Only (COMPNAME = VccContinuity_Alarm_$pins_$testModeType_$testMode_Only)
	0?NEXT,
   	1?NEXT;
   	
}

######################################################################################333

COMPOSITE VccContinuity_Execute_LDPS_$testModeType_Single_$testMode_$debugMode
{
    DEF (pins = "LDPS");     
        
    VccContinuity_$pins_$testModeType_$testMode_$debugMode_AllModes (COMPNAME = VccContinuity_$pins_$testModeType_$testMode_$debugMode_AllModes)
	0?NEXT,
   	1?NEXT;  	  	
}


COMPOSITE VccContinuity_Execute_HDPS_$testModeType_Single_$testMode_$debugMode
{
    DEF (pins = "HDPS");     
        
    VccContinuity_$pins_$testModeType_$testMode_$debugMode_AllModes (COMPNAME = VccContinuity_$pins_$testModeType_$testMode_$debugMode_AllModes)
	0?NEXT,
   	1?NEXT;  	 	
}


###################################################################################################333

COMPOSITE VccContinuity_Execute_HLH_$testModeType_Multi_$testMode_$debugMode
{
    DEF (pins = "HDPS LDPS HDPS");     
        
    VccContinuity_HLH_Multi_$testModeType_$testMode_$debugMode_AllModes (COMPNAME = VccContinuity_HLH_Multi_$testModeType_$testMode_$debugMode_AllModes)
	0?NEXT,
   	1?NEXT;
   	   	
}


COMPOSITE VccContinuity_Execute_LHL_$testModeType_Multi_$testMode_$debugMode
{
    DEF (pins = "LDPS HDPS LDPS");     
        
    VccContinuity_LHL_Multi_$testModeType_$testMode_$debugMode_AllModes (COMPNAME = VccContinuity_LHL_Multi_$testModeType_$testMode_$debugMode_AllModes)
	0?NEXT,
   	1?NEXT;  	
   	
}

###################################################################################################333
#################################################################################################333


COMPOSITE VccContinuity_Alarm_LDPS_$testModeType_$testMode_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		#pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.000001",
		#highValue = "2",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "4",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.1,
		#forceStopValue = 0.2,
		#forceStepValue = 0.1,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		#preinstance = "",
		datalogMode = ON,
		#debugMode = OBNOXIOUS, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
        
	#################################################################################################
    # Test Name: VccContinuity_Execute_Alarm_UFLClamp_$pins_$testModeType_$testMode_$debugMode_P1
    # Test Description: Instance call UF to set/enable Alarm simulation. LDPS CLamp
    # HSDs: 2626
    # Expected Behavior: Passes after setting/enabling Alarm Simualtion global
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
       
    tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFLClamp_$pins_$testModeType_$testMode_$debugMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_AlarmSimulationType 1",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_LDPSClamp_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_LDPSClamp_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="CLAMP_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_LDPSClamp_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_LDPSClamp_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="CLAMP_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
		
	#################################################################################################
    # Test Name: VccContinuity_Execute_Alarm_UFEnd2_$pins_$testModeType_$testMode_P1
    # Test Description: Resets globals back to default value.
    # HSDs: 2626 
    # Expected Behavior: Passes after setting global back to defaults.  
    # Collaterals Req: Pins and other resources in paramter list defined.  
    #################################################################################################
	
	tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFEnd1_$pins_$testModeType_$testMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_AlarmSimulationType 0",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFEnd2_$pins_$testModeType_$testMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_EnableAlarmSimulation 0",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;		
}


COMPOSITE VccContinuity_Alarm_HDPS_$testModeType_$testMode_Only
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		#pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.8",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.9",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		#preinstance = "",
		datalogMode = ON,
		debugMode = OBNOXIOUS, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	#################################################################################################
    # Test Name: VccContinuity_Execute_Alarm_UFHClamp_$pins_$testModeType_$testMode_$debugMode_P1
    # Test Description: Instance call UF to set/enable Alarm simulation. HDPS Clamp
    # HSDs: 2626
    # Expected Behavior: Passes after setting/enabling Alarm Simualtion global
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
    
    tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFHClamp_$pins_$testModeType_$testMode_$debugMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_AlarmSimulationType 3",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSClamp_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSClamp_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="CLAMP_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSClamp_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	

	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSClamp_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="CLAMP_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_Alarm_UFHOsc_$pins_$testModeType_$testMode_$debugMode_P1
    # Test Description: Instance call UF to set/enable Alarm simulation. HDPS OSc
    # HSDs: 2626
    # Expected Behavior: Passes after setting/enabling Alarm Simualtion global
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
    
    tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFHOsc_$pins_$testModeType_$testMode_$debugMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_AlarmSimulationType 5",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;	
	
		tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSOsc_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSOsc_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="OSC_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSOsc_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	

	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSOsc_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="OSC_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
		#################################################################################################
    # Test Name: VccContinuity_Execute_Alarm_UFHSpike_$pins_$testModeType_$testMode_$debugMode_P1
    # Test Description: Instance call UF to set/enable Alarm simulation. HDPS Spike
    # HSDs: 2626
    # Expected Behavior: Passes after setting/enabling Alarm Simualtion global
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
    
    tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFHSpike_$pins_$testModeType_$testMode_$debugMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_AlarmSimulationType 4",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;	
	
		tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSSpike_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSSpike_LoadTp_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 1",
		   ignoreAlarm="SPIKE_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSSpike_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_FNeg2,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="NONE"
		   )
	0?NEXT,
	1?NEXT;	

	tt_vcccontinuity(name = VccContinuity_Execute_ALARM_HDPSSpike_ExeDC_$pins_$testModeType_$testMode_OBNOXIOUS_P1,
		   preinstance = "iVal_utilityfunc!SetTPGlobal CorTeXGlobals.iCGL_EnableAlarmSimulation 3",
		   ignoreAlarm="SPIKE_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_Alarm_UFEnd2_$pins_$testModeType_$testMode_P1
    # Test Description: Resets globals back to default value.
    # HSDs: 2626 
    # Expected Behavior: Passes after setting global back to defaults.  
    # Collaterals Req: Pins and other resources in paramter list defined.  
    #################################################################################################
	
	tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFEnd1_$pins_$testModeType_$testMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_AlarmSimulationType 0",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;	
	
	tt_userfunc_alarm(name = VccContinuity_Execute_Alarm_UFEnd2_$pins_$testModeType_$testMode_P1,
		   #level = ""
		   functionName="iVal_utilityfunc!SetTPGlobal",
		   functionParameter="CorTeXGlobals.iCGL_EnableAlarmSimulation 0",
		   ignoreAlarm = "NONE",
		   )
	0?NEXT,
	1?NEXT;		
}

######################################################################################333
######################################################################################333

COMPOSITE VccContinuity_Execute_PROD_Single_$testMode_$debugMode_VSIMOnly
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );

############################## MeasureRangeCheck Start ################################333        
        
        
    #################################################################################################
    # Test Name: VccContinuity_Execute_HDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 50mA MeasureRange: 2 ganged = value X 2
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_Check50mA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsHDPSRangeHigherThan50mA.txt",	   
		   highValue = "0.00006",
		   lowValue = "0.00002",
		   pins = "HDPS",
		   manualMeasureRange = "50mA",
		   )
	0?NEXT,
	1?NEXT;	
	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HDPS_Check500mA_$testModeType_$testMode_$debugMode_F0   
    # Test Description: PROD mode passing Execution with 500mA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_Check500mA_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsHDPSRangeLowerThan500mA.txt",	   
		   highValue = "0.499",
		   lowValue = "-0.499",
		   pins = "HDPS",
		   manualMeasureRange = "500mA",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500mA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_Check500mA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsHDPSRangeHigherThan500mA.txt",	   
		   highValue = "0.0006",
		   lowValue = "0.0002",
		   pins = "HDPS",
		   manualMeasureRange = "500mA",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 16A MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_Check16A_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsHDPSRangeLowerThan16A.txt",	   
		   highValue = "15.99",
		   lowValue = "-15.99",
		   pins = "HDPS",
		   manualMeasureRange = "16A",
		   clampLowValue = "-15.995",
		   clampHighValue = "15.995",
		   )
	0?NEXT,
	1?NEXT;	
        
    #################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 5uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check5uA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeHigherThan5uA.txt",	   
		   highValue = "0.000000006",
		   lowValue = "0.000000002",
		   pins = "LDPS",
		   manualMeasureRange = "5uA",
		   #bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;	    
        
    #################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 50uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check50uA_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeLowerThan50uA.txt",	   
		   highValue = "0.000049",
		   lowValue = "-0.000049",
		   pins = "LDPS",
		   manualMeasureRange = "50uA",
		   )
	0?NEXT,
	1?NEXT;	        
        
    #################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 50uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check50uA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeHigherThan50uA.txt",	   
		   highValue = "0.00000006",
		   lowValue = "0.00000002",
		   pins = "LDPS",
		   manualMeasureRange = "50uA",
		   )
	0?NEXT,
	1?NEXT;	            
	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check500uA_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeLowerThan500uA.txt",	   
		   highValue = "0.00049",
		   lowValue = "-0.00049",
		   pins = "LDPS",
		   manualMeasureRange = "500uA",
		   )
	0?NEXT,
	1?NEXT;	          
        
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check500uA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeHigherThan500uA.txt",	   
		   highValue = "0.0000006",
		   lowValue = "0.0000002",
		   pins = "LDPS",
		   manualMeasureRange = "500uA",
		   )
	0?NEXT,
	1?NEXT;	         
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check5mA_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeLowerThan5mA.txt",	   
		   highValue = "0.0049",
		   lowValue = "-0.0049",
		   pins = "LDPS",
		   manualMeasureRange = "5mA",
		   )
	0?NEXT,
	1?NEXT;	         

	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check5mA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeHigherThan5mA.txt",	   
		   highValue = "0.000006",
		   lowValue = "0.000002",
		   pins = "LDPS",
		   manualMeasureRange = "5mA",
		   )
	0?NEXT,
	1?NEXT;	     	   
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check50mA_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeLowerThan50mA.txt",	   
		   highValue = "0.049",
		   lowValue = "-0.049",
		   pins = "LDPS",
		   manualMeasureRange = "50mA",
		   )
	0?NEXT,
	1?NEXT;	     	     
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check50mA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeHigherThan50mA.txt",	   
		   highValue = "0.00006",
		   lowValue = "0.00002",
		   pins = "LDPS",
		   manualMeasureRange = "50mA",
		   )
	0?NEXT,
	1?NEXT;	     	
        
        
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check500mA_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeLowerThan500mA.txt",	   
		   highValue = "0.49",
		   lowValue = "-0.49",
		   pins = "LDPS",
		   manualMeasureRange = "500mA",
		   )
	0?NEXT,
	1?NEXT;	     	
        
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check500mA_Higher_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeHigherThan500mA.txt",	   
		   highValue = "0.0006",
		   lowValue = "0.0002",
		   pins = "LDPS",
		   manualMeasureRange = "500mA",
		   )
	0?NEXT,
	1?NEXT;	     	
        
    #################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_Check50mA_$testModeType_$testMode_$debugMode_P1   
    # Test Description: PROD mode passing Execution with 500uA MeasureRange 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_Check4A_Lower_$testModeType_$testMode_$debugMode_P1,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/CheckIsLDPSRangeLowerThan4A.txt",	   
		   highValue = "3.99",
		   lowValue = "-3.99",
		   pins = "LDPS",
		   manualMeasureRange = "4A",
		   clampLowValue = "-3.995",
		   clampHighValue = "3.995",
		   )
	0?NEXT,
	1?NEXT;	    
	
	
	      
        
        
        
        
############################# MeasureRangeCheck End ################################333        

	

		
	################################################################################################
    # Test Name:  VccContinuity_Execute_HDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.5V
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
	       forceValue = 0.5,
	       pins = "HDPS",
	       restoreForceValue = "RESTORE",
		   )
	0?NEXT,
	1?NEXT;	
	
	################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.1
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       forceValue = 0.1,
	       pins = "LDPS",
	       restoreForceValue = "RESTORE",
		   )
	0?NEXT,
	1?NEXT;		
	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;		
	

	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution. For "auto" measureRange, Tests out DC test re-execution when 
    #                               when a DC test measurement overflow occurs. 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM60mA.txt",
		   pins = "HDPS",
		   forceValue = "0.03",
		   lowValue = "0.0001",
		   highValue = "0.0002",
		   manualMeasureRange = "auto",	
		   )
	0?NEXT,
	1?NEXT;
	
		#################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution. For "auto" measureRange, Tests out DC test re-execution when 
    #                               when a DC test measurement overflow occurs. 
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM60mA.txt",
		   pins = "LDPS",
		   forceValue = "0.03",
		   lowValue = "0.0001",
		   highValue = "0.0002",
		   manualMeasureRange = "auto",	
		    bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	

}


######################################################################################333
#####################################################################################

COMPOSITE VccContinuity_Execute_PROD_Multi_$testMode_$debugMode_VSIMOnly
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS LDPS HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
    
        
#    ################################################################################################
#    # Test Name:  VccContinuity_Execute_HHH_Multi_$testModeType_AlarmBypass_$testMode_$debugMode_P1
#    # Test Description: Test instance is used to mitigate the Alarm sensitivity error seen with testing the LCDPS first in a composite
#    # HSDs: 2626
#    # Expected Behavior: Passes Execute. MeasureValue within the limits. 
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_HHH_Multi_$testModeType_AlarmBypass_$testMode_$debugMode_P1,
#	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
#		   manualMeasureRange = "50mA auto 50mA",		
#	       pins = "HDPS HDPS HDPS",	       
#		   )
#	0?NEXT,
#	1?NEXT;	    
            
	
    ################################################################################################
    # Test Name:  VccContinuity_Execute_HLH_Multi_$testModeType_50mAauto50mA_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange in 2nd pin. Test out code that
    #                        uses "auto" in middle of manualmeasureRange Parameter
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_50mAauto50mA_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
		   manualMeasureRange = "50mA auto 50mA",		
	       pins = "HDPS LDPS HDPS",
	       #bypassGlobal = "GL_FixTBDBypassGlobal",
	       
		   )
	0?NEXT,
	1?NEXT;	 
        
        
	
    ################################################################################################
    # Test Name:  VccContinuity_Execute_LHL_Multi_$testModeType_50mAauto50mA_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange in 2nd pin. Test out code that
    #                        uses "auto" in middle of manualmeasureRange Parameter
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_50mAauto50mA_$testMode_$debugMode_P1,
	        preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
		    manualMeasureRange = "50mA auto 50mA",		
	        pins = "LDPS HDPS LDPS",
		   )
	0?NEXT,
	1?NEXT;	 
        
        
	
	 ################################################################################################
    # Test Name:  VccContinuity_Execute_HLH_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.5V
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
	       forceValue = "0.1 0.2 0.5",
	       restoreForceValue = "RESTORE",
	        bypassGlobal = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.3
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
	       forceStartValue = "0.4 0.6 0.3",
	       pins = "LDPS HDPS LDPS",
	       restoreForceValue = "RESTORE",
		   )
	0?NEXT,
	1?NEXT;	
	
}


######################################################################################333
######################################################################################333


COMPOSITE VccContinuity_Execute_PROD_Single_$testMode_$debugMode_ISVMOnly
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );

	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
	       #lowValue = "0.001",
		   #highValue = "0.07",
		   #clampLowValue = "-0.087",
		   #clampHighValue = "0.087",
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
		#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
	       #lowValue = "0.001",
		   #highValue = "0.07",
		   #clampLowValue = "-0.087",
		   #clampHighValue = "0.087",
		   pins = "LDPS",
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;		
        

	
}



########################################################################################################3
###########################################################################################################




COMPOSITE VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_VSIMOnly
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );


    ################################################################################################
    # Test Name:  VccContinuity_Execute_HDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.5V
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
	       forceStartValue = 0.5,
	       forceStopValue = 0.9,
	       pins = "HDPS",
	       restoreForceValue = "RESTORE",
		   )
	0?NEXT,
	1?NEXT;	
	
	################################################################################################
    # Test Name: VccContinuity_Execute_LDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.1
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_auto_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       forceStartValue = 0.1,
	       pins = "LDPS",
	       restoreForceValue = "RESTORE",
	       bypassGlobal = "",
		   )
	0?NEXT,
	1?NEXT;	
	
		#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;		
	

	
#	#################################################################################################
#    # Test Name: VccContinuity_Execute_LDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0   
#    # Test Description: PROD mode failing Execution. For "auto" measureRange, Tests out DC test re-execution when 
#    #                               when a DC test measurement overflow occurs. 
#    # HSDs: 2626
#    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0,
#		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM60mA.txt",
#		   pins = "HDPS",
#		   forceValue = "0.03",
#		   lowValue = "0.0001",
#		   highValue = "0.0002",
#		   manualMeasureRange = "auto",	
#		   )
#	0?NEXT,
#	1?NEXT;
#	
#	#################################################################################################
#    # Test Name: VccContinuity_Execute_LDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0   
#    # Test Description: PROD mode failing Execution. For "auto" measureRange, Tests out DC test re-execution when 
#    #                               when a DC test measurement overflow occurs. 
#    # HSDs: 2626
#    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_auto_$testModeType_Overflow50mA_$testMode_$debugMode_F0,
#		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM60mA.txt",
#		   pins = "LDPS",
#		   forceValue = "0.03",
#		   lowValue = "0.0001",
#		   highValue = "0.0002",
#		   manualMeasureRange = "auto",	
#		   )
#	0?NEXT,
#	1?NEXT;
	
	

	
}

COMPOSITE VccContinuity_Execute_CHAR_Multi_$testMode_$debugMode_VSIMOnly
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS LDPS HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
	
	
	 ################################################################################################
    # Test Name:  VccContinuity_Execute_HLH_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.5V
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
	       forceStartValue = "0.1 0.2 0.3",
	       forceStopValue = "0.5 0.5 0.5",
		   forceStepValue = "0.1 0.1 0.1",
	       restoreForceValue = "RESTORE",
		   highValue = "0.051 0.051 0.051",
		    bypassGlobal = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange and RestoreVal feature turned on. 
    #               Note: only in VSIM mode will it have effect!! 
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Manually check... restore to 0.1
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_RestoreVal_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContVSIM20mA.txt",
	       forceStartValue = "0.1 0.1 0.1",
	       pins = "LDPS HDPS LDPS",
	       restoreForceValue = "RESTORE",
	        bypassGlobal = "",
		   )
	0?NEXT,
	1?NEXT;	
	
}

###########################################################################################

COMPOSITE VccContinuity_Execute_CHAR_Single_$testMode_$debugMode_ISVMOnly
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );


	
	
		#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LDPS_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   pins = "LDPS",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;		
}






######################################################################################333
######################################################################################333



COMPOSITE VccContinuity_$pins_$testModeType_$testMode_$debugMode_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		#pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
#    #################################################################################################
#    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_AlarmBypass_$testMode_$debugMode_P1
#    # Test Description: PROD mode passing Execution with auto MeasureRange
#    # HSDs: 2626
#    # Expected Behavior: Passes Execute. MeasureValue within the limits.
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_AlarmBypass_$testMode_$debugMode_P1,
#	       pins = "HDPS",
#		   )
#	0?NEXT,
#	1?NEXT;	
            
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_$testMode_$debugMode_P1,
	       #bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;	
	
	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_PauseMax_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. At limit of Pause range.
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. UserPause within Range
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_PauseMax_$testMode_$debugMode_P1,
	       userPause = 0.5,
		   )
	0?NEXT,
	1?NEXT;	
		
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_PauseMin_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. At limit of Pause range.
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. UserPause within Range
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_PauseMin_$testMode_$debugMode_P1,
	       userPause = 0.0001,
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_autoClamp_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. Tries out no parameter in clamps -> autoClamp selection
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Clamps selected
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_autoClamp_$testMode_$debugMode_P1,
	       clampLowValue = "",
		   clampHighValue = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	
	
	
    ############################ Start of LCDPS vc HCDPS workaround ###########################333
    ################################################################################################
		
###### Comment out the Hilimit to explore the HCDPS vs LCDPS Hi-limit results and to bypass LCDPS		


#	#################################################################################################
#    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_HiLimit_$testMode_$debugMode_F0
#    # Test Description: PROD mode failing Execution with auto MeasureRange at high limit
#    # HSDs: 2626
#    # Expected Behavior: Fails Execute. MeasureValue over the Hi limit.
#    # Collaterals Req: Pins and other resources in paramter list defined. assume Measured Value > 0.01
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_HiLimit_$testMode_$debugMode_F0,
#		   highValue = "0.019",
#		   lowValue = "0.0001",
#		   
#		   )
#	0?NEXT,
#	1?NEXT;	

  	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_HiLimit_$testMode_$debugMode_F0
    # Test Description: PROD mode failing Execution with auto MeasureRange at high limit
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue over the Hi limit.
    # Collaterals Req: Pins and other resources in paramter list defined. assume Measured Value > 0.01
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LDPS_auto_$testModeType_HiLimit_$testMode_$debugMode_F0,
		   highValue = "0.019",
		   lowValue = "0.0001",
		   pins = "LDPS",
		   bypassGlobal = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	
	 #################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_HiLimit_$testMode_$debugMode_F0
    # Test Description: PROD mode failing Execution with auto MeasureRange at high limit
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue over the Hi limit.
    # Collaterals Req: Pins and other resources in paramter list defined. assume Measured Value > 0.01
    # Clamp alarm occurs due to TSS in ISVM mode issue - BTS 11645.  Ignoring clamp alarm for now.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HDPS_auto_$testModeType_HiLimit_$testMode_$debugMode_F0,
		   highValue = "0.019",
		   lowValue = "0.0001",
		   pins = "HDPS",
		   ignoreAlarm = "CLAMP_ONLY"
		   )
	0?NEXT,
	1?NEXT;	
	
	######################################## End of LCDPS vc HCDPS workaround   ######################################################
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_LoLimit_$testMode_$debugMode_F0
    # Test Description: PROD mode failing Execution with auto MeasureRange at low limit
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the Low limit.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_LoLimit_$testMode_$debugMode_F0,
		   #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_DPS_Same_Val20mAmV.txt",
		   lowValue = "1.6",
		   highValue = "1.7",
		   )
	0?NEXT,
	1?NEXT;	
	
	
#	#################################################################################################
#    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_F0   
#    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
#    # HSDs: 2626
#    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
#		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
#		   )
#	0?NEXT,
#	1?NEXT;
#	
#	#################################################################################################
#    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_F0   
#    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
#    # HSDs: 2626
#    # Expected Behavior: Fails Execute. MeasureValue under the high limit. Measure Value clamps at clamphi
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
#		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
#		   )
#	0?NEXT,
#	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_Limit_LoEqualHi_$testMode_$debugMode_FNeg2
    # Test Description: Tests if valid input for LimitLo Equal limitHi for highValue and lowValue parameter.
    # HSDs: 2626
    # Expected Behavior: Passes for MeasuredValue at the LimitLo Equal limitHi. 
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_Limit_LoEqualHi_$testMode_$debugMode_P1,
	       preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_DPS_Same_Val20mAmV.txt",
	       highValue = "0.02",
		   lowValue = "0.02",)
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ItuffCheck_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. Check Ituff for correct datalogging
    # HSDs: 2626
    # Expected Behavior: Pass Execute. logs to summary file
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_$pins_auto_$testModeType_ItuffCheck_$testMode_$debugMode_P1,
		   datalogMode = ON,
		   )
	0?NEXT,
	1?NEXT;	

}



################################################################################
##############################################################################

COMPOSITE VccContinuity_HLH_Multi_$testModeType_$testMode_$debugMode_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		#pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
#     #################################################################################################
#    # Test Name: VccContinuity_Execute_HHH_Multi_$testModeType_AlarmBypass_$testMode_$debugMode_P1
#    # Test Description: PROD mode passing Execution with auto MeasureRange
#    # HSDs: 2626
#    # Expected Behavior: Passes Execute. MeasureValue within the limits.
#    # Collaterals Req: Pins and other resources in paramter list defined.
#    #################################################################################################    
#	tt_vcccontinuity(name = VccContinuity_Execute_HHH_Multi_$testModeType_AlarmBypass_$testMode_$debugMode_P1,
#	       pins = "HDPS HDPS HDPS",
#		   )
#	0?NEXT,
#	1?NEXT;	   
        
        
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_$testMode_$debugMode_P1,
		   #bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_PauseMax_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. At limit of Pause range.
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. UserPause within Range
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_PauseMax_$testMode_$debugMode_P1,
	       userPause = 0.5,
		   )
	0?NEXT,
	1?NEXT;	
		
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_PauseMin_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. At limit of Pause range.
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. UserPause within Range
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_PauseMin_$testMode_$debugMode_P1,
	       userPause = 0.0001,
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_autoClamp_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. Tries out no parameter in clamps -> autoClamp selection
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Clamps selected
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_autoClamp_$testMode_$debugMode_P1,
	       clampLowValue = "",
		   clampHighValue = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_HiLimit_$testMode_$debugMode_F0
    # Test Description: PROD mode failing Execution with auto MeasureRange at high limit
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue over the Hi limit.
    # Collaterals Req: Pins and other resources in paramter list defined. assume Measured Value > 0.01
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_HiLimit_$testMode_$debugMode_F0,
		   highValue = "1.6 0.019 1.6",
		   lowValue = "0.015 0.0001 0.015",
		   bypassGlobal = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_LoLimit_$testMode_$debugMode_F0
    # Test Description: mode failing Execution with auto MeasureRange at low limit with MultiPin setting; 2nd pin fails
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the Low limit. 2nd pin fails; 1st and 3rd pass
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_LoLimit_$testMode_$debugMode_F0,
		   #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_DPS_Same_Val20mAmV.txt",
		   lowValue = "0.015 1.6 0.015",
		   highValue = "1.6 1.7 1.6",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_ClampLo_$testMode_$debugMode_FNeg2  
    # Test Description: PROD mode failing Execution with auto MeasureRange at lo limit. ClampOut at Lo
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the lo limit/clamp. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_HLH_Multi_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",		
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_HLH_Multi_$testModeType_ClampHi_$testMode_$debugMode_FNeg2
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit/clamp. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_HLH_Multi_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",		
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ItuffCheck_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. Check Ituff for correct datalogging
    # HSDs: 2626 1407 1558 1394?
    # Expected Behavior: Pass Execute. logs to summary file
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_HLH_Multi_$testModeType_ItuffCheck_$testMode_$debugMode_P1,
		   datalogMode = ON,
		   )
	0?NEXT,
	1?NEXT;	
}


##############################################################################

COMPOSITE VccContinuity_LHL_Multi_$testModeType_$testMode_$debugMode_AllModes
{
	DEF (SEGNAME = $name,
		#testMode=ISVM, 
		level = "iValVccTC",
		#pins = "HDPS",
		#testModeType = "PRODUCTION",
		#forceValue = "0.1",
		#lowValue = "0.001",
		#highValue = "1.5",
		userPause = 0.015,
		#clampLowValue = "0.0",
		#clampHighValue = "1.8",
		manualMeasureRange = "auto",		
		#forceStartValue = 0.001,
		#forceStopValue = 0.2,
		#forceStepValue = 0.01,
		restoreForceValue = "DO_NOT_RESTORE",
 # Common Test Class Parameters
		preinstance = "",
		datalogMode = ON,
		#debugMode = VERBOSE, 
		bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
		#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits.
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_$testMode_$debugMode_P1,
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_PauseMax_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. At limit of Pause range.
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. UserPause within Range
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_PauseMax_$testMode_$debugMode_P1,
	       userPause = 0.5,
		   )
	0?NEXT,
	1?NEXT;	
		
	#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_PauseMin_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. At limit of Pause range.
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. UserPause within Range
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_PauseMin_$testMode_$debugMode_P1,
	       userPause = 0.0001,
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_autoClamp_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. Tries out no parameter in clamps -> autoClamp selection
    # HSDs: 2626
    # Expected Behavior: Passes Execute. MeasureValue within the limits. Clamps selected
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_autoClamp_$testMode_$debugMode_P1,
	       clampLowValue = "",
		   clampHighValue = "",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_HiLimit_$testMode_$debugMode_F0
    # Test Description: PROD mode failing Execution with auto MeasureRange at high limit
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue over the Hi limit.
    # Collaterals Req: Pins and other resources in paramter list defined. assume Measured Value > 0.01
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_HiLimit_$testMode_$debugMode_F0,
		   highValue = "1.6 0.019 1.6",
		   lowValue = "0.015 0.0001 0.015",

		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_LoLimit_$testMode_$debugMode_F0
    # Test Description: mode failing Execution with auto MeasureRange at low limit with MultiPin setting; 2nd pin fails
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the Low limit. 2nd pin fails; 1st and 3rd pass
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_LoLimit_$testMode_$debugMode_F0,
		   #preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccCont_Execute_DPS_Same_Val20mAmV.txt",
		   lowValue = "0.015 1.6 0.015",
		   highValue = "1.6 1.7 1.6",
		   )
	0?NEXT,
	1?NEXT;	
	
	
		#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_ClampLo_$testMode_$debugMode_FNeg2  
    # Test Description: PROD mode failing Execution with auto MeasureRange at lo limit. ClampOut a lo
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the low limit/clamp.. Measure Value clamps at clamplo
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LHL_Multi_$testModeType_ClampLo_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampLo.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",				
		   )
	0?NEXT,
	1?NEXT;
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_LHL_Multi_$testModeType_ClampHi_$testMode_$debugMode_FNeg2
    # Test Description: PROD mode failing Execution with auto MeasureRange at hi limit. ClampOut at Hi
    # HSDs: 2626
    # Expected Behavior: Fails Execute. MeasureValue under the high limit/clamp.. Measure Value clamps at clamphi
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = FixTBD_VccContinuity_Execute_LHL_Multi_$testModeType_ClampHi_$testMode_$debugMode_FNeg2,
		   preinstance = "iVal_utilityfunc!ModifyDUTModelCfgFile /DutModelInputFiles/VccContCheckClampHi.txt",
		   bypassGlobal = "GL_FixTBDBypassGlobal",
		   )
	0?NEXT,
	1?NEXT;	
	
	#################################################################################################
    # Test Name: VccContinuity_Execute_$pins_auto_$testModeType_ItuffCheck_$testMode_$debugMode_P1
    # Test Description: PROD mode passing Execution with auto MeasureRange. Check Ituff for correct datalogging
    # HSDs: 2626 1407 1558 1394?
    # Expected Behavior: Pass Execute. logs to summary file
    # Collaterals Req: Pins and other resources in paramter list defined.
    #################################################################################################    
	tt_vcccontinuity(name = VccContinuity_Execute_LHL_Multi_$testModeType_ItuffCheck_$testMode_$debugMode_P1,
		   datalogMode = ON,
		   )
	0?NEXT,
	1?NEXT;	
}

#David - Created this composite for any HSDs encountered.
COMPOSITE VccContinuity_HSD
{
	DEF (SEGNAME = $name,
		 testMode=VSIM, 
		 level = "",
		 pins = "LDPS",
		 testModeType = "PRODUCTION",
		 forceValue = "0.1",
		 lowValue = 0.019,
		 highValue = 0.031,
		 userPause = 0.015,
		 clampLowValue = -1,
		 clampHighValue = "1.9",
		 manualMeasureRange = "auto",		
		 forceStartValue = 0.1,
		 forceStopValue = 0.15,
		 forceStepValue = 0.05,
		 restoreForceValue = "DO_NOT_RESTORE",
		 preinstance = "",
		 ignoreAlarm = "NONE",
		 datalogMode = ON,
		 debugMode = VERBOSE, 
		 bypassGlobal = "",					                                #Datatype=STRING, OPTIONAL
		 postinstance = "iVal_utilityfunc!GenerateInstanceResults"			#Datatype=STRING, OPTIONAL
        );
        
        #Add new HSDs here...can be single instances or composites.
        VccContinuity_Execute_HSD2977 (COMPNAME = VccContinuity_Execute_HSD2977)
        0?NEXT,
        1?NEXT;
}

###########################################################
## Test cases for HSD 2977
## Run continuos DC tests in VSIM->ISVM->VSIM-ISVM to catch LCDPS clamp alarm 
## from any potential current spike during reference ON Opearting Mode Switch (test case causes alarm before Rev4.8.0
## as there was no Power Down between Instances with    diffefrenr Opearting Mode 
###########################################################


COMPOSITE VccContinuity_Execute_HSD2977
{
	
      tt_vcccontinuity(
        name = VccContinuity_Execute_HSD2977_$testMode_1_$outPort,
	testMode = ISVM,
	outPort = "P1",	
	lowValue = 0.95,
	highValue = 1.6,
	clampLowValue = 0.0,
	level = "iValVccTC_HSD2977_ISVM",
    )
	0?NEXT,
	1?NEXT;		
	
	tt_vcccontinuity(
	name = VccContinuity_Execute_HSD2977_$testMode_1_$outPort,
	outPort = "P1",
	testMode = VSIM,
	level = "iValVccTC_HSD2977_VSIM",
    )
	0?NEXT,
	1?NEXT;
	
	tt_vcccontinuity(
        name = VccContinuity_Execute_HSD2977_$testMode_2_$outPort,
	testMode = ISVM,
	outPort = "P1",	
	lowValue = 0.95,
	highValue = 1.6,
	clampLowValue = 0.0,
	level = "iValVccTC_HSD2977_ISVM",
    )
	0?NEXT,
	1?NEXT;	
	
      tt_vcccontinuity(
	name = VccContinuity_Execute_HSD2977_$testMode_2_$outPort,
	outPort = "P1",
	testMode = VSIM,
	level = "iValVccTC_HSD2977_VSIM",
    )
	0?NEXT,
	1?NEXT;
	
     tt_vcccontinuity(
        name = VccContinuity_Execute_HSD2977_$testMode_3_$outPort,
     	testMode = ISVM,
	outPort = "P1",	
	lowValue = 0.95,
	highValue = 1.6,
	clampLowValue = 0.0,
	level = "iValVccTC_HSD2977_ISVM",
    )
	0?NEXT,
	1?NEXT;	
   tt_vcccontinuity(
	name = VccContinuity_Execute_HSD2977_$testMode_3_$outPort,
	outPort = "P1",
	testMode = VSIM,
	level = "iValVccTC_HSD2977_VSIM",
    )
	0?NEXT,
	1?NEXT;
	
	
}






