#C:\evergreen\src\OASIS\templates\OASIS_pgt_resistance_tt.ph
#Import C:\intel\tpapps\CorTeX\OASIS\Rev4.8.1\templates\OASIS_tt.ph
INST tt_pgtresistance_noXML {
	NAME                                    $name;
	TEMPLATE                                iCPGTResistance;
	power_pin_level                         $powerPinLevel;                          #Datatype=STRING, REQUIRED
	power_pin_timings                      $powerPinTimings;                        #Datatype=STRING, OPTIONAL
	power_pin_patlist                      $powerPinPatlist;                        #Datatype=STRING, OPTIONAL
	measure_pin_level                       $measurePinLevel;                        #Datatype=STRING, REQUIRED
	measure_pin_timings                    $measurePinTimings;                      #Datatype=STRING, OPTIONAL
	measure_pin_patlist                    $measurePinPatlist;                      #Datatype=STRING, OPTIONAL
	equation                                   $equation;                                   #Datatype=STRING, OPTIONAL
	#input_file                             $inputFile;                              #Datatype=STRING, OPTIONAL
	power_pin                              $powerPin;                               #Datatype=STRING, OPTIONAL
	power_pin_trigger_type                 $powerPinTriggerType;                    #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	power_pin_force_value                  $powerPinForceValue;                     #Datatype=DOUBLE, OPTIONAL
	power_pin_measure_mode                 $powerPinMeasureMode;                    #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	power_pin_low_limit                    $powerPinLowLimit;                       #Datatype=DOUBLE, OPTIONAL
	power_pin_high_limit                   $powerPinHighLimit;                      #Datatype=DOUBLE, OPTIONAL
	power_pin_low_clamp                    $powerPinLowClamp;                       #Datatype=DOUBLE, OPTIONAL
	power_pin_high_clamp                   $powerPinHighClamp;                      #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_loop                 $powerPinMeasureLoop;                    #Datatype=INTEGER, OPTIONAL
	#power_pin_measure_delay                $powerPinMeasureDelay;                   #Datatype=DOUBLE, OPTIONAL
	statistic_type               		$statisticType;                  #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVERAGE, MEDIAN
	power_pin_manual_measure_range         $powerPinManualMeasureRange;             #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	power_pin_settling_time                $powerPinSettlingTime;                   #Datatype=DOUBLE, OPTIONAL
	power_pin_slew_rate                    $powerPinSlewRate;                       #Datatype=DOUBLE, OPTIONAL
	power_pin_relay_state                  $powerPinRelayState;                     #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	power_pin_output_pin_relay             $powerPinOutputPinRelay;                 #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	power_pin_power_raise_sequence         $powerPinPowerRaiseSequence;             #Datatype=DOUBLE, OPTIONAL
	power_pin_power_lower_sequence         $powerPinPowerLowerSequence;             #Datatype=DOUBLE, OPTIONAL
	power_pin_trigger_pin                  $powerPinTriggerPin;                     #Datatype=STRING, OPTIONAL
	#power_pin_filter_state                 $powerPinFilterState;                    #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#power_pin_bypass_cap                   $powerPinBypassCap;                      #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#power_pin_phase_comp                   $powerPinPhaseComp;                      #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	power_pin_start_trigger                $powerPinStartTrigger;                   #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	power_pin_stop_trigger                 $powerPinStopTrigger;                    #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	power_pin_trigger_bit                  $powerPinTriggerBit;                     #Datatype=INTEGER, OPTIONAL
	power_pin_sample_mode                  $powerPinSampleMode;                     #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	power_pin_sample_size                  $powerPinSampleSize;                     #Datatype=INTEGER, OPTIONAL
	power_pin_sampling_interval            $powerPinSamplingInterval;               #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	power_pin_shutdown_mode                $powerPinShutdownMode;                   #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	power_pin_shutdown_delay               $powerPinShutdownDelay;                  #Datatype=DOUBLE, OPTIONAL
	#power_pin_free_drive_time              $powerPinFreeDriveTime;                  #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_sequence             $powerPinMeasureSequence;                #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#power_pin_pre_cond_force               $powerPinPreCondForce;                   #Datatype=DOUBLE, OPTIONAL
	#power_pin_pre_cond_duration            $powerPinPreCondDuration;                #Datatype=DOUBLE, OPTIONAL
	#power_pin_load_cond                    $powerPinLoadCond;                       #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	power_pin_pins_to_disconnect           $powerPinPinsToDisconnect;               #Datatype=STRING, OPTIONAL
	power_pin_mask_pins                    $powerPinMaskPins;                       #Datatype=STRING, OPTIONAL
       power_pin_measurement_operand          $powerPinMeasurementOperand;             #Datatype=STRING, OPTIONAL
	measure_pins                           $measurePins;                            #Datatype=STRING, OPTIONAL
	restore_level                          $restoreLevel;                           #Datatype=STRING, OPTIONAL
	DV_mode                                $dvMode;                                 #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	measure_pin_trigger_type               $measurePinTriggerType;                  #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	measure_pin_force_value                $measurePinForceValue;                   #Datatype=DOUBLE, OPTIONAL
	measure_pin_measure_mode               $measurePinMeasureMode;                  #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	measure_pin_low_limit                  $measurePinLowLimit;                     #Datatype=DOUBLE, OPTIONAL
	measure_pin_high_limit                 $measurePinHighLimit;                    #Datatype=DOUBLE, OPTIONAL
	measure_pin_low_clamp                  $measurePinLowClamp;                     #Datatype=DOUBLE, OPTIONAL
	measure_pin_high_clamp                 $measurePinHighClamp;                    #Datatype=DOUBLE, OPTIONAL
	measure_pin_measure_loop               $measurePinMeasureLoop;                  #Datatype=INTEGER, OPTIONAL
	measure_pin_measure_delay              $measurePinMeasureDelay;                 #Datatype=DOUBLE, OPTIONAL
	measure_pin_manual_measure_range       $measurePinManualMeasureRange;           #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	measure_pin_settling_time              $measurePinSettlingTime;                 #Datatype=DOUBLE, OPTIONAL
	measure_pin_slew_rate                  $measurePinSlewRate;                     #Datatype=DOUBLE, OPTIONAL
	measure_pin_relay_state                $measurePinRelayState;                   #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	measure_pin_output_pin_relay           $measurePinOutputPinRelay;               #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#measure_pin_power_raise_sequence       $measurePinPowerRaiseSequence;           #Datatype=DOUBLE, OPTIONAL
	#measure_pin_power_lower_sequence       $measurePinPowerLowerSequence;           #Datatype=DOUBLE, OPTIONAL
	results_user_var                       $resultsUserVar;                         #Datatype=STRING, OPTIONAL
	#reference_user_vars                    $referenceUserVars;                      #Datatype=STRING, OPTIONAL
	ituff_tname                            $ituffTname;                             #Datatype=STRING, OPTIONAL
	#measure_pin_trigger_pin                $measurePinTriggerPin;                   #Datatype=STRING, OPTIONAL
	#measure_pin_filter_state               $measurePinFilterState;                  #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#measure_pin_bypass_cap                 $measurePinBypassCap;                    #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#measure_pin_phase_comp                 $measurePinPhaseComp;                    #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#measure_pin_start_trigger              $measurePinStartTrigger;                 #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#measure_pin_stop_trigger               $measurePinStopTrigger;                  #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	#measure_pin_trigger_bit                $measurePinTriggerBit;                   #Datatype=INTEGER, OPTIONAL
	#measure_pin_sample_mode                $measurePinSampleMode;                   #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#measure_pin_sample_size                $measurePinSampleSize;                   #Datatype=INTEGER, OPTIONAL
	#measure_pin_sampling_interval          $measurePinSamplingInterval;             #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#measure_pin_shutdown_mode              $measurePinShutdownMode;                 #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#measure_pin_shutdown_delay             $measurePinShutdownDelay;                #Datatype=DOUBLE, OPTIONAL
	#measure_pin_free_drive_time            $measurePinFreeDriveTime;                #Datatype=DOUBLE, OPTIONAL
	#measure_pin_measure_sequence           $measurePinMeasureSequence;              #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#measure_pin_pre_cond_force             $measurePinPreCondForce;                 #Datatype=DOUBLE, OPTIONAL
	#measure_pin_pre_cond_duration          $measurePinPreCondDuration;              #Datatype=DOUBLE, OPTIONAL
	#measure_pin_load_cond                  $measurePinLoadCond;                     #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	measure_pin_pins_to_disconnect         $measurePinPinsToDisconnect;             #Datatype=STRING, OPTIONAL
	measure_pin_mask_pins                  $measurePinMaskPins;                     #Datatype=STRING, OPTIONAL
       measure_pin_measurement_operand        $measurePinMeasurementOperand;           #Datatype=STRING, OPTIONAL
	vbump_mode                             $vbumpMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	vbump_force                            $vbumpForce;                             #Datatype=DOUBLE, OPTIONAL
	low_limit_user_var                     $lowLimitUserVar;                        #Datatype=STRING, OPTIONAL
	high_limit_user_var                    $highLimitUserVar;                       #Datatype=STRING, OPTIONAL
	datalog_type                           $datalogType;                            #Datatype=STRING, OPTIONAL
	use_dff                                $useDff;                                 #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	dff_token                              $dffToken;                               #Datatype=STRING, OPTIONAL
	DFF_SSID_type                          $dffSsidType;                            #Datatype=STRING, OPTIONAL  #Choices : PKG, WFR
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                             $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	#preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                           $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}

#C:\evergreen\src\OASIS\templates\OASIS_pgt_resistance_tt.ph
#Import C:\intel\tpapps\CorTeX\OASIS\Rev4.8.1\templates\OASIS_tt.ph
INST tt_pgtresistance_XML {
	NAME                                    $name;
	TEMPLATE                                iCPGTResistance;
	power_pin_level                         $powerPinLevel;                          #Datatype=STRING, REQUIRED
	power_pin_timings                      $powerPinTimings;                        #Datatype=STRING, OPTIONAL
	power_pin_patlist                      $powerPinPatlist;                        #Datatype=STRING, OPTIONAL
	measure_pin_level                       $measurePinLevel;                        #Datatype=STRING, REQUIRED
	measure_pin_timings                    $measurePinTimings;                      #Datatype=STRING, OPTIONAL
	measure_pin_patlist                    $measurePinPatlist;                      #Datatype=STRING, OPTIONAL
	#equation                                   $equation;                                   #Datatype=STRING, OPTIONAL
	input_file                             $inputFile;                              #Datatype=STRING, OPTIONAL
	#power_pin                              $powerPin;                               #Datatype=STRING, OPTIONAL
	#power_pin_trigger_type                 $powerPinTriggerType;                    #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	#power_pin_force_value                  $powerPinForceValue;                     #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_mode                 $powerPinMeasureMode;                    #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	#power_pin_low_limit                    $powerPinLowLimit;                       #Datatype=DOUBLE, OPTIONAL
	#power_pin_high_limit                   $powerPinHighLimit;                      #Datatype=DOUBLE, OPTIONAL
	#power_pin_low_clamp                    $powerPinLowClamp;                       #Datatype=DOUBLE, OPTIONAL
	#power_pin_high_clamp                   $powerPinHighClamp;                      #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_loop                 $powerPinMeasureLoop;                    #Datatype=INTEGER, OPTIONAL
	#power_pin_measure_delay                $powerPinMeasureDelay;                   #Datatype=DOUBLE, OPTIONAL
	#statistic_type               		$statisticType;                  #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVERAGE, MEDIAN
	#power_pin_manual_measure_range         $powerPinManualMeasureRange;             #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	#power_pin_settling_time                $powerPinSettlingTime;                   #Datatype=DOUBLE, OPTIONAL
	#power_pin_slew_rate                    $powerPinSlewRate;                       #Datatype=DOUBLE, OPTIONAL
	#power_pin_relay_state                  $powerPinRelayState;                     #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#power_pin_output_pin_relay             $powerPinOutputPinRelay;                 #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#power_pin_power_raise_sequence         $powerPinPowerRaiseSequence;             #Datatype=DOUBLE, OPTIONAL
	#power_pin_power_lower_sequence         $powerPinPowerLowerSequence;             #Datatype=DOUBLE, OPTIONAL
	#power_pin_trigger_pin                  $powerPinTriggerPin;                     #Datatype=STRING, OPTIONAL
	#power_pin_filter_state                 $powerPinFilterState;                    #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#power_pin_bypass_cap                   $powerPinBypassCap;                      #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#power_pin_phase_comp                   $powerPinPhaseComp;                      #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#power_pin_start_trigger                $powerPinStartTrigger;                   #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#power_pin_stop_trigger                 $powerPinStopTrigger;                    #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	#power_pin_trigger_bit                  $powerPinTriggerBit;                     #Datatype=INTEGER, OPTIONAL
	#power_pin_sample_mode                  $powerPinSampleMode;                     #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#power_pin_sample_size                  $powerPinSampleSize;                     #Datatype=INTEGER, OPTIONAL
	#power_pin_sampling_interval            $powerPinSamplingInterval;               #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#power_pin_shutdown_mode                $powerPinShutdownMode;                   #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#power_pin_shutdown_delay               $powerPinShutdownDelay;                  #Datatype=DOUBLE, OPTIONAL
	#power_pin_free_drive_time              $powerPinFreeDriveTime;                  #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_sequence             $powerPinMeasureSequence;                #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#power_pin_pre_cond_force               $powerPinPreCondForce;                   #Datatype=DOUBLE, OPTIONAL
	#power_pin_pre_cond_duration            $powerPinPreCondDuration;                #Datatype=DOUBLE, OPTIONAL
	#power_pin_load_cond                    $powerPinLoadCond;                       #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	#power_pin_pins_to_disconnect           $powerPinPinsToDisconnect;               #Datatype=STRING, OPTIONAL
	#power_pin_mask_pins                    $powerPinMaskPins;                       #Datatype=STRING, OPTIONAL
       power_pin_measurement_operand          $powerPinMeasurementOperand;             #Datatype=STRING, OPTIONAL
	#measure_pins                           $measurePins;                            #Datatype=STRING, OPTIONAL
	restore_level                          $restoreLevel;                           #Datatype=STRING, OPTIONAL
	#DV_mode                                $dvMode;                                 #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	#measure_pin_trigger_type               $measurePinTriggerType;                  #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	#measure_pin_force_value                $measurePinForceValue;                   #Datatype=DOUBLE, OPTIONAL
	#measure_pin_measure_mode               $measurePinMeasureMode;                  #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	#measure_pin_low_limit                  $measurePinLowLimit;                     #Datatype=DOUBLE, OPTIONAL
	#measure_pin_high_limit                 $measurePinHighLimit;                    #Datatype=DOUBLE, OPTIONAL
	#measure_pin_low_clamp                  $measurePinLowClamp;                     #Datatype=DOUBLE, OPTIONAL
	#measure_pin_high_clamp                 $measurePinHighClamp;                    #Datatype=DOUBLE, OPTIONAL
	#measure_pin_measure_loop               $measurePinMeasureLoop;                  #Datatype=INTEGER, OPTIONAL
	#measure_pin_measure_delay              $measurePinMeasureDelay;                 #Datatype=DOUBLE, OPTIONAL
	#measure_pin_manual_measure_range       $measurePinManualMeasureRange;           #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	#measure_pin_settling_time              $measurePinSettlingTime;                 #Datatype=DOUBLE, OPTIONAL
	##measure_pin_slew_rate                  $measurePinSlewRate;                     #Datatype=DOUBLE, OPTIONAL
	#measure_pin_relay_state                $measurePinRelayState;                   #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#measure_pin_output_pin_relay           $measurePinOutputPinRelay;               #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#measure_pin_power_raise_sequence       $measurePinPowerRaiseSequence;           #Datatype=DOUBLE, OPTIONAL
	#measure_pin_power_lower_sequence       $measurePinPowerLowerSequence;           #Datatype=DOUBLE, OPTIONAL
	#results_user_var                       $resultsUserVar;                         #Datatype=STRING, OPTIONAL
	#reference_user_vars                    $referenceUserVars;                      #Datatype=STRING, OPTIONAL
	#ituff_tname                            $ituffTname;                             #Datatype=STRING, OPTIONAL
	#measure_pin_trigger_pin                $measurePinTriggerPin;                   #Datatype=STRING, OPTIONAL
	#measure_pin_filter_state               $measurePinFilterState;                  #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#measure_pin_bypass_cap                 $measurePinBypassCap;                    #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#measure_pin_phase_comp                 $measurePinPhaseComp;                    #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#measure_pin_start_trigger              $measurePinStartTrigger;                 #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#measure_pin_stop_trigger               $measurePinStopTrigger;                  #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	#measure_pin_trigger_bit                $measurePinTriggerBit;                   #Datatype=INTEGER, OPTIONAL
	#measure_pin_sample_mode                $measurePinSampleMode;                   #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#measure_pin_sample_size                $measurePinSampleSize;                   #Datatype=INTEGER, OPTIONAL
	#measure_pin_sampling_interval          $measurePinSamplingInterval;             #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#measure_pin_shutdown_mode              $measurePinShutdownMode;                 #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#measure_pin_shutdown_delay             $measurePinShutdownDelay;                #Datatype=DOUBLE, OPTIONAL
	#measure_pin_free_drive_time            $measurePinFreeDriveTime;                #Datatype=DOUBLE, OPTIONAL
	#measure_pin_measure_sequence           $measurePinMeasureSequence;              #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#measure_pin_pre_cond_force             $measurePinPreCondForce;                 #Datatype=DOUBLE, OPTIONAL
	#measure_pin_pre_cond_duration          $measurePinPreCondDuration;              #Datatype=DOUBLE, OPTIONAL
	#measure_pin_load_cond                  $measurePinLoadCond;                     #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	#measure_pin_pins_to_disconnect         $measurePinPinsToDisconnect;             #Datatype=STRING, OPTIONAL
	#measure_pin_mask_pins                  $measurePinMaskPins;                     #Datatype=STRING, OPTIONAL
       measure_pin_measurement_operand        $measurePinMeasurementOperand;           #Datatype=STRING, OPTIONAL
	#vbump_mode                             $vbumpMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	#vbump_force                            $vbumpForce;                             #Datatype=DOUBLE, OPTIONAL
	#low_limit_user_var                     $lowLimitUserVar;                        #Datatype=STRING, OPTIONAL
	#high_limit_user_var                    $highLimitUserVar;                       #Datatype=STRING, OPTIONAL
	#datalog_type                           $datalogType;                            #Datatype=STRING, OPTIONAL
	#use_dff                                $useDff;                                 #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#DFF_SSID_type                          $dffSsidType;                            #Datatype=STRING, OPTIONAL  #Choices : PKG, WFR
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                             $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	#preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                           $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}

#C:\evergreen\src\OASIS\templates\OASIS_pgt_resistance_tt.ph
#Import C:\intel\tpapps\CorTeX\OASIS\Rev4.8.1\templates\OASIS_tt.ph
INST tt_pgtresistance_ParamMod {
	NAME                                    $name;
	TEMPLATE                                iCPGTResistance;
	power_pin_level                         $powerPinLevel;                          #Datatype=STRING, REQUIRED
	power_pin_timings                      $powerPinTimings;                        #Datatype=STRING, OPTIONAL
	power_pin_patlist                      $powerPinPatlist;                        #Datatype=STRING, OPTIONAL
	measure_pin_level                       $measurePinLevel;                        #Datatype=STRING, REQUIRED
	measure_pin_timings                    $measurePinTimings;                      #Datatype=STRING, OPTIONAL
	measure_pin_patlist                    $measurePinPatlist;                      #Datatype=STRING, OPTIONAL
	equation                                   $equation;                                   #Datatype=STRING, OPTIONAL
	#input_file                             $inputFile;                              #Datatype=STRING, OPTIONAL
	power_pin                              $powerPin;                               #Datatype=STRING, OPTIONAL
	power_pin_trigger_type                 $powerPinTriggerType;                    #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	power_pin_force_value                  $powerPinForceValue;                     #Datatype=DOUBLE, OPTIONAL
	power_pin_measure_mode                 $powerPinMeasureMode;                    #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	power_pin_low_limit                    $powerPinLowLimit;                       #Datatype=DOUBLE, OPTIONAL
	power_pin_high_limit                   $powerPinHighLimit;                      #Datatype=DOUBLE, OPTIONAL
	power_pin_low_clamp                    $powerPinLowClamp;                       #Datatype=DOUBLE, OPTIONAL
	power_pin_high_clamp                   $powerPinHighClamp;                      #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_loop                 $powerPinMeasureLoop;                    #Datatype=INTEGER, OPTIONAL
	#power_pin_measure_delay                $powerPinMeasureDelay;                   #Datatype=DOUBLE, OPTIONAL
	statistic_type               		$statisticType;                  #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVERAGE, MEDIAN
	power_pin_manual_measure_range         $powerPinManualMeasureRange;             #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	power_pin_settling_time                $powerPinSettlingTime;                   #Datatype=DOUBLE, OPTIONAL
	power_pin_slew_rate                    $powerPinSlewRate;                       #Datatype=DOUBLE, OPTIONAL
	power_pin_relay_state                  $powerPinRelayState;                     #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	power_pin_output_pin_relay             $powerPinOutputPinRelay;                 #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	power_pin_power_raise_sequence         $powerPinPowerRaiseSequence;             #Datatype=DOUBLE, OPTIONAL
	power_pin_power_lower_sequence         $powerPinPowerLowerSequence;             #Datatype=DOUBLE, OPTIONAL
	power_pin_trigger_pin                  $powerPinTriggerPin;                     #Datatype=STRING, OPTIONAL
	#power_pin_filter_state                 $powerPinFilterState;                    #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#power_pin_bypass_cap                   $powerPinBypassCap;                      #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#power_pin_phase_comp                   $powerPinPhaseComp;                      #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	power_pin_start_trigger                $powerPinStartTrigger;                   #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	power_pin_stop_trigger                 $powerPinStopTrigger;                    #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	power_pin_trigger_bit                  $powerPinTriggerBit;                     #Datatype=INTEGER, OPTIONAL
	power_pin_sample_mode                  $powerPinSampleMode;                     #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	power_pin_sample_size                  $powerPinSampleSize;                     #Datatype=INTEGER, OPTIONAL
	power_pin_sampling_interval            $powerPinSamplingInterval;               #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	power_pin_shutdown_mode                $powerPinShutdownMode;                   #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	power_pin_shutdown_delay               $powerPinShutdownDelay;                  #Datatype=DOUBLE, OPTIONAL
	#power_pin_free_drive_time              $powerPinFreeDriveTime;                  #Datatype=DOUBLE, OPTIONAL
	#power_pin_measure_sequence             $powerPinMeasureSequence;                #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#power_pin_pre_cond_force               $powerPinPreCondForce;                   #Datatype=DOUBLE, OPTIONAL
	#power_pin_pre_cond_duration            $powerPinPreCondDuration;                #Datatype=DOUBLE, OPTIONAL
	#power_pin_load_cond                    $powerPinLoadCond;                       #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	power_pin_pins_to_disconnect           $powerPinPinsToDisconnect;               #Datatype=STRING, OPTIONAL
	power_pin_mask_pins                    $powerPinMaskPins;                       #Datatype=STRING, OPTIONAL
       power_pin_measurement_operand          $powerPinMeasurementOperand;             #Datatype=STRING, OPTIONAL
	measure_pins                           $measurePins;                            #Datatype=STRING, OPTIONAL
	restore_level                          $restoreLevel;                           #Datatype=STRING, OPTIONAL
	DV_mode                                $dvMode;                                 #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	measure_pin_trigger_type               $measurePinTriggerType;                  #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	measure_pin_force_value                $measurePinForceValue;                   #Datatype=DOUBLE, OPTIONAL
	measure_pin_measure_mode               $measurePinMeasureMode;                  #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	measure_pin_low_limit                  $measurePinLowLimit;                     #Datatype=DOUBLE, OPTIONAL
	measure_pin_high_limit                 $measurePinHighLimit;                    #Datatype=DOUBLE, OPTIONAL
	measure_pin_low_clamp                  $measurePinLowClamp;                     #Datatype=DOUBLE, OPTIONAL
	measure_pin_high_clamp                 $measurePinHighClamp;                    #Datatype=DOUBLE, OPTIONAL
	measure_pin_measure_loop               $measurePinMeasureLoop;                  #Datatype=INTEGER, OPTIONAL
	measure_pin_measure_delay              $measurePinMeasureDelay;                 #Datatype=DOUBLE, OPTIONAL
	measure_pin_manual_measure_range       $measurePinManualMeasureRange;           #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	measure_pin_settling_time              $measurePinSettlingTime;                 #Datatype=DOUBLE, OPTIONAL
	measure_pin_slew_rate                  $measurePinSlewRate;                     #Datatype=DOUBLE, OPTIONAL
	measure_pin_relay_state                $measurePinRelayState;                   #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	measure_pin_output_pin_relay           $measurePinOutputPinRelay;               #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#measure_pin_power_raise_sequence       $measurePinPowerRaiseSequence;           #Datatype=DOUBLE, OPTIONAL
	#measure_pin_power_lower_sequence       $measurePinPowerLowerSequence;           #Datatype=DOUBLE, OPTIONAL
	results_user_var                       $resultsUserVar;                         #Datatype=STRING, OPTIONAL
	#reference_user_vars                    $referenceUserVars;                      #Datatype=STRING, OPTIONAL
	ituff_tname                            $ituffTname;                             #Datatype=STRING, OPTIONAL
	#measure_pin_trigger_pin                $measurePinTriggerPin;                   #Datatype=STRING, OPTIONAL
	#measure_pin_filter_state               $measurePinFilterState;                  #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#measure_pin_bypass_cap                 $measurePinBypassCap;                    #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#measure_pin_phase_comp                 $measurePinPhaseComp;                    #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#measure_pin_start_trigger              $measurePinStartTrigger;                 #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#measure_pin_stop_trigger               $measurePinStopTrigger;                  #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	#measure_pin_trigger_bit                $measurePinTriggerBit;                   #Datatype=INTEGER, OPTIONAL
	#measure_pin_sample_mode                $measurePinSampleMode;                   #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#measure_pin_sample_size                $measurePinSampleSize;                   #Datatype=INTEGER, OPTIONAL
	#measure_pin_sampling_interval          $measurePinSamplingInterval;             #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#measure_pin_shutdown_mode              $measurePinShutdownMode;                 #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#measure_pin_shutdown_delay             $measurePinShutdownDelay;                #Datatype=DOUBLE, OPTIONAL
	#measure_pin_free_drive_time            $measurePinFreeDriveTime;                #Datatype=DOUBLE, OPTIONAL
	#measure_pin_measure_sequence           $measurePinMeasureSequence;              #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#measure_pin_pre_cond_force             $measurePinPreCondForce;                 #Datatype=DOUBLE, OPTIONAL
	#measure_pin_pre_cond_duration          $measurePinPreCondDuration;              #Datatype=DOUBLE, OPTIONAL
	#measure_pin_load_cond                  $measurePinLoadCond;                     #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	measure_pin_pins_to_disconnect         $measurePinPinsToDisconnect;             #Datatype=STRING, OPTIONAL
	measure_pin_mask_pins                  $measurePinMaskPins;                     #Datatype=STRING, OPTIONAL
       measure_pin_measurement_operand        $measurePinMeasurementOperand;           #Datatype=STRING, OPTIONAL
	vbump_mode                             $vbumpMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	vbump_force                            $vbumpForce;                             #Datatype=DOUBLE, OPTIONAL
	low_limit_user_var                     $lowLimitUserVar;                        #Datatype=STRING, OPTIONAL
	high_limit_user_var                    $highLimitUserVar;                       #Datatype=STRING, OPTIONAL
	datalog_type                           $datalogType;                            #Datatype=STRING, OPTIONAL
	use_dff                                $useDff;                                 #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	dff_token                              $dffToken;                               #Datatype=STRING, OPTIONAL
	DFF_SSID_type                          $dffSsidType;                            #Datatype=STRING, OPTIONAL  #Choices : PKG, WFR
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                             $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                           $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}
