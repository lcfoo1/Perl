COMPOSITE PGTCont
{
	PGTCont_Verify (COMPNAME = PGTCont_Verify)
	0?NEXT,
	1?NEXT;

	PGTCont_Execute (COMPNAME = PGTCont_Execute)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTCont_Obnoxious
{
	PGTCont_Obnoxious_Verify (COMPNAME = PGTCont_Obnoxious_Verify)
	0?NEXT,
	1?NEXT;

	PGTCont_Obnoxious_Execute (COMPNAME = PGTCont_Obnoxious_Execute)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTCont_Disabled
{
	PGTCont_Disabled_Verify (COMPNAME = PGTCont_Disabled_Verify)
	0?NEXT,
	1?NEXT;

	PGTCont_Disabled_Execute (COMPNAME = PGTCont_Disabled_Execute)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTCont_Obnoxious_Verify
{
	tt_pgtcontinuityXML(name = PGTContExecute_XML_OBNOXIOUS_Bypass_FNeg1,
		bypassGlobal = "Kookla_Fran_and_Ollie",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;


	PGTContVerify_DEBUG_OBNOXIOUS (COMPNAME = PGTContVerify_DEBUG_OBNOXIOUS)
	0?NEXT,
	1?NEXT;

#  	PGTContVerify_DEBUG_VERBOSE (COMPNAME = PGTContVerify_DEBUG_VERBOSE)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContVerify_DEBUG_BRIEF (COMPNAME = PGTContVerify_DEBUG_BRIEF)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContVerify_DEBUG_DISABLED (COMPNAME = PGTContVerify_DEBUG_DISABLED)
#  	0?NEXT,
#  	1?NEXT;
 
	PGTContVerify_PARAM_MOD (COMPNAME = PGTContVerify_PARAM_MOD)
  	0?NEXT,
  	1?NEXT;
}

COMPOSITE PGTCont_Disabled_Verify
{
	tt_pgtcontinuityXML(name = PGTContExecute_XML_DISABLED_Bypass_FNeg1,
		bypassGlobal = "Kookla_Fran_and_Ollie",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;


#	PGTContVerify_DEBUG_OBNOXIOUS (COMPNAME = PGTContVerify_DEBUG_OBNOXIOUS)
#	0?NEXT,
#	1?NEXT;

#  	PGTContVerify_DEBUG_VERBOSE (COMPNAME = PGTContVerify_DEBUG_VERBOSE)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContVerify_DEBUG_BRIEF (COMPNAME = PGTContVerify_DEBUG_BRIEF)
#  	0?NEXT,
#  	1?NEXT;
 
  	PGTContVerify_DEBUG_DISABLED (COMPNAME = PGTContVerify_DEBUG_DISABLED)
  	0?NEXT,
  	1?NEXT;
 
	PGTContVerify_PARAM_MOD (COMPNAME = PGTContVerify_PARAM_MOD)
  	0?NEXT,
  	1?NEXT;
}

COMPOSITE PGTCont_Verify
{
	tt_pgtcontinuityXML(name = PGTContExecute_XML_Bypass_FNeg1,
		bypassGlobal = "Kookla_Fran_and_Ollie",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;


	PGTContVerify_DEBUG_OBNOXIOUS (COMPNAME = PGTContVerify_DEBUG_OBNOXIOUS)
	0?NEXT,
	1?NEXT;

#  	PGTContVerify_DEBUG_VERBOSE (COMPNAME = PGTContVerify_DEBUG_VERBOSE)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContVerify_DEBUG_BRIEF (COMPNAME = PGTContVerify_DEBUG_BRIEF)
#  	0?NEXT,
#  	1?NEXT;
 
  	PGTContVerify_DEBUG_DISABLED (COMPNAME = PGTContVerify_DEBUG_DISABLED)
  	0?NEXT,
  	1?NEXT;
 
	PGTContVerify_PARAM_MOD (COMPNAME = PGTContVerify_PARAM_MOD)
  	0?NEXT,
  	1?NEXT;
}

COMPOSITE PGTCont_Obnoxious_Execute
{
	tt_pgtcontinuityXML(name = PGTContExecute_XML_Obnoxious_Bypass_P0,
		bypassGlobal = "GL_Bypass_PGTCont_0",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;


    	Gen_Bypass_Test ( COMPNAME = GEN_BYPASS_OBNOXIOUS_TEST,
                      BypassInstName = "PGTContExecute_Bypass_Obnoxious_Test_P2",
                      BypassVarName = "SEDCBPG1",
                      ExpectedPort = "P1",  
                      NewBypassVal = "2"  
                    )
                     0?NEXT,
                     1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_Bypass_Obnoxious_Test_P2,
		bypassGlobal = "SEDCBPG1",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",                
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_Obnoxious_Bypass_P1,
		bypassGlobal = "GL_Bypass_PGTCont_1",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",                
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	PGTContExecute_DEBUG_OBNOXIOUS (COMPNAME = PGTContExecute_DEBUG_OBNOXIOUS)
	0?NEXT,
	1?NEXT;

#  	PGTContExecute_DEBUG_VERBOSE (COMPNAME = PGTContExecute_DEBUG_VERBOSE)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContExecute_DEBUG_BRIEF (COMPNAME = PGTContExecute_DEBUG_BRIEF)
#  	0?NEXT,
#  	1?NEXT;
 
#   	PGTContExecute_DEBUG_DISABLED (COMPNAME = PGTContExecute_DEBUG_DISABLED)
#  	0?NEXT,
#  	1?NEXT;
}

COMPOSITE PGTCont_Disabled_Execute
{
	tt_pgtcontinuityXML(name = PGTContExecute_XML_Disabled_Bypass_P0,
		bypassGlobal = "GL_Bypass_PGTCont_0",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;


    Gen_Bypass_Test ( COMPNAME = GEN_BYPASS_DISABLED_TEST,
                      BypassInstName = "PGTContExecute_Bypass_Disabled_Test_P2",
                      BypassVarName = "SEDCBPG1",
                      ExpectedPort = "P1",  
                      NewBypassVal = "2"  
                    )
                     0?NEXT,
                     1?NEXT;
	tt_pgtcontinuityXML(name = PGTContExecute_Bypass_Disabled_Test_P2,
		bypassGlobal = "SEDCBPG1",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",                
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_Disabled_Bypass_P1,
		bypassGlobal = "GL_Bypass_PGTCont_1",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",                
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

#	PGTContExecute_DEBUG_OBNOXIOUS (COMPNAME = PGTContExecute_DEBUG_OBNOXIOUS)
#	0?NEXT,
#	1?NEXT;

#  	PGTContExecute_DEBUG_VERBOSE (COMPNAME = PGTContExecute_DEBUG_VERBOSE)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContExecute_DEBUG_BRIEF (COMPNAME = PGTContExecute_DEBUG_BRIEF)
#  	0?NEXT,
#  	1?NEXT;
 
   	PGTContExecute_DEBUG_DISABLED (COMPNAME = PGTContExecute_DEBUG_DISABLED)
  	0?NEXT,
  	1?NEXT;
}


COMPOSITE PGTCont_Execute
{
	tt_pgtcontinuityXML(name = PGTContExecute_XML_Bypass_P0,
		bypassGlobal = "GL_Bypass_PGTCont_0",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;


    Gen_Bypass_Test ( COMPNAME = GEN_BYPASS_TEST,
                      BypassInstName = "PGTContExecute_Bypass_Test_P2",
                      BypassVarName = "SEDCBPG1",
                      ExpectedPort = "P1",  
                      NewBypassVal = "2"  
                    )
                     0?NEXT,
                     1?NEXT;
	tt_pgtcontinuityXML(name = PGTContExecute_Bypass_Test_P2,
		bypassGlobal = "SEDCBPG1",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",                
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_OBNOXIOUS_Bypass_P1,
		bypassGlobal = "GL_Bypass_PGTCont_1",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
                debugMode = "OBNOXIOUS",
              measurementOperand = "",                
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	PGTContExecute_DEBUG_OBNOXIOUS (COMPNAME = PGTContExecute_DEBUG_OBNOXIOUS)
	0?NEXT,
	1?NEXT;

#  	PGTContExecute_DEBUG_VERBOSE (COMPNAME = PGTContExecute_DEBUG_VERBOSE)
#  	0?NEXT,
#  	1?NEXT;
 
#  	PGTContExecute_DEBUG_BRIEF (COMPNAME = PGTContExecute_DEBUG_BRIEF)
#  	0?NEXT,
#  	1?NEXT;
 
   	PGTContExecute_DEBUG_DISABLED (COMPNAME = PGTContExecute_DEBUG_DISABLED)
  	0?NEXT,
  	1?NEXT;
}

COMPOSITE PGTContVerify_DEBUG_DISABLED
{
	DEF (	debugMode = "DISABLED");

	PGTContVerify_$debugMode_Invalid_Params (COMPNAME = PGTContVerify_$debugMode_Invalid_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_Required_Params (COMPNAME = PGTContVerify_$debugMode_Required_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_XML (COMPNAME = PGTContVerify_$debugMode_XML)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContVerify_DEBUG_BRIEF
{
	DEF (	debugMode = "BRIEF");

	PGTContVerify_$debugMode_Invalid_Params (COMPNAME = PGTContVerify_$debugMode_Invalid_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_Required_Params (COMPNAME = PGTContVerify_$debugMode_Required_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_XML (COMPNAME = PGTContVerify_$debugMode_XML)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContVerify_DEBUG_VERBOSE
{
	DEF (	debugMode = "VERBOSE");

	PGTContVerify_$debugMode_Invalid_Params (COMPNAME = PGTContVerify_$debugMode_Invalid_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_Required_Params (COMPNAME = PGTContVerify_$debugMode_Required_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_XML (COMPNAME = PGTContVerify_$debugMode_XML)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContVerify_DEBUG_OBNOXIOUS
{
	DEF (	debugMode = "OBNOXIOUS");

	PGTContVerify_$debugMode_Invalid_Params (COMPNAME = PGTContVerify_$debugMode_Invalid_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_Required_Params (COMPNAME = PGTContVerify_$debugMode_Required_Params)
	0?NEXT,
	1?NEXT;

	PGTContVerify_$debugMode_XML (COMPNAME = PGTContVerify_$debugMode_XML)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContVerify_$debugMode_Invalid_Params
{
	DEF (	SEGNAME = $name,
		triggerType = "SNDC",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		dvMode = "DISABLED",
	        slewRate = "50.0",
		relayState = "CLOSE",
		pin = "HDPS",
		forceValue = "0.350",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0,UFG_PGTCont_LowLimitC1,UFG_PGTCont_LowLimitC2",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0,UFG_PGTCont_HighLimitC1,UFG_PGTCont_HighLimitC2",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		measureMode = "ISVM",
		measureLoop = 25,
		statisticType = "AVERAGE",
		measureDelay = 0.0,
		manualMeasureRange = "AUTO",
		userVar = "UFG_PGTContC0,UFG_PGTContC1,UFG_PGTContC2",
		ituffTname = "PGT_ContC0,PGT_ContC1,PGT_ContC2",
                datalogType ="ituff,console,uservar",
                datalogMode = "ON"
                pinsToDisconnect = "P003",
                maskPins = "P003",
                phaseComp = "HIGHCAP",
                shutdownDelay = "0.015",
                settlingTime = "0.015",
                triggerPin = "PMTrig001",
                triggerBit = "1",
                vbumpMode = "ENABLED",
                vbumpForce = "0.750",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_level_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       level = "some-kind-of-levles")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_timing_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       timings = "some-kind-of-levles")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_patlist_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       patlist = "some-kind-of-levles")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_empty_patlist_$debugMode_F0,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       patlist = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_pin_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       pin = "some kind of levles")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_lowLimitUserVar_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowLimitUserVar = "the,quickred,fox")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_highLimitUserVar_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highLimitUserVar = "the,quickred,fix")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_double_force_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       forceValue = "YA.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_double_lowLimit_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowLimit = "YA.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_double_highLimit_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highLimit = "YA.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_double_lowClamp_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowClamp = "YA.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_double_highClamp_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highClamp = "YA.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_measureLoop_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       measureLoop = "-5")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_measureDelay_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       measureDelay = "-5")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_userVar_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       userVar = "the,quick,.red,fox")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_disconnectPin_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
                       pinsToDisconnect = "DaBuoogyMan")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_maskPin_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
                       maskPins = "DaBuoogyMan")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_force_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       forceValue = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_lowLimit_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowLimit = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_highLimit_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highLimit = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_lowClamp_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowClamp = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_highClamp_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highClamp = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_negativeShutdownDelay_FNeg1,
                       shutdownDelay = "-10.0",
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highClamp = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_Invalid_value_negativeSettlingTime_FNeg1,
                       settlingTime = "-10.0",
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highClamp = "5000.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_$manualMeasureRange_invalid_lowClamp_param_LCDPS_ISVM_FNeg1,
		pin = "LDPS",
		slewRate = "50.0",
		relayState = "CLOSE",
		forceValue = "0.025"
		lowLimit = "0.010"
		highLimit = "0.090",
		lowClamp = "-1.00",
		highClamp = "3.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_MeasurmementOperands_Operand0_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       $measurementOperand = "0")
	0?NEXT,
	1?NEXT;
	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_MeasurmementOperands_Operand256_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       $measurementOperand = "256")
	0?NEXT,
	1?NEXT;
	tt_pgtcontinuity_noXML(name = PGTContVerify_Invalid_MeasurmementOperands_OperandFF_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       $measurementOperand = "FF")
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContVerify_$debugMode_Required_Params
{
	DEF (	SEGNAME = $name,
		triggerType = "SNDC",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		dvMode = "DISABLED",
		pin = "HDPS",
		forceValue = "0.350",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0,UFG_PGTCont_LowLimitC1,UFG_PGTCont_LowLimitC2",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0,UFG_PGTCont_HighLimitC1,UFG_PGTCont_HighLimitC2",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		measureMode = "ISVM",
		measureLoop = 25,
		statisticType = "AVERAGE",
		measureDelay = 0.0,
		manualMeasureRange = "AUTO",
		userVar = "UFG_PGTContC0,UFG_PGTContC1,UFG_PGTContC2",
		ituffTname = "PGT_ContC0,PGT_ContC1,PGT_ContC2",
                datalogType ="ituff,console,uservar",
                datalogMode = "ON"
                pinsToDisconnect = "P003",
                maskPins = "P003",
                phaseComp = "HIGHCAP",
                shutdownDelay = "0.015",
                settlingTime = "0.015",
                triggerPin = "PMTrig001",
                triggerBit = "1",
                vbumpMode = "ENABLED",
                vbumpForce = "0.750",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_level_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       level = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_timing_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       timings = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_force_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       forceValue = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_lowLimit_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowLimit = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_highLimit_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highLimit = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_lowClamp_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       lowClamp = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_No_highClamp_$debugMode_FNeg1,
                       slewRate = "50.0",
		       relayState = "CLOSE",
		       highClamp = "")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_LCDPS_VSIM_Invalid_clamps_FNeg1,
		slewRate = "50.0",
                phaseComp = "HIGHCAP",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "HDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.020",
		lowClamp = "-0.005",
		highClamp = "0.025")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_HIGHCAP_LCDPS_VSIM_Invalid_clamps_FNeg1,
		slewRate = "50.0",
                phaseComp = "HIGHCAP",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "LDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.025",
		lowClamp = "-0.005",
		highClamp = "0.025")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_HIGHSPEED_HCDPS_VSIM_Invalid_setup_FNeg1,
		timings = "",
		patlist = "",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0",
		userVar = "UFG_PGTContC0",
		ituffTname = "PGT_ContC0",
		slewRate = "50.0",
                phaseComp = "HIGHSPEED",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "HDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.025",
		lowClamp = "-0.500",
		highClamp = "0.500")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_hcdps_VSIM_50mA_Invalid_setup_FNeg1,
                shutdownDelay = "-0.015",
                settlingTime = "-0.015",
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "HDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-1.0",
		highClamp = "1.8",
		manualMeasureRange = "50mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_hcdps_VSIM_500mA_Invalid_setup_FNeg1,
                shutdownDelay = "-0.015",
                settlingTime = "-0.015",
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "HDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-1.0",
		highClamp = "1.8",
		manualMeasureRange = "500mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_hcdps_VSIM_16A_Invalid_setup_FNeg1,
                shutdownDelay = "-0.015",
                settlingTime = "-0.015",
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "HDPS",	
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-1.0",
		highClamp = "1.8",
		manualMeasureRange = "16A")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContVerify_$debugMode_param_hcdps_VSIM_128mA_Invalid_setup_FNeg1,
                shutdownDelay = "-0.015",
                settlingTime = "-0.015",
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "HDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-1.0",
		highClamp = "1.8",
		manualMeasureRange = "128mA")
	0?NEXT,
	1?NEXT;


}

COMPOSITE PGTContVerify_$debugMode_XML
{
	DEF (	SEGNAME = $name,
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
                datalogMode = "ON",
              measurementOperand = "",                
		bypassGlobal = "",
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadFileName_XML_$debugMode_FNeg1,
			inputFile = "./LFilesGT-Continuity-BadSyntax.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadSyntax_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadSyntax.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadLowLimitUserVar_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadLowLimitUserVar.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadHighLimitUserVar_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadHighLimitUserVar.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadOutputUserVar_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadOutputUserVar.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadPin_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadPin.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadLevels_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadLevels.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadTiming_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadTiming.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadPlist_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadPlist.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadDisConnectPin_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadDisConnect.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_BadMaskPin_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadMask.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_UndefinedValues_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-ContinuityUndefinedValues.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_Invalid_MeasurmementOperands_Operand0_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadOperand0.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_Invalid_MeasurmementOperands_Operand256_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadOperand256.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContVerify_Invalid_Invalid_MeasurmementOperands_OperandFF_XML_$debugMode_FNeg1,
			inputFile = "./PGTCont/PGT-Continuity-BadOperandFF.xml")
	0?NEXT,
	1?NEXT;
}


COMPOSITE PGTContVerify_PARAM_MOD
{
	DEF (	SEGNAME = $name,
		triggerType = "SNDC",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		dvMode = "DISABLED",
		pin = "P001",
              measurementOperand = "",		
		forceValue = "0.001",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0,UFG_PGTCont_LowLimitC1,UFG_PGTCont_LowLimitC2",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0,UFG_PGTCont_HighLimitC1,UFG_PGTCont_HighLimitC2",
		lowLimit = "0.000",
		highLimit = "0.0025",
		lowClamp = "-0.005",
		highClamp = "0.005",
		measureMode = "VSIM",
		measureLoop = 25,
		statisticType = "AVERAGE",
		measureDelay = 0.0,
		manualMeasureRange = "AUTO",
		userVar = "UFG_PGTContC0,UFG_PGTContC1,UFG_PGTContC2",
		ituffTname = "PGT_ContC0,PGT_ContC1,PGT_ContC2",
                datalogType ="ituff,console,uservar",
                datalogMode = "ON"
                pinsToDisconnect = "P003",
                maskPins = "P003",
                phaseComp = "HIGHCAP",
		slewRate = "5000.0",
		relayState = "CLOSE",
                debugMode = "DISABLED",
		bypassGlobal = "",
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedTriggerType_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedTriggerType_DISABLED_FNeg1 trigger_type IT_UNDEFINED_STR")
	0?NEXT,
	1?NEXT;

        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedDVmode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedDVmode_DISABLED_FNeg1 DV_mode IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedForceValue_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedForceValue_DISABLED_FNeg1 force_value IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedMeasure_Mode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedMeasure_Mode_DISABLED_FNeg1 measure_mode IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedLowLimit_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedLowLimit_DISABLED_FNeg1 low_limit IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedHighLimit_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedHighLimit_DISABLED_FNeg1 high_limit IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedLowLimitUserVar_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedLowLimitUserVar_DISABLED_FNeg1 low_limit_user_var IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedHighLimitUserVar_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedHighLimitUserVar_DISABLED_FNeg1 high_limit_user_var IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedLowClamp_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedLowClamp_DISABLED_FNeg1 low_clamp IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedHighClamp_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedHighClamp_DISABLED_FNeg1 high_clamp IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedMeasureLoop_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedMeasureLoop_DISABLED_F0 measure_loop IT_UNDEFINED_INT")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedStatistic_Type_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedStatistic_Type_DISABLED_FNeg1 statistic_type IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedMeasureDelay_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedMeasureDelay_DISABLED_F0 measure_delay IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedManual_Measure_Range_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedManual_Measure_Range_DISABLED_FNeg1 manual_measure_range IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedRelay_State_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedRelay_State_DISABLED_FNeg1 relay_state IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedOutput_Pin_Relay_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedOutput_Pin_Relay_DISABLED_FNeg1 output_pin_relay IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedPowerRaiseSequence_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedPowerRaiseSequence_DISABLED_FNeg1 power_raise_sequence IT_UNDEFINED_DBL",
                        pin = "HDPS")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedPowerLowerSequence_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedPowerLowerSequence_DISABLED_FNeg1 power_lower_sequence IT_UNDEFINED_DBL",
                        pin = "HDPS")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedSettlingTime_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedSettlingTime_DISABLED_FNeg1 settling_time IT_UNDEFINED_DBL",
                        pin = "HDPS")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedSlewRate_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedSlewRate_DISABLED_F0 slew_rate IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedTriggerPin_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedTriggerPin_DISABLED_FNeg1 trigger_pin IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedFilter_State_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedFilter_State_DISABLED_FNeg1 filter_state IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedBypass_Cap_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedBypass_Cap_DISABLED_FNeg1 bypass_cap IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedPhase_Comp_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedPhase_Comp_DISABLED_FNeg1 phase_comp IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedStart_Trigger_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedStart_Trigger_DISABLED_FNeg1 start_trigger IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedStop_Trigger_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedStop_Trigger_DISABLED_FNeg1 stop_trigger IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedTriggerBit_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedTriggerBit_DISABLED_F0 trigger_bit IT_UNDEFINED_INT")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedSampleMode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedSampleMode_DISABLED_FNeg1 sample_mode IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedSampleSize_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedSampleSize_DISABLED_F0 sample_size IT_UNDEFINED_INT")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedSamplingInterval_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedSamplingInterval_DISABLED_FNeg1 sampling_interval IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedShutdown_Mode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedShutdown_Mode_DISABLED_FNeg1 shutdown_mode IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedFreeDriveTime_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedFreeDriveTime_DISABLED_F0 free_drive_time IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedShutdownDelay_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedShutdownDelay_DISABLED_F0 shutdown_delay IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedMeasureSequence_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedMeasureSequence_DISABLED_FNeg1 measure_sequence IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedPreCondForce_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedPreCondForce_DISABLED_F0 pre_cond_force IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedPreCondDuration_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedPreCondDuration_DISABLED_F0 pre_cond_duration IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedLoadCond_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedLoadCond_DISABLED_FNeg1 load_cond IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedVbumpMode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedVbumpMode_DISABLED_FNeg1 vbump_mode IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedVbumpForce_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedVbumpForce_DISABLED_F0 vbump_force IT_UNDEFINED_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedPinsToDisconnect_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedPinsToDisconnect_DISABLED_FNeg1 pins_to_disconnect IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_UndefinedDatalogType_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_UndefinedDatalogType_DISABLED_F0 datalog_type IT_UNDEFINED_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidTriggerType_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidTriggerType_DISABLED_FNeg1 trigger_type INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidDVmode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidDVmode_DISABLED_FNeg1 DV_mode INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidForceValue_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidForceValue_DISABLED_FNeg1 force_value INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidMeasure_Mode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidMeasure_Mode_DISABLED_FNeg1 measure_mode INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidLowLimit_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidLowLimit_DISABLED_FNeg1 low_limit INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidHighLimit_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidHighLimit_DISABLED_FNeg1 high_limit INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidLowLimitUserVar_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidLowLimitUserVar_DISABLED_FNeg1 low_limit_user_var INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidHighLimitUserVar_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidHighLimitUserVar_DISABLED_FNeg1 high_limit_user_var INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidLowClamp_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidLowClamp_DISABLED_FNeg1 low_clamp INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidHighClamp_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidHighClamp_DISABLED_FNeg1 high_clamp INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidMeasureLoop_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidMeasureLoop_DISABLED_F0 measure_loop IT_INVALID_INT")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidStatistic_Type_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidStatistic_Type_DISABLED_FNeg1 statistic_type INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidMeasureDelay_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidMeasureDelay_DISABLED_F0 measure_delay IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidManual_Measure_Range_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidManual_Measure_Range_DISABLED_FNeg1 manual_measure_range INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidRelay_State_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidRelay_State_DISABLED_FNeg1 relay_state INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidOutput_Pin_Relay_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidOutput_Pin_Relay_DISABLED_FNeg1 output_pin_relay INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidPowerRaiseSequence_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidPowerRaiseSequence_DISABLED_F0 power_raise_sequence IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidPowerLowerSequence_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidPowerLowerSequence_DISABLED_F0 power_lower_sequence IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidSettlingTime_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidSettlingTime_DISABLED_F0 settling_time IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidSlewRate_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidSlewRate_DISABLED_F0 slew_rate IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidTriggerPin_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidTriggerPin_DISABLED_FNeg1 trigger_pin INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidFilter_State_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidFilter_State_DISABLED_FNeg1 filter_state INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidBypass_Cap_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidBypass_Cap_DISABLED_FNeg1 bypass_cap INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidPhase_Comp_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidPhase_Comp_DISABLED_FNeg1 phase_comp INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidStart_Trigger_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidStart_Trigger_DISABLED_FNeg1 start_trigger INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidStop_Trigger_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidStop_Trigger_DISABLED_FNeg1 stop_trigger INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidTriggerBit_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidTriggerBit_DISABLED_F0 trigger_bit IT_INVALID_INT")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidSampleMode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidSampleMode_DISABLED_FNeg1 sample_mode INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidSampleSize_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidSampleSize_DISABLED_F0 sample_size IT_INVALID_INT")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidSamplingInterval_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidSamplingInterval_DISABLED_FNeg1 sampling_interval INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidShutdown_Mode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidShutdown_Mode_DISABLED_FNeg1 shutdown_mode INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidFreeDriveTime_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidFreeDriveTime_DISABLED_F0 free_drive_time IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidShutdownDelay_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidShutdownDelay_DISABLED_F0 shutdown_delay IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidMeasureSequence_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidMeasureSequence_DISABLED_FNeg1 measure_sequence INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidPreCondForce_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidPreCondForce_DISABLED_F0 pre_cond_force IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidPreCondDuration_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidPreCondDuration_DISABLED_F0 pre_cond_duration IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidLoadCond_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidLoadCond_DISABLED_FNeg1 load_cond INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidVbumpMode_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidVbumpMode_DISABLED_FNeg1 vbump_mode INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidVbumpForce_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidVbumpForce_DISABLED_F0 vbump_force IT_INVALID_DBL")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidPinsToDisconnect_DISABLED_FNeg1,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidPinsToDisconnect_DISABLED_FNeg1 pins_to_disconnect INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
        tt_pgtcontinuity_ParamMod(name = PGTContVerify_InvalidDatalogType_DISABLED_F0,
                        preinstance = "iVal_utilityfunc!SetTestInstanceParamValue PGTContVerify_InvalidDatalogType_DISABLED_F0 datalog_type INVALID_STR")
 	0?NEXT,
 	1?NEXT;
 
}


COMPOSITE PGTContExecute_DEBUG_OBNOXIOUS
{
	DEF (	debugMode = "OBNOXIOUS",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToFewCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToFewCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToManyCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToManyCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_MeasureOperand_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity-Operand.xml")
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MIN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MIN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MAX (COMPNAME = PGTContExecute_$debugMode_StatisticType_MAX)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MEDIAN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MEDIAN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_AVERAGE (COMPNAME = PGTContExecute_$debugMode_StatisticType_AVERAGE)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_DEBUG_VERBOSE
{
	DEF (	debugMode = "VERBOSE",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToFewCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToFewCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToManyCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToManyCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_MeasureOperand_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity-Operand.xml")
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MIN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MIN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MAX (COMPNAME = PGTContExecute_$debugMode_StatisticType_MAX)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MEDIAN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MEDIAN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_AVERAGE (COMPNAME = PGTContExecute_$debugMode_StatisticType_AVERAGE)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_DEBUG_BRIEF
{
	DEF (	debugMode = "BRIEF",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToFewCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToFewCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToManyCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToManyCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_MeasureOperand_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity-Operand.xml")
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MIN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MIN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MAX (COMPNAME = PGTContExecute_$debugMode_StatisticType_MAX)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MEDIAN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MEDIAN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_AVERAGE (COMPNAME = PGTContExecute_$debugMode_StatisticType_AVERAGE)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_DEBUG_DISABLED
{
	DEF (	debugMode = "DISABLED",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToFewCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToFewCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_ToManyCores_FNeg1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-ContinuityToManyCores.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity.xml")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuityXML(name = PGTContExecute_XML_MeasureOperand_$debugMode_P1,
		bypassGlobal = "",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		inputFile = "./PGTCont/PGT-Continuity-Operand.xml")
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MIN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MIN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MAX (COMPNAME = PGTContExecute_$debugMode_StatisticType_MAX)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_MEDIAN (COMPNAME = PGTContExecute_$debugMode_StatisticType_MEDIAN)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_StatisticType_AVERAGE (COMPNAME = PGTContExecute_$debugMode_StatisticType_AVERAGE)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_$debugMode_StatisticType_MIN{
	DEF (	statisticType = "MIN",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");


	PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_$debugMode_StatisticType_MAX{
	DEF (	statisticType = "MAX",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");


	PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_$debugMode_StatisticType_MEDIAN{
	DEF (	statisticType = "MEDIAN",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");


	PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_$debugMode_StatisticType_AVERAGE{
	DEF (	statisticType = "AVERAGE",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");


	PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED)
	0?NEXT,
	1?NEXT;

	PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED (COMPNAME = PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_$debugMode_$statisticType_DVMode_DISABLED {
	DEF (	dvMode = "DISABLED",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	PGTContExecute_$debugMode_$statisticType_$dvMode (COMPNAME = PGTContExecute_$debugMode_$statisticType_$dvMode)
	0?NEXT,
	1?NEXT;
}

COMPOSITE PGTContExecute_$debugMode_$statisticType_DVMode_ENABLED {
	DEF (	dvMode = "ENABLED",
                datalogMode = "ON",
		bypassGlobal = "",
              measurementOperand = "",		
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	PGTContExecute_$debugMode_$statisticType_$dvMode (COMPNAME = PGTContExecute_$debugMode_$statisticType_$dvMode)
	0?NEXT,
	1?NEXT;
}


COMPOSITE PGTContExecute_$debugMode_$statisticType_$dvMode {
	DEF (	manualMeasureRange = "AUTO"
		triggerType = "SNDC",
		level = "iValLevelMin",
		timings = "iValBasicTimings100MHz",
		patlist = "DCParam_Multi_SNDCs_list",
		pin = "HDPS",
              measurementOperand = "",		
		forceValue = "0.350",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0,UFG_PGTCont_LowLimitC1,UFG_PGTCont_LowLimitC2",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0,UFG_PGTCont_HighLimitC1,UFG_PGTCont_HighLimitC2",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		measureMode = "ISVM",
		measureLoop = 10,
		#statisticType = "AVERAGE",
		measureDelay = 0.0,
		#manualMeasureRange = "AUTO",
	        slewRate = "50.0",
		userVar = "UFG_PGTContC0,UFG_PGTContC1,UFG_PGTContC2",
		ituffTname = "PGT_ContC0,PGT_ContC1,PGT_ContC2",
                datalogType ="ituff,console,uservar",
                datalogMode = "ON"
                pinsToDisconnect = "P003",
                maskPins = "P003",
                phaseComp = "HIGHCAP",
                shutdownDelay = "0.015",
                settlingTime = "0.015",
                triggerPin = "PMTrig001",
                triggerBit = "1",
                vbumpMode = "ENABLED",
                vbumpForce = "0.750",
		bypassGlobal = "",
		postinstance = "iVal_utilityfunc!GenerateInstanceResults");

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_ISVM_F0,
		pin = "P001",
		slewRate = "50.0",
		relayState = "CLOSE",
		forceValue = "0.025"
		lowLimit = "0.010"
		highLimit = "0.090",
		lowClamp = "-1.00",
		highClamp = "3.0")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_VSIM_F0,
		pin = "P001",
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		forceValue = "1.00",
		lowLimit = "-000",
		highLimit = "0.010",
		lowClamp = "-0.025",
		highClamp = "0.025")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_VSIM_P1,
		measureLoop = 11,
                datalogMode = "DISABLED"
                phaseComp = "HIGHSPEED",
		slewRate = "50.0",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_MeasOperand2_VSIM_P1,
                measurementOperand = "2",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC2",
		highLimitUserVar = "UFG_PGTCont_HighLimitC2",
		userVar = "UFG_PGTContC2",
		ituffTname = "PGT_ContC2",
		measureLoop = 11,
                datalogMode = "DISABLED"
                phaseComp = "HIGHSPEED",
		slewRate = "50.0",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025")
                
	0?NEXT,
	1?NEXT;
	
	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_LCDPS_VSIM_F0,
		pin = "LDPS",
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		forceValue = "1.00",
		lowLimit = "-000",
		highLimit = "0.010",
		lowClamp = "-0.025",
		highClamp = "0.025")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_HIGHCAP_ISVM_P1,
		measureLoop = 1,
		slewRate = "50.0",
                phaseComp = "HIGHCAP",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.001",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-0.5",
		highClamp = "1.8")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_MIDCAP_ISVM_P1,
		measureLoop = 2,
		slewRate = "50.0",
                phaseComp = "MIDCAP",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.001",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-0.5",
		highClamp = "1.8")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_LOWCAP_ISVM_P1,
		slewRate = "50.0",
                phaseComp = "HIGHCAP",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.001",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-0.5",
		highClamp = "1.8")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_pin_LOWCAP_ISVM_F2,
		timings = "iValTimingsIcc",
		slewRate = "50.0",
                phaseComp = "HIGHCAP",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.001",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "-0.5",
		highClamp = "1.8")
	0?NEXT,
	1?NEXT,
        2?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_HIGHSPPED_LCDPS_ISVM_F0,
		slewRate = "50.0",
                phaseComp = "HIGHSPEED",
		relayState = "CLOSE",
		pin = "LDPS0t1",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.00",
		highClamp = "1.8")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_HIGHCAP_HCDPS_VSIM_P1,
		timings = "",
		patlist = "",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0",
		userVar = "UFG_PGTContC0",
		ituffTname = "PGT_ContC0",
		slewRate = "50.0",
                phaseComp = "HIGHCAP",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "HDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.025",
		lowClamp = "-0.500",
		highClamp = "0.500")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_MIDCAP_HCDPS_VSIM_P1,
		timings = "",
		patlist = "",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0",
		userVar = "UFG_PGTContC0",
		ituffTname = "PGT_ContC0",
		slewRate = "50.0",
                phaseComp = "MIDCAP",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "HDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.025",
		lowClamp = "-0.500",
		highClamp = "0.500")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_LOWCAP_HCDPS_VSIM_P1,
		timings = "",
		patlist = "",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0",
		userVar = "UFG_PGTContC0",
		ituffTname = "PGT_ContC0",
		slewRate = "50.0",
                phaseComp = "LOWCAP",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "HDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.025",
		lowClamp = "-0.500",
		highClamp = "0.500")
	0?NEXT,
	1?NEXT;


	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_$manualMeasureRange_param_NO_SNDC_HCDPS_VSIM_P1,
		timings = "",
		patlist = "",
		lowLimitUserVar = "UFG_PGTCont_LowLimitC0",
		highLimitUserVar = "UFG_PGTCont_HighLimitC0",
		userVar = "UFG_PGTContC0",
		ituffTname = "PGT_ContC0",
                phaseComp = "HIGHCAP",
		slewRate = "50.0",
		relayState = "CLOSE",
		measureMode = "VSIM",
		pin = "HDPS",
		forceValue = "0.025",
		lowLimit = "0.00",
		highLimit = "0.325",
		lowClamp = "-1.005",
		highClamp = "1.030")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_P1,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "AUTO")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_6uA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "6uA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_60uA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "60uA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_600uA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "600uA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_6mA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.200",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "6mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_95mA_P1,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "95mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_pin_VSIM_128mA_P1,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "P001",
		forceValue = "0.025",
		lowLimit = "0.000",
		highLimit = "0.020",
		lowClamp = "-0.025",
		highClamp = "0.025",
		manualMeasureRange = "128mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_AUTO_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "AUTO")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_5uA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "5uA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_50uA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "50uA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_500uA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "500uA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_5mA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "5mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_50mA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "50mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_500mA_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "500mA")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_4A_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "4A")
	0?NEXT,
	1?NEXT;

	tt_pgtcontinuity_noXML(name = PGTContExecute_$debugMode_$statisticType_$dvMode_param_lcdps_VSIM_16A_F0,
		measureMode = "VSIM",
		slewRate = "50.0",
		relayState = "CLOSE",
		pin = "LDPS",
		forceValue = "0.350",
		lowLimit = "0.010",
		highLimit = "1.5",
		lowClamp = "0.0",
		highClamp = "1.8",
		manualMeasureRange = "16A")
	0?NEXT,
	1?NEXT;

}
