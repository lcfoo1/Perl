INST tt_pcier {
	NAME                                    $name;
	TEMPLATE                                iCPCIEResistanceTest;
	timings									$timings;								#Datatype=STRING, OPTIONAL
	patlist									$patlist;								#Datatype=STRING, OPTIONAL
	anode_force_current						$AnodeForceCurrent;						#Datatype=STRING, REQUIRED
	cathode_force_voltage					$CathodeForceVoltage;					#Datatype=STRING, REQUIRED
	anode_pins								$anodePins;								#Datatype=STRING, REQUIRED
	cathode_pins							$cathodePins;							#Datatype=STRING, REQUIRED
	level									$level;									#Datatype=STRING, OPTIONAL
	debug_mode                            	$debugMode;                             #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	preinstance                             $preinstance;                           #Datatype=STRING, OPTIONAL
	postinstance                          	$postinstance;                          #Datatype=STRING, OPTIONAL
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	
	#datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
}
