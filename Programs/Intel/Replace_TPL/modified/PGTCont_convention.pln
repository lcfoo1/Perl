#C:\evg214-e-winxp-ctx4.8.1-tss205a-2007020700\src\OASIS\templates\OASIS_pgt_continuity_tt.ph
#Import c:\intel\tpapps\CorTeX\Oasis\Rev4.8.1\templates\OASIS_tt.ph
INST tt_pgtcontinuity_noXML {
	NAME                                    $name;
	TEMPLATE                                iCPGTContinuity;
	trigger_type                           $triggerType;                            #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	level                                  $level;                                  #Datatype=STRING, OPTIONAL
	timings                                $timings;                                #Datatype=STRING, OPTIONAL
	patlist                                $patlist;                                #Datatype=STRING, OPTIONAL
	DV_mode                                $dvMode;                                 #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	#input_file                             $inputFile;                              #Datatype=STRING, OPTIONAL
	pin                                    $pin;                                    #Datatype=STRING, OPTIONAL
	force_value                            $forceValue;                             #Datatype=STRING, OPTIONAL
	low_limit_user_var                     $lowLimitUserVar;                        #Datatype=STRING, OPTIONAL
	high_limit_user_var                    $highLimitUserVar;                       #Datatype=STRING, OPTIONAL
	low_limit                              $lowLimit;                               #Datatype=STRING, OPTIONAL
	high_limit                             $highLimit;                              #Datatype=STRING, OPTIONAL
	low_clamp                              $lowClamp;                               #Datatype=STRING, OPTIONAL
	high_clamp                             $highClamp;                              #Datatype=STRING, OPTIONAL
	measure_mode                           $measureMode;                            #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	measure_loop                           $measureLoop;                            #Datatype=INTEGER, OPTIONAL
	statistic_type                         $statisticType;                          #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVERAGE, MEDIAN
	measure_delay                          $measureDelay;                           #Datatype=DOUBLE, OPTIONAL
	manual_measure_range                   $manualMeasureRange;                     #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	user_var                               $userVar;                                #Datatype=STRING, OPTIONAL
	ituff_tname                            $ituffTname;                             #Datatype=STRING, OPTIONAL
	relay_state                            $relayState;                             #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#output_pin_relay                       $outputPinRelay;                         #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#power_raise_sequence                   $powerRaiseSequence;                     #Datatype=DOUBLE, OPTIONAL
	#power_lower_sequence                   $powerLowerSequence;                     #Datatype=DOUBLE, OPTIONAL
	settling_time                          $settlingTime;                           #Datatype=DOUBLE, OPTIONAL
	slew_rate                              $slewRate;                               #Datatype=DOUBLE, OPTIONAL
	trigger_pin                            $triggerPin;                             #Datatype=STRING, OPTIONAL
	#filter_state                           $filterState;                            #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#bypass_cap                             $bypassCap;                              #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	phase_comp                             $phaseComp;                              #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#start_trigger                          $startTrigger;                           #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#stop_trigger                           $stopTrigger;                            #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	trigger_bit                            $triggerBit;                             #Datatype=INTEGER, OPTIONAL
	#sample_mode                            $sampleMode;                             #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#sample_size                            $sampleSize;                             #Datatype=INTEGER, OPTIONAL
	#sampling_interval                      $samplingInterval;                       #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#shutdown_mode                          $shutdownMode;                           #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#free_drive_time                        $freeDriveTime;                          #Datatype=DOUBLE, OPTIONAL
	shutdown_delay                         $shutdownDelay;                          #Datatype=DOUBLE, OPTIONAL
	#measure_sequence                       $measureSequence;                        #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#pre_cond_force                         $preCondForce;                           #Datatype=DOUBLE, OPTIONAL
	#pre_cond_duration                      $preCondDuration;                        #Datatype=DOUBLE, OPTIONAL
	#load_cond                              $loadCond;                               #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	vbump_mode                             $vbumpMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	vbump_force                            $vbumpForce;                             #Datatype=DOUBLE, OPTIONAL
	pins_to_disconnect                     $pinsToDisconnect;                       #Datatype=STRING, OPTIONAL
       measurement_operand                    $measurementOperand;                     #Datatype=STRING, OPTIONAL
	datalog_type                           $datalogType;                            #Datatype=STRING, OPTIONAL
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                             $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	#preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                           $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}

#C:\evg214-e-winxp-ctx4.8.1-tss205a-2007020700\src\OASIS\templates\OASIS_pgt_continuity_tt.ph
#Import c:\intel\tpapps\CorTeX\Oasis\Rev4.8.1\templates\OASIS_tt.ph
INST tt_pgtcontinuity_ParamMod {
	NAME                                    $name;
	TEMPLATE                                iCPGTContinuity;
	trigger_type                           $triggerType;                            #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	level                                  $level;                                  #Datatype=STRING, OPTIONAL
	timings                                $timings;                                #Datatype=STRING, OPTIONAL
	patlist                                $patlist;                                #Datatype=STRING, OPTIONAL
	DV_mode                                $dvMode;                                 #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	#input_file                             $inputFile;                              #Datatype=STRING, OPTIONAL
	pin                                    $pin;                                    #Datatype=STRING, OPTIONAL
	force_value                            $forceValue;                             #Datatype=STRING, OPTIONAL
	low_limit_user_var                     $lowLimitUserVar;                        #Datatype=STRING, OPTIONAL
	high_limit_user_var                    $highLimitUserVar;                       #Datatype=STRING, OPTIONAL
	low_limit                              $lowLimit;                               #Datatype=STRING, OPTIONAL
	high_limit                             $highLimit;                              #Datatype=STRING, OPTIONAL
	low_clamp                              $lowClamp;                               #Datatype=STRING, OPTIONAL
	high_clamp                             $highClamp;                              #Datatype=STRING, OPTIONAL
	measure_mode                           $measureMode;                            #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	measure_loop                           $measureLoop;                            #Datatype=INTEGER, OPTIONAL
	statistic_type                         $statisticType;                          #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVERAGE, MEDIAN
	measure_delay                          $measureDelay;                           #Datatype=DOUBLE, OPTIONAL
	manual_measure_range                   $manualMeasureRange;                     #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	user_var                               $userVar;                                #Datatype=STRING, OPTIONAL
	ituff_tname                            $ituffTname;                             #Datatype=STRING, OPTIONAL
	relay_state                            $relayState;                             #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#output_pin_relay                       $outputPinRelay;                         #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#power_raise_sequence                   $powerRaiseSequence;                     #Datatype=DOUBLE, OPTIONAL
	#power_lower_sequence                   $powerLowerSequence;                     #Datatype=DOUBLE, OPTIONAL
	#settling_time                          $settlingTime;                           #Datatype=DOUBLE, OPTIONAL
	slew_rate                              $slewRate;                               #Datatype=DOUBLE, OPTIONAL
	#trigger_pin                            $triggerPin;                             #Datatype=STRING, OPTIONAL
	#filter_state                           $filterState;                            #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#bypass_cap                             $bypassCap;                              #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	phase_comp                             $phaseComp;                              #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#start_trigger                          $startTrigger;                           #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#stop_trigger                           $stopTrigger;                            #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	#trigger_bit                            $triggerBit;                             #Datatype=INTEGER, OPTIONAL
	#sample_mode                            $sampleMode;                             #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#sample_size                            $sampleSize;                             #Datatype=INTEGER, OPTIONAL
	#sampling_interval                      $samplingInterval;                       #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#shutdown_mode                          $shutdownMode;                           #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#free_drive_time                        $freeDriveTime;                          #Datatype=DOUBLE, OPTIONAL
	#shutdown_delay                         $shutdownDelay;                          #Datatype=DOUBLE, OPTIONAL
	#measure_sequence                       $measureSequence;                        #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#pre_cond_force                         $preCondForce;                           #Datatype=DOUBLE, OPTIONAL
	#pre_cond_duration                      $preCondDuration;                        #Datatype=DOUBLE, OPTIONAL
	#load_cond                              $loadCond;                               #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	#vbump_mode                             $vbumpMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	#vbump_force                            $vbumpForce;                             #Datatype=DOUBLE, OPTIONAL
	pins_to_disconnect                     $pinsToDisconnect;                       #Datatype=STRING, OPTIONAL
       measurement_operand                    $measurementOperand;                     #Datatype=STRING, OPTIONAL
	datalog_type                           $datalogType;                            #Datatype=STRING, OPTIONAL
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                             $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                           $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}



#C:\evg214-e-winxp-ctx4.8.1-tss205a-2007020700\src\OASIS\templates\OASIS_pgt_continuity_tt.ph
#Import c:\intel\tpapps\CorTeX\Oasis\Rev4.8.1\templates\OASIS_tt.ph
INST tt_pgtcontinuityXML {
	NAME                                    $name;
	TEMPLATE                                iCPGTContinuity;
	#trigger_type                           $triggerType;                            #Datatype=STRING, OPTIONAL  #Choices : SNDC, SNDT
	level                                  $level;                                  #Datatype=STRING, OPTIONAL
	timings                                $timings;                                #Datatype=STRING, OPTIONAL
	patlist                                $patlist;                                #Datatype=STRING, OPTIONAL
	#DV_mode                                $dvMode;                                 #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	input_file                             $inputFile;                              #Datatype=STRING, OPTIONAL
	#pin                                    $pin;                                    #Datatype=STRING, OPTIONAL
	#force_value                            $forceValue;                             #Datatype=STRING, OPTIONAL
	#low_limit_user_var                     $lowLimitUserVar;                        #Datatype=STRING, OPTIONAL
	#high_limit_user_var                    $highLimitUserVar;                       #Datatype=STRING, OPTIONAL
	#low_limit                              $lowLimit;                               #Datatype=STRING, OPTIONAL
	#high_limit                             $highLimit;                              #Datatype=STRING, OPTIONAL
	#low_clamp                              $lowClamp;                               #Datatype=STRING, OPTIONAL
	#high_clamp                             $highClamp;                              #Datatype=STRING, OPTIONAL
	#measure_mode                           $measureMode;                            #Datatype=STRING, OPTIONAL  #Choices : VSIM, ISVM, VSVM
	#measure_loop                           $measureLoop;                            #Datatype=INTEGER, OPTIONAL
	#statistic_type                         $statisticType;                          #Datatype=STRING, OPTIONAL  #Choices : MIN, MAX, AVERAGE, MEDIAN
	#measure_delay                          $measureDelay;                           #Datatype=DOUBLE, OPTIONAL
	#manual_measure_range                   $manualMeasureRange;                     #Datatype=STRING, OPTIONAL  #Choices : AUTO, 6uA, 60uA, 600uA, 6mA, 95mA, 128mA, 5uA, 50uA, 500uA, 5mA, 50mA, 500mA, 4A, 16A
	#user_var                               $userVar;                                #Datatype=STRING, OPTIONAL
	#ituff_tname                            $ituffTname;                             #Datatype=STRING, OPTIONAL
	#relay_state                            $relayState;                             #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#output_pin_relay                       $outputPinRelay;                         #Datatype=STRING, OPTIONAL  #Choices : OPEN, CLOSE
	#power_raise_sequence                   $powerRaiseSequence;                     #Datatype=DOUBLE, OPTIONAL
	#power_lower_sequence                   $powerLowerSequence;                     #Datatype=DOUBLE, OPTIONAL
	#settling_time                          $settlingTime;                           #Datatype=DOUBLE, OPTIONAL
	#slew_rate                              $slewRate;                               #Datatype=DOUBLE, OPTIONAL
	#trigger_pin                            $triggerPin;                             #Datatype=STRING, OPTIONAL
	#filter_state                           $filterState;                            #Datatype=STRING, OPTIONAL  #Choices : FILTER_OFF, FILTER_ON
	#bypass_cap                             $bypassCap;                              #Datatype=STRING, OPTIONAL  #Choices : BYPASS_CAP_ON, BYPASS_CAP_OFF
	#phase_comp                             $phaseComp;                              #Datatype=STRING, OPTIONAL  #Choices : HIGHSPEED, HIGHCAP, MIDCAP, LOWCAP
	#start_trigger                          $startTrigger;                           #Datatype=STRING, OPTIONAL  #Choices : FREE, EXTERNAL
	#stop_trigger                           $stopTrigger;                            #Datatype=STRING, OPTIONAL  #Choices : COUNTER, EXTERNAL
	#trigger_bit                            $triggerBit;                             #Datatype=INTEGER, OPTIONAL
	#sample_mode                            $sampleMode;                             #Datatype=STRING, OPTIONAL  #Choices : AVERAGE, TRACE
	#sample_size                            $sampleSize;                             #Datatype=INTEGER, OPTIONAL
	#sampling_interval                      $samplingInterval;                       #Datatype=STRING, OPTIONAL  #Choices : 25US, 100US
	#shutdown_mode                          $shutdownMode;                           #Datatype=STRING, OPTIONAL  #Choices : NORMAL, FOLD, LIMIT
	#free_drive_time                        $freeDriveTime;                          #Datatype=DOUBLE, OPTIONAL
	#shutdown_delay                         $shutdownDelay;                          #Datatype=DOUBLE, OPTIONAL
	#measure_sequence                       $measureSequence;                        #Datatype=STRING, OPTIONAL  #Choices : SIMULTANEOUS, INDIVIDUAL
	#pre_cond_force                         $preCondForce;                           #Datatype=DOUBLE, OPTIONAL
	#pre_cond_duration                      $preCondDuration;                        #Datatype=DOUBLE, OPTIONAL
	#load_cond                              $loadCond;                               #Datatype=STRING, OPTIONAL  #Choices : CONDITION_DEFAULT, OUTPUT_CYCLE, ALL_CYCLES, RESISTIVE, PRIOR
	#vbump_mode                             $vbumpMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	#vbump_force                            $vbumpForce;                             #Datatype=DOUBLE, OPTIONAL
	#pins_to_disconnect                     $pinsToDisconnect;                       #Datatype=STRING, OPTIONAL
       measurement_operand                    $measurementOperand;                     #Datatype=STRING, OPTIONAL
	#datalog_type                           $datalogType;                            #Datatype=STRING, OPTIONAL
	datalog_mode                            $datalogMode;                             #Datatype=STRING, OPTIONAL  #Choices : ON, DISABLED, CAPTURE_ONLY
	debug_mode                             $debugMode;                              #Datatype=STRING, OPTIONAL  #Choices : DISABLED, BRIEF, VERBOSE, OBNOXIOUS
	#serial_mode                            $serialMode;                             #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	bypass_global                          $bypassGlobal;                           #Datatype=STRING, OPTIONAL
	#preinstance                            $preinstance;                            #Datatype=STRING, OPTIONAL
	postinstance                           $postinstance;                           #Datatype=STRING, OPTIONAL
	#preplist                               $preplist;                               #Datatype=STRING, OPTIONAL
	#postplist                              $postplist;                              #Datatype=STRING, OPTIONAL
	#preburst                               $preburst;                               #Datatype=STRING, OPTIONAL
	#postburst                              $postburst;                              #Datatype=STRING, OPTIONAL
	#EOT_power_down                         $eotPowerDown;                           #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#mask_pins                              $maskPins;                               #Datatype=STRING, OPTIONAL
	#thermal_monitor_mode                   $thermalMonitorMode;                     #Datatype=STRING, OPTIONAL  #Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	#thermal_monitor_offset_check           $thermalMonitorOffsetCheck;              #Datatype=STRING, OPTIONAL  #Choices : CHECK_LIMITS, MEASURE_ONLY
	#thermal_monitor_ituff_tname            $thermalMonitorItuffTname;               #Datatype=STRING, OPTIONAL
	#instance_profile                       $instanceProfile;                        #Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	#plist_check                       $plistCheck;                         #Datatype=STRING, OPTIONAL  #Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	#ignore_alarm                           $ignoreAlarm;                            #Datatype=STRING, OPTIONAL  #Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	#ssid_e_sequence                  $ssidESequence;                    #Datatype=STRING, OPTIONAL
	#ssid_e_recovery                 $ssidERecovery;                   #Datatype=STRING, OPTIONAL
	#ssid_g_restore                     $ssidGRestore;                       #Datatype=STRING, OPTIONAL
	#ssid_g_pwrdwn          $ssidGPwrdwn;             #Datatype=STRING, OPTIONAL  #Choices : NO, YES
	#relay_token                            $relayToken;                             #Datatype=STRING, OPTIONAL
	#ssid_o_execute                   $ssidOExecute;                     #Datatype=STRING, OPTIONAL  #Choices : FORCE_ALL, FIRST_FAIL
	#capture_result                   $captureResult;                     #Datatype=STRING, OPTIONAL  #Choices : DO_NOT_CLEAR, CLEAR
	#viewPLL_mode                           $viewpllMode;                            #Datatype=STRING, OPTIONAL  #Choices : HVM, DV, DISABLED
	#monitor_setup_id                       $monitorSetupId;                         #Datatype=STRING, OPTIONAL
	#reference_temperature                  $referenceTemperature;                   #Datatype=STRING, OPTIONAL  #Choices : PRETEST, POSTTEST, STARTOFTEST, DEFAULT
	#thermal_test_name_datalog_format       $thermalTestNameDatalogFormat;           #Datatype=STRING, OPTIONAL
	#PListParam                             $plistparam;                             #Datatype=OFCSTRING, OPTIONAL
	#TestConditionParam                     $testconditionparam;                     #Datatype=OFCSTRING, OPTIONAL
	#DebugMode                              $debugmode;                              #Datatype=INTEGER, OPTIONAL  #Choices : 0, 1
}
