COMPOSITE Multicycles_FUSE_NGFuseBurn
{
   Multicycles_NGFuseBurn_Execute_Brief ( COMPNAME = Multicycles_NGFuseBurn_Execute_Brief, debugMode = "BRIEF")
   0?NEXT,
   1?NEXT;

   Multicycles_NGFuseBurn_Execute_Verbose ( COMPNAME = Multicycles_NGFuseBurn_Execute_Verbose, debugMode = "VERBOSE")
   0?NEXT,
   1?NEXT;

   Multicycles_NGFuseBurn_Execute_Obnoxious ( COMPNAME = Multicycles_NGFuseBurn_Execute_Obnoxious, debugMode = "OBNOXIOUS")
   0?NEXT,
   1?NEXT;
}


COMPOSITE Multicycles_NGFuseBurn_Execute_Brief
{
   Multicycles_NGFuseBurn_$debugMode (COMPNAME = Multicycles_NGFuseBurn_$debugMode)
   0?NEXT,
   1?NEXT;	
}

COMPOSITE Multicycles_NGFuseBurn_Execute_Verbose
{
   Multicycles_NGFuseBurn_$debugMode (COMPNAME = Multicycles_NGFuseBurn_$debugMode)
   0?NEXT,
   1?NEXT;
}

COMPOSITE Multicycles_NGFuseBurn_Execute_Obnoxious
{
   Multicycles_NGFuseBurn_$debugMode (COMPNAME = Multicycles_NGFuseBurn_$debugMode)
   0?NEXT,
   1?NEXT;
}

COMPOSITE Multicycles_NGFuseBurn_$debugMode
{

   DEF (SEGNAME = $name,
       fuseburnSimMode=ENABLED,							#Choices : ENABLED, DISABLED
       fuseFlowFile="",
       miniFlowSet="",
       fuseBurnPatSet="",
       fuseDefFile="",
       fuseRegisterName="",
       fuseCustomFile="",
       fuseCustomSetpoint="",
       fuseMaskFile="",
       fuseSspecFile="",
       fuseSspeclookupFile="",
       patlist="",
       timings = "iValNGFuseBurnTimings50MHz",
       level = "iValNGFuseBurnLevelNom",
       dynamicMaskMode= ENABLED,						 #Choices : DISABLED, ENABLED
       ituffTname="",
       fusebankSetpoint="",
       fuseburnPatternMode=STANDARDPOR, 					 #Choices : DISABLED, ENABLED
       fuseBurnGlobal="",
       fuseChecksumFile="",
       datalogMode=ON,								 #Choices : ON, DISABLED, CAPTURE_ONLY
       preinstance="",
       bypassGlobal = "",
       postinstance="iVal_utilityfunc!GenerateInstanceResults");


   DEF (TEMPLATENAME = NGFuseBurn, 
	TESTTYPE = Execute,
	TESTMODE = BurnStaticSSPEC, 
	TESTITEM = "", 
	DEBUGMODE = $debugMode, 
	DESIREDOUT = "");
   DEF (INSTANCENAME = $TEMPLATENAME_$TESTTYPE_$TESTITEM_$TESTMODE_$DEBUGMODE_$DESIREDOUT);
   DEF (name = $INSTANCENAME, BINNAME = $INSTANCENAME);
   DEF (PASSBIN = 1, FAILBIN = 31);
   DEF (TESTINDEX = 0);


   tt_init(name = SET_SSPEC_DB59_$debugMode_P1,
   	preinstance = "iVal_utilityfunc!SetTPGlobal CTSCVars.SC_SSPEC DB59",
        debugMode = "BRIEF",
	whichSocketFile = "which_socket.txt",               		#Datatype=STRING, OPTIONAL
    	globalDebugMode = "FALSE",	                       		#Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
    	globalDatalogMode = "FALSE",                       		#Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	engineeringMode = "DISABLED",		                      	#Datatype=STRING, OPTIONAL  #Choices : DISABLED, GET_USER_INPUT, SILENT
	productName = "ABCDEFGHIJ---T1--",		                #Datatype=STRING, OPTIONAL
	locationCode = "7251",                          		#Datatype=INTEGER, OPTIONAL
	testTemp = "93.0",		                       		#Datatype=DOUBLE, OPTIONAL
	corrWaferLot = "DISABLED",			                #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	verifyAllInstances = "DISABLED",	              		#Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	engLocnGlobalName = "",                      			#Datatype=STRING, OPTIONAL
	staticInstanceFilename = "",					#Datatype=STRING, OPTIONAL
   	datalogMode = ON,						#Choices : ON, DISABLED
	preinstance = "",
	preplist = "",
	postplist = "",
	preburst = "",
	postburst = "",
	eotPowerDown = FALSE,						#Choices : FALSE, TRUE
	maskPins = "",
	thermalMonitorMode = DISABLED,					#Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	thermalMonitorOffsetCheck = CHECK_LIMITS,			#Choices : CHECK_LIMITS, MEASURE_ONLY
	thermalMonitorItuffTname = "",
	instanceProfile = FALSE,					#Choices : FALSE, TRUE
	plistCheck = EMPTY_DISABLED,				#Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	ignoreAlarm = NONE,						#Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	ssidESequence = "",
	ssidERecovery = "",
	ssidGPwrdwn = NO,				#Choices : NO, YES
	relayToken = "",
	ssidOExecute = FIRST_FAIL,	#Choices : FORCE_ALL, FIRST_FAIL
	captureResult = CLEAR	#Choices : DO_NOT_CLEAR, CLEAR
	)
   0?NEXT,
   1?NEXT;
   
   tt_ngfuseread (TESTITEM = PassSimulationDataRead,
   		TEMPLATENAME = NGFuseRead,
   	       	DESIREDOUT = P1,
		TESTMODE = FuseReadSim,
            	TESTINDEX = 1,    		
    		fusemode = SKIP_PATTERN_EXECUTION_USE_FUSEFLOW_SIM_DATA,
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseReadMiniFlow_fuseread.txt",
    		miniFlowSet = "fusereadflow_simulation",
    		fuseRegisterName = "MEROM1",
    		fuseReadGlobal="",
    		readForErrorMode="DISABLED",
    		fuseGroupsToDatalog="",
    		preinstance="",
    		postinstance="",
    		bypassGlobal="",
		alternateSsidName = "-99",
		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_fuseread.txt")        
   1?NEXT,
   2?NEXT,
   0?NEXT;


   tt_lrb_ngfuseburn  (TESTITEM = SINGLE,
   	        DESIREDOUT = P1,
		TESTMODE = BurnStatic,
                TESTINDEX = 10,
    		fuseRegisterName = "MEROM1",
    		fuseBurnPatSet = "burnpat_default",
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseBurnMiniFlow_operand.txt",
    		miniFlowSet = "fuseburnflow_MEROM1_burnmask",
    		fusebankSetpoint = "READ_BANK",
    		fuseMaskFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseMask_operand.txt",
    		fuseCustomFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/custom_operand.txt",
        	fuseCustomSetpoint="READ",
		cycleMultiplier = 1,
    		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_operand.txt")
   1?NEXT,
   2?NEXT,
   0?NEXT;

   tt_lrb_ngfuseburn  (TESTITEM = SINGLE,
   	        DESIREDOUT = P1,
		TESTMODE = PINDATA,
                TESTINDEX = 10,
    		fuseRegisterName = "LRB",
    		fuseBurnPatSet = "burnpat_lrb_single_default",
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseBurnMiniFlow_pindata.txt",
    		miniFlowSet = "fuseburnflow_LRB_burnmask",
    		fusebankSetpoint = "",
    		fuseMaskFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseMask_pindata.txt",
    		fuseCustomFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/custom_pindata.txt",
        	fuseCustomSetpoint="READ",
		cycleMultiplier = 1,
    		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_pindata.txt")
   1?NEXT,
   2?NEXT,
   0?NEXT;


   tt_lrb_ngfuseburn  (TESTITEM = TWO,
   	        DESIREDOUT = P1,
		TESTMODE = PINDATA,
                TESTINDEX = 10,
    		fuseRegisterName = "LRB",
    		fuseBurnPatSet = "burnpat_lrb_twocycle_default",
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseBurnMiniFlow_pindata.txt",
    		miniFlowSet = "fuseburnflow_LRB_burnmask",
    		fusebankSetpoint = "",
    		fuseMaskFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseMask_pindata.txt",
    		fuseCustomFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/custom_pindata.txt",
        	fuseCustomSetpoint="READ",
		cycleMultiplier = 2,
    		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_pindata.txt")
   1?NEXT,
   2?NEXT,
   0?NEXT;

   tt_lrb_ngfuseburn  (TESTITEM = TWO_NEGATIVE,
   	        DESIREDOUT = P1,
		TESTMODE = PINDATA,
                TESTINDEX = 10,
    		fuseRegisterName = "LRB",
    		fuseBurnPatSet = "burnpat_lrb_twocycle_negative_offset",
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseBurnMiniFlow_pindata.txt",
    		miniFlowSet = "fuseburnflow_LRB_burnmask",
    		fusebankSetpoint = "",
    		fuseMaskFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseMask_pindata.txt",
    		fuseCustomFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/custom_pindata.txt",
        	fuseCustomSetpoint="READ",
		cycleMultiplier = 2,
    		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_pindata.txt")
   1?NEXT,
   2?NEXT,
   0?NEXT;


   tt_lrb_ngfuseburn  (TESTITEM = FUSESSPEC,
   	        DESIREDOUT = P1,
		TESTMODE = PINDATA,
                TESTINDEX = 10,
    		fuseRegisterName = "LRB",
    		fuseBurnPatSet = "burnpat_lrb_twocycle_default",
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseBurnMiniFlow_pindata.txt",
    		miniFlowSet = "fuseburnflow_LRB_Sspec",
    		fusebankSetpoint = "",
    		fuseMaskFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseMask_pindata.txt",
    		fuseCustomFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/custom_pindata.txt",
        	fuseCustomSetpoint="READ",
		fuseSspecFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseSSpec_pindata.txt",
		cycleMultiplier = 2,
    		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_pindata.txt")
   1?NEXT,
   2?NEXT,
   0?NEXT;


   tt_init(name = SET_SSPEC_DB60_$debugMode_P1,
   	preinstance = "iVal_utilityfunc!SetTPGlobal CTSCVars.SC_SSPEC DB60",
	whichSocketFile = "which_socket.txt",          			#Datatype=STRING, OPTIONAL
        debugMode = "BRIEF",
    	globalDebugMode = "FALSE",	                       		#Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
    	globalDatalogMode = "FALSE",                       		#Datatype=STRING, OPTIONAL  #Choices : FALSE, TRUE
	engineeringMode = "DISABLED",	                        	#Datatype=STRING, OPTIONAL  #Choices : DISABLED, GET_USER_INPUT, SILENT
	productName = "ABCDEFGHIJ---T1--",		                #Datatype=STRING, OPTIONAL
	locationCode = "7251",                         			#Datatype=INTEGER, OPTIONAL
	testTemp = "93.0",		                       		#Datatype=DOUBLE, OPTIONAL
	corrWaferLot = "DISABLED",		                        #Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	verifyAllInstances = "DISABLED",	               		#Datatype=STRING, OPTIONAL  #Choices : DISABLED, ENABLED
	engLocnGlobalName = "",                      			#Datatype=STRING, OPTIONAL
	staticInstanceFilename = "",					#Datatype=STRING, OPTIONAL
   	datalogMode = ON,						#Choices : ON, DISABLED
	preinstance = "",
	preplist = "",
	postplist = "",
	preburst = "",
	postburst = "",
	eotPowerDown = FALSE,						#Choices : FALSE, TRUE
	maskPins = "",
	thermalMonitorMode = DISABLED,					#Choices : DISABLED, PRETEST, POSTTEST, PREPOSTTEST
	thermalMonitorOffsetCheck = CHECK_LIMITS,			#Choices : CHECK_LIMITS, MEASURE_ONLY
	thermalMonitorItuffTname = "",
	instanceProfile = FALSE,					#Choices : FALSE, TRUE
	plistCheck = EMPTY_DISABLED,				#Choices : EMPTY_DISABLED, EMPTY_ONLY, DISABLED_ONLY, NOCHECK
	ignoreAlarm = NONE,						#Choices : NONE, CLAMP_ONLY, SPIKE_ONLY, OSC_ONLY, CLAMP_SPIKE, CLAMP_OSC, SPIKE_OSC, ALL_THREE
	ssidESequence = "",
	ssidERecovery = "",
	ssidGPwrdwn = NO,				#Choices : NO, YES
	relayToken = "",
	ssidOExecute = FIRST_FAIL,	#Choices : FORCE_ALL, FIRST_FAIL
	captureResult = CLEAR	#Choices : DO_NOT_CLEAR, CLEAR
	)
   0?NEXT,
   1?NEXT;


   tt_lrb_ngfuseburn  (TESTITEM = DYNAMIC_SSPEC,
   	        DESIREDOUT = P1,
		TESTMODE = PINDATA,
                TESTINDEX = 10,
    		fuseRegisterName = "LRB",
    		fuseBurnPatSet = "burnpat_lrb_twocycle_default",
    		fuseFlowFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseBurnMiniFlow_pindata.txt",
    		miniFlowSet = "fuseburnflow_LRB_Sspec",
    		fusebankSetpoint = "",
    		fuseMaskFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseMask_pindata.txt",
    		fuseCustomFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/custom_pindata.txt",
        	fuseCustomSetpoint="READ",
		fuseSspecFile="./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseSSpec_pindata.txt",
		cycleMultiplier = 2,
    		fuseDefFile = "./fuse/vega4_fuse/Multicycles_NGFuseBurn/multicycles/fuseburn/FuseDef_pindata.txt")
   1?NEXT,
   2?NEXT,
   0?NEXT;

}







