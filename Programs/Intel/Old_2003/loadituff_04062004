#!/bin/csh
# loadituff.csh - The purpose of this script is to copy ituff summaries
#                 from the source directory to the Aries Data Path
#                 directory and create the two signal files for loading
#                 the ituff summaries.  THere ware two command line
#                 parameters that must be supplied, the FPO number and
#                 the Workstream Location.
# Modified: Modified by Steven on 021103. Put in post_scpt.pl script t 
#           remove die duplicaton from ituff
# Modified: Modified by Steven on 013103. Put in remove_line.pl script to 
#           remove die duplicaton from ituff
# Modified: Modified by Steven to cater for both sort and class test generation
#           of signal files  
# Modified: Modified by Lye Cheung on 040504. Put in OIFendlot.pl script to 
#           create Aries signal file, data broker signal file, and rewrite the
#	    process to copy the ituff summaries to Aries directory
#
# $1 = FPO Number
# $2 = Work stream location
#
# Get paths from lopte.cfg
echo "Loading ITUFF Summaries for $1  $2"
echo "===================================================================================="
echo "$0 called with $1 $2"
# Did the user supply the correct parameters
if ( $#argv < 2 ) then
	echo "Error usage: loadituff <FPONumber> <WorkstreamLocation>"
  	exit
endif
echo ""
echo "Definitions"
echo "==========="
set loptecfg=/lopte/config/lopte.cfg
#set loptecfg=/lopte/data/home/PENANG/lopte/config/lopte.cfg

#This part is to add in hardware binn tokens by OK Teh and Jun Lee
set hname = `hostname`
set directory1 = /lopte/data/summary/t3/
set directory2 = $1_$2
echo 'This is $1 and $2' $1 $2 
echo 'This is dir 1' $directory1
echo 'This is dir 2' $directory2

#if ($hname == 'LOhp94k3') then
#        /lopte/home/op4/inst_hw_bin.pl /lopte/data/summary/t3/$1_$2 
#endif 

#This part cater for Sort section

if ($2 == "8012" || $2 == "8112") then  
   	echo "  LOPTE Config            = $loptecfg"
   	set ariessig=`grep WFARIESSIGNALPATH: $loptecfg | awk '{print $2}'`
   	echo "  Aries Signal file path  = $ariessig"
   	set accesssig=`grep WFACCESSSIGNALPATH: $loptecfg | awk '{print $2}'`
   	echo "  Access Signal file path = $accesssig"
   	set rdcsig=`grep RDCSIGNALPATH: $loptecfg | awk '{print $2}'`
   	echo "  RDC++ Signal file path  = $rdcsig"
   	set sumpath=`grep SUMMARYDATAPATH: $loptecfg | awk '{print $2}'`
   	set t3sumpath=`grep ASCIISUMMARYPATH: $loptecfg | awk '{print $2}'`
   	echo "  ITUFF Source path       = $sumpath/$t3sumpath/$1_$2"
   	set ituffdest=`grep WFARIESDATAPATH: $loptecfg | awk '{print $2}'`
   	echo "  ITUFF Destination path  = $ituffdest"


	# If the destination directory does not exist then create it
   	if (!(-e $ituffdest/$1_$2)) then
       		echo "  Created ITUFF Destination directory $ituffdest/$1_$2"
       		mkdir -p $ituffdest/$1_$2
   	endif

	# If the ARIES Signal directory does not exist then create it
   	if ( !(-e $ariessig) ) then
       		echo "  Created ARIES Signal directory      $ariessig"
       		mkdir -p $ariessig
   	endif

	# If the ACCESS Signal directory does not exist then create it
   	if ( !(-e $accesssig) ) then
       		echo "  Created ACCESS Signal directory     $accesssig"
       		mkdir -p $accesssig
   	endif

	# If the RDC++ Signal directory does not exist then create it
   	if ( !(-e $rdcsig)) then
       		echo "  Created RDC++ Signal directory      $rdcsig"
       		mkdir -p $rdcsig
   	endif

	# Removing duplicate die from ITUFF
   	echo ""
   	echo "Removing Duplicate Die "
   	echo "======================="
   	post_scpt.pl /lopte/data/summary/t3/$1_$2 
	#   remove_lines.pl /lopte/data/summary/t3/$1_$2 


#########################################################################################
#########################################################################################
#	Modified by LC Foo on 05-04-2004						#
#########################################################################################

	# Copy each file into the ituff dest directory
	echo ""
	echo "Copying the ITUFF summaries"
	echo "==========================="
   	OIFendlot.pl $1 $2

###### Below is the original codes for the load ituff ###################################
#      foreach file (`ls -1 $sumpath/$t3sumpath/$1_$2`)
#	  if ( -f $sumpath/$t3sumpath/$1_$2/$file ) then
#             cp $sumpath/$t3sumpath/$1_$2/$file $ituffdest/$1_$2
#             echo "  From  $sumpath/$t3sumpath/$1_$2/$file  To  $ituffdest/$1_$2"
#          endif
#       end
#
#   echo ""
#  Create the signal files
#   echo "Creating Signal Files"
#   echo "====================="
#   echo "  File $accesssig/$1_$2.sig created."
#   touch $accesssig/$1_$2.sig
#
# If Wafer Sort then create RDC++ signal file
#   if ( $2 == "8012" ) then
#       echo "  File $rdcsig/$1_$2.sig created."
#       touch $rdcsig/$1_$2.sig
#
#   foreach file (`ls -1 $ituffdest/$1_$2`)
#       set tr_wafer_name = `echo "$file" | cut -c2-10`
#       echo "  File $ariessig/$1_$2_$tr_wafer_name.sig created."
#       touch $ariessig/$1_$2_$tr_wafer_name.sig
#   end  
#   endif
##########################################################################################
##########################################################################################




# This part cater for class test section
else  
   echo "  LOPTE Config            = $loptecfg"
   set clariessig=`grep CLARIESSIGNALPATH: $loptecfg | awk '{print $2}'`
   echo "  Aries Signal file path  = $clariessig"
   set claccesssig=`grep CLACCESSSIGNALPATH: $loptecfg | awk '{print $2}'`
   echo "  Access Signal file path = $claccesssig"
   set clsumpath=`grep SUMMARYDATAPATH: $loptecfg | awk '{print $2}'`
   set clt3sumpath=`grep ASCIISUMMARYPATH: $loptecfg | awk '{print $2}'`
   echo "  ITUFF Source path       = $clsumpath/$clt3sumpath/$1_$2"
   set clituffdest=`grep CLARIESDATAPATH: $loptecfg | awk '{print $2}'`
   echo "  ITUFF Destination path  = $clituffdest"
   set rdcsig=`grep RDCSIGNALPATH: $loptecfg | awk '{print $2}'`
   echo "  RDC++ Signal file path  = $rdcsig"


# If the destination directory does not exist then create it
   if (!(-e $clituffdest/$1_$2)) then
        echo "  Created ITUFF Destination directory $clituffdest/$1_$2"
        mkdir -p $clituffdest/$1_$2
   endif


# If the ARIES Signal directory does not exist then create it
    if ( !(-e $clariessig) ) then
        echo "  Created ARIES Signal directory      $clariessig"
        mkdir -p $clariessig
    endif

# If the ACCESS Signal directory does not exist then create it
    if ( !(-e $claccesssig) ) then
        echo "  Created ACCESS Signal directory     $claccesssig"
        mkdir -p $claccesssig
    endif

# If the RDC++ Signal directory does not exist then create it
    if ( !(-e $rdcsig)) then
        echo "  Created RDC++ Signal directory      $rdcsig"
        mkdir -p $rdcsig
    endif

# Copy each file into the ituffdest directory
    echo ""
    echo "Copying the ITUFF summaries"
    echo "==========================="
           foreach file (`ls -1 $clsumpath/$clt3sumpath/$1_$2`)
               if ( -f $clsumpath/$clt3sumpath/$1_$2/$file ) then
                 cp $clsumpath/$clt3sumpath/$1_$2/$file $clituffdest/$1_$2
                 echo "  From  $clsumpath/$clt3sumpath/$1_$2/$file  To  $clituffdest/$1_$2"
               endif
            end

     echo ""
#Create the signal files
      echo "Creating Signal Files"
      echo "====================="
      echo "  File $clariessig/$1_$2.sig created."
      touch $clariessig/$1_$2.sig
      echo "  File $claccesssig/$1_$2.sig created."
      touch $claccesssig/$1_$2.sig
endif 


echo ""
echo "Loading complete."
