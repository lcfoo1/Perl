
my $Bin

my $Bin

my $Debug = 0;
my %HexBin = (
                "0" => "0000",
                "1" => "0001",
                "2" => "0010",
                "3" => "0011",
                "4" => "0100",
                "5" => "0101",
                "6" => "0110",
                "7" => "0111",
                "8" => "1000",
                "9" => "1001",
                "A" => "1010",
                "B" => "1011",
                "C" => "1100",
                "D" => "1101",
                "E" => "1110",
                "F" => "1111",
                "m" => "MMMM",
                "p" => "PPPP",
                "s" => "SSSS",
                "u" => "UUUU",
                "x" => "XXXX",
                "M" => "mmmm",
                "P" => "pppp",
                "S" => "ssss",
                "U" => "uuuu",
                "X" => "xxxx"
        );

my %BinHex = (
                "0000" => "0",
                "0001" => "1",
                "0010" => "2",
                "0011" => "3",
                "0100" => "4",
                "0101" => "5",
                "0110" => "6",
                "0111" => "7",
                "1000" => "8",
                "1001" => "9",
                "1010" => "A",
                "1011" => "B",
                "1100" => "C",
                "1101" => "D",
                "1110" => "E",
                "1111" => "F",
                "MMMM" => "m",
                "PPPP" => "p",
                "SSSS" => "s",
                "UUUU" => "u",
                "XXXX" => "x",
                "mmmm" => "m",
                "pppp" => "p",
                "ssss" => "s",
                "uuuu" => "u",
                "xxxx" => "x"
        );


&BinaryToHex($Bin);

# FuseRead display on the console is reverse
# Input is from MSB shift in TDI, shift out LSB
sub BinaryToHex
{
	my $StrBinaries = shift;	
	my $TotalBinary = length ($StrBinaries);
	
	if (0 == ($TotalBinary % 4))
	{
		my $Binary = "";                                          
		my $StrHex = "";
		
		my @Bits = split (//, $StrBinaries);
		for (my $i=$#Bits; $i>=0; $i--)
		{
			push (@RevBits, $Bits[$i]);
		}		

		my $Cnt = 1;
	
		foreach my $Bit (@RevBits)
		{
			if ($Cnt % 4 == 0)
			{
				$Binary .= $Bit;
				$StrHex .= $BinHex{$Binary};
				print "$Binary :: $BinHex{$Binary} :: $Cnt\n" if ($Debug == 0);
				$Binary = "";
			}
			else
			{			
				$Binary .= $Bit;
			}
			$Cnt++;
		}
	
		if ((($#RevBits + 1)/4) != length ($StrHex))
		{
			print "ERROR: Binary conversion doesn't match, pls check $#Bits\n";
		}
		
		print "$StrHex\n" . length ($StrHex) . "\n" if ($Debug == 1);
		print "$StrHex\n";

	}
	else
	{
		print "ERROR: Parse binary doen't match length conversion - $TotalBinary\n";
	}
}





