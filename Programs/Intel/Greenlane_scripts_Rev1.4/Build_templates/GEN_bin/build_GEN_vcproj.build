<project name="build_GEN_vcproj" default="build_GEN_vcproj::usage">
<!-- Set the directory properties needed to run this script /-->
    <if test="${not property::exists('revision')}">
	    <fail message="revision has not been set please add -D:revision=UserInputRevision"/>
    </if>
    <if test="${not property::exists('GEN_bindir')}">
	    <property name="GEN_bindir" value="${project::get-base-directory()}"/>
    </if>
    <echo message="GEN_bindir is ${GEN_bindir}"/>
    <if test="${not property::exists('GEN_workingdir')}">
	    <property name="GEN_workingdir" value="${directory::get-current-directory()}"/>
    </if>
    <echo message="GEN_workingdir is ${GEN_workingdir}"/>
    <if test="${not property::exists('GEN_code_dir')}">
        <property name="GEN_code_dir" value="${directory::get-parent-directory(GEN_bindir)}\code"/>
    </if>
    <echo message="GEN_code_dir is ${GEN_code_dir}"/>
    <if test="${not property::exists('GEN_TestClasses_dir')}">
	    <property name="GEN_TestClasses_dir" value="${directory::get-parent-directory(GEN_bindir)}\TestClasses"/>
    </if>
    <echo message="GEN_TestClasses_dir is ${GEN_TestClasses_dir}"/>
    <if test="${not property::exists('GEN_libdir')}">
	    <property name="GEN_libdir" value="${directory::get-parent-directory(GEN_bindir)}\lib"/>
    </if>
    <echo message="GEN_libdir is ${GEN_libdir}"/>
    <if test="${not property::exists('XML_file_name')}">
	    <property name="XML_file_name" value = "${GEN_bindir}\GEN_vcproj_list.xml"/>
    </if>
    <echo message="XML_file_name is ${XML_file_name}"/>
    <property name="TempVcproj" value = "${GEN_workingdir}\temp.vcproj"/>

    <property name ="CommonValuesUploaded" value="false" />
    <property name ="CreatingAllVCProj" value="false" />
    
    <echo message="GEN_code_dir is ${GEN_code_dir}"/>
    <target name = "build_GEN_vcproj::usage">

<echo>      build_GEN_vcproj version 1.0 ";

            Usage: nant -buildfile:&lt;GenBinDir&gt;\build_GEN_vcproj.build build_GEN_vcproj::create_vcproj -D:test=&lt;ModuleName/TestMethod&gt;
            -D:&lt;revision&gt;
            -D:revision=Rev5.0.0e28.1
            
            CorTeX Wizard for creating GEN_testmethod_tt.vcproj file. Corresponding cpp, h and 
            ph should exist in the folder the call is made from.     
	  
            
            ******** testmethod file name and test class name should be same**********
                                                                                           
                                                                                              
            Examples:                                                                        
            nant -buildfile:c:\intel\tpapps\cortex\GEN\Rev4.9.0\bin\build_GEN_vcproj.build build_GEN_vcproj::create_vcproj -D:test=Func -D:revision=Rev4.9.0e28.1
                        
            Creates GEN_Func_tt.vcproj. 
            
            To build vcproj for all the templates in folder the call is initiated from
            
            nant -buildfile:build_GEN_vcproj.build build_GEN_vcproj::create_all_vcproj -D:revision=Rev5.1.0
            
            GEN_vcproj_list.xml must exist in the bin folder.
            
            </echo>                
    </target>                                                                                              
                                                                                                  

<!-- This Target creates all of the .vcproj and .rc files for all of the .cpp files in a directory /-->
    <target name="build_GEN_vcproj::create_all_vcproj">
    <property name ="CreatingAllVCProj" value="true" />
<!-- This target call gets all of the common values for the .vcproj files /-->
    <call target="build_GEN_vcproj::GetCommonValues"/>
<!-- This loop get the name of all of the .cpp files then calls the create_vcproj for each .cpp /-->
    <foreach item="File" property="filename">		   
                <in>
	            <items>
	                <include name="${GEN_workingdir}\*_tt.cpp"/>
	            </items>
	        </in>
		<do>
<!-- Get the template name first remove the path and extention off of the name /-->
                    <property name="file" value="${path::get-file-name-without-extension(filename)}"/>
    			<echo message="file is ${file}"/>
<!-- Remove the GEN_ from the start of the file /-->
                    <property name="test" value="${string::substring(file,4,(string::get-length(file)-4))}"/>	
                    <echo message="${test}"/>    	
                    <echo message="filename is ${filename}"/>
<!-- Remove the _tt from the end of the name /-->
            		<property name="frame" value="${string::substring(test,0,string::get-length(test)-3)}"/> 
	    	<property name="full_test_name" value="GEN_${test}"/> 
                	<call target="build_GEN_vcproj::create_vcproj"/>
                </do>   		
    </foreach>
    
    </target>
    

<!-- This target gets the common values from the GEN_vcproj_list.xml /-->
    <target name="build_GEN_vcproj::GetCommonValues"> 
    
        <property name ="common_VCProjVersion" value="" overwrite="true"/>
        <property name ="common_VCProjName" value="" overwrite="true"/>
        <property name ="common_VCProjIncludes" value="" overwrite="true"/>
        <property name ="common_ReleaseLinkerDependencies" value="" overwrite="true"/>
        <property name ="common_DebugLinkerDependencies" value="" overwrite="true"/>
        <property name ="common_ReleasePreprocessorDefinitions" value="" overwrite="true"/>
        <property name ="common_DebugPreprocessorDefinitions" value="" overwrite="true"/>
        <property name ="common_ReleaseLinkerIncludes" value="" overwrite="true"/>
        <property name ="common_DebugLinkerIncludes" value="" overwrite="true"/>
        <property name ="common_ReleaseOutputFile" value="" overwrite="true"/>
        <property name ="common_DebugOutputFile" value="" overwrite="true"/>
        <property name ="common_ReleaseImportLib" value="" overwrite="true"/>
        <property name ="common_DebugImportLib" value="" overwrite="true"/>
        <property name ="common_SourceFiles" value="" overwrite="true"/>
        <property name ="common_SourceHeaders" value="" overwrite="true"/>
        <property name ="common_WarnAsError" value="" overwrite="true"/>
        
        ###########################################################################################            
        #Obtain the common values from the input xml file
        ###########################################################################################
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/VCProjVersion/@value" property="common_VCProjVersion">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/VCProjName/@value" property="common_VCProjName">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/VCProjIncludes/@value" property="common_VCProjIncludes">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/ReleaseLinkerDependencies/@value" property="common_ReleaseLinkerDependencies">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/DebugLinkerDependencies/@value" property="common_DebugLinkerDependencies">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/ReleasePreprocessorDefinitions/@value" property="common_ReleasePreprocessorDefinitions">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/DebugPreprocessorDefinitions/@value" property="common_DebugPreprocessorDefinitions">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/ReleaseLinkerIncludes/@value" property="common_ReleaseLinkerIncludes">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/DebugLinkerIncludes/@value" property="common_DebugLinkerIncludes">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/ReleaseOutputFile/@value" property="common_ReleaseOutputFile">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/DebugOutputFile/@value" property="common_DebugOutputFile">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/ReleaseImportLib/@value" property="common_ReleaseImportLib">
        </xmlpeek> 
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/DebugImportLib/@value" property="common_DebugImportLib">
        </xmlpeek> 
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/SourceFiles/@value" property="common_SourceFiles">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/SourceHeaders/@value" property="common_SourceHeaders">
        </xmlpeek>
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='common']/WarnAsError/@value" property="common_WarnAsError">
        </xmlpeek>
        <property name ="CommonValuesUploaded" value="true" />          
       
    </target>
    
    
    

<!-- This target gets the specific values from the GEN_vcproj_list.xml for a template /-->
<!-- If the specific value does not exist we use the common value /-->
    <target name="build_GEN_vcproj::init">
    
        <property name ="specific_VCProjVersion" value="" overwrite="true"/>
        <property name ="specific_VCProjName" value="" overwrite="true"/>
        <property name ="specific_VCProjIncludes" value="" overwrite="true"/>
        <property name ="specific_ReleaseLinkerDependencies" value="" overwrite="true"/>
        <property name ="specific_DebugLinkerDependencies" value="" overwrite="true"/>
        <property name ="specific_ReleasePreprocessorDefinitions" value="" overwrite="true"/>
        <property name ="specific_DebugPreprocessorDefinitions" value="" overwrite="true"/>
        <property name ="specific_ReleaseLinkerIncludes" value="" overwrite="true"/>
        <property name ="specific_DebugLinkerIncludes" value="" overwrite="true"/>
        <property name ="specific_ReleaseOutputFile" value="" overwrite="true"/>
        <property name ="specific_DebugOutputFile" value="" overwrite="true"/>
        <property name ="specific_ReleaseImportLib" value="" overwrite="true"/>
        <property name ="specific_DebugImportLib" value="" overwrite="true"/>
        <property name ="specific_SourceFiles" value="" overwrite="true"/>
        <property name ="specific_SourceHeaders" value="" overwrite="true"/>
        <property name ="specific_WarnAsError" value="" overwrite="true"/>
                   
	    <property name="full_path_vcproj" value="${GEN_workingdir}\${full_test_name}.vcproj"/>
	    <property name="full_path_rc" value="${GEN_workingdir}\${full_test_name}.rc"/>            
	    <property name="OAI_frame" value="GEN_frame_nant_tt.vcproj"/>   
        
        ###########################################################################################            
        #Obtain the specific values from the input xml file for the test template
        ###########################################################################################      
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/VCProjVersion/@value" property="specific_VCProjVersion" failonerror = 'false'>
        </xmlpeek>
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/VCProjName/@value" property="specific_VCProjName" failonerror = 'false'>
        </xmlpeek> 
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/VCProjIncludes/@value" property="specific_VCProjIncludes" failonerror = 'false'>
        </xmlpeek>   
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/ReleaseLinkerDependencies/@value" property="specific_ReleaseLinkerDependencies" failonerror = 'false'>
        </xmlpeek>  
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/DebugLinkerDependencies/@value" property="specific_DebugLinkerDependencies" failonerror = 'false'>
        </xmlpeek>  
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/ReleasePreprocessorDefinitions/@value" property="specific_ReleasePreprocessorDefinitions" failonerror = 'false'>
        </xmlpeek>
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/DebugPreprocessorDefinitions/@value" property="specific_DebugPreprocessorDefinitions" failonerror = 'false'>
        </xmlpeek>
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/ReleaseLinkerIncludes/@value" property="specific_ReleaseLinkerIncludes" failonerror = 'false'>
        </xmlpeek>   
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/DebugLinkerIncludes/@value" property="specific_DebugLinkerIncludes" failonerror = 'false'>
        </xmlpeek>   
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/ReleaseOutputFile/@value" property="specific_ReleaseOutputFile" failonerror = 'false'>
        </xmlpeek>  
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/DebugOutputFile/@value" property="specific_DebugOutputFile" failonerror = 'false'>
        </xmlpeek> 
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/ReleaseImportLib/@value" property="specific_ReleaseImportLib" failonerror = 'false'>
        </xmlpeek> 
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/DebugImportLib/@value" property="specific_DebugImportLib" failonerror = 'false'>
        </xmlpeek>  
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/SourceFiles/@value" property="specific_SourceFiles" failonerror = 'false'>
        </xmlpeek> 
        
        <xmlpeek file="${XML_file_name}" xpath="/module_list/module[@name='${frame}']/SourceHeaders/@value" property="specific_SourceHeaders" failonerror = 'false'>
        </xmlpeek>  

        ###########################################################################################            
        #If the specific_VCProjVersion has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_VCProjVersion==''}">
            <property name="VCProjVersion" value="${common_VCProjVersion}" overwrite="true"/>     
        </if>
        <if test="${specific_VCProjVersion !=''}">
            <property name="VCProjVersion" value="${specific_VCProjVersion}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_VCProjName has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_VCProjName==''}">
            <property name="VCProjName" value="${common_VCProjName}" overwrite="true"/>     
        </if>
        <if test="${specific_VCProjName !=''}">
            <property name="VCProjName" value="${specific_VCProjName}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_VCProjIncludes has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_VCProjIncludes==''}">
            <property name="VCProjIncludes" value="${common_VCProjIncludes}" overwrite="true"/>     
        </if>
        <if test="${specific_VCProjIncludes !=''}">
            <property name="VCProjIncludes" value="${specific_VCProjIncludes}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_ReleaseLinkerDependencies has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_ReleaseLinkerDependencies==''}">
            <property name="ReleaseLinkerDependencies" value="${common_ReleaseLinkerDependencies}" overwrite="true"/>     
        </if>
        <if test="${specific_ReleaseLinkerDependencies !=''}">
            <property name="ReleaseLinkerDependencies" value="${specific_ReleaseLinkerDependencies}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_DebugLinkerDependencies has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_DebugLinkerDependencies==''}">
            <property name="DebugLinkerDependencies" value="${common_DebugLinkerDependencies}" overwrite="true"/>     
        </if>
        <if test="${specific_DebugLinkerDependencies !=''}">
            <property name="DebugLinkerDependencies" value="${specific_DebugLinkerDependencies}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_ReleasePreprocessorDefinitions has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_ReleasePreprocessorDefinitions==''}">
            <property name="ReleasePreprocessorDefinitions" value="${common_ReleasePreprocessorDefinitions}" overwrite="true"/>     
        </if>
        <if test="${specific_ReleasePreprocessorDefinitions !=''}">
            <property name="ReleasePreprocessorDefinitions" value="${specific_ReleaseLinkerDependencies}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_DebugPreprocessorDefinitions has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_DebugPreprocessorDefinitions==''}">
            <property name="DebugPreprocessorDefinitions" value="${common_DebugPreprocessorDefinitions}" overwrite="true"/>     
        </if>
        <if test="${specific_DebugPreprocessorDefinitions !=''}">
            <property name="DebugPreprocessorDefinitions" value="${specific_DebugPreprocessorDefinitions}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_ReleaseLinkerIncludes has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_ReleaseLinkerIncludes==''}">
            <property name="ReleaseLinkerIncludes" value="${common_ReleaseLinkerIncludes}" overwrite="true"/>     
        </if>
        <if test="${specific_ReleaseLinkerIncludes !=''}">
            <property name="ReleaseLinkerIncludes" value="${specific_ReleaseLinkerIncludes}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_DebugLinkerIncludes has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_DebugLinkerIncludes==''}">
            <property name="DebugLinkerIncludes" value="${common_DebugLinkerIncludes}" overwrite="true"/>     
        </if>
        <if test="${specific_DebugLinkerIncludes !=''}">
            <property name="DebugLinkerIncludes" value="${specific_DebugLinkerIncludes}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_ReleaseOutputFile has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_ReleaseOutputFile==''}">
            <property name="ReleaseOutputFile" value="${common_ReleaseOutputFile}" overwrite="true"/>     
        </if>
        <if test="${specific_ReleaseOutputFile !=''}">
            <property name="ReleaseOutputFile" value="${specific_ReleaseOutputFile}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_DebugOutputFile has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_DebugOutputFile==''}">
            <property name="DebugOutputFile" value="${common_DebugOutputFile}" overwrite="true"/>     
        </if>
        <if test="${specific_DebugOutputFile !=''}">
            <property name="DebugOutputFile" value="${specific_DebugOutputFile}" overwrite="true"/>     
        </if>

        ###########################################################################################            
        #If the specific_ReleaseImportLib has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_ReleaseImportLib==''}">
            <property name="ReleaseImportLib" value="${common_ReleaseImportLib}" overwrite="true"/>     
        </if>
        <if test="${specific_ReleaseImportLib !=''}">
            <property name="ReleaseImportLib" value="${specific_ReleaseImportLib}" overwrite="true"/>     
        </if>

        ###########################################################################################
        #If the specific_DebugImportLib has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_DebugImportLib==''}">
            <property name="DebugImportLib" value="${common_DebugImportLib}" overwrite="true"/>
        </if>
        <if test="${specific_DebugImportLib !=''}">
            <property name="DebugImportLib" value="${specific_DebugImportLib}" overwrite="true"/>
        </if>

        ###########################################################################################
        #If the specific_WarnAsError has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_WarnAsError==''}">
            <property name="WarnAsError" value="${common_WarnAsError}" overwrite="true"/>
        </if>
        <if test="${specific_WarnAsError !=''}">
            <property name="WarnAsError" value="${specific_WarnAsError}" overwrite="true"/>
        </if>

        ###########################################################################################            
        #If the specific_SourceFiles has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_SourceFiles==''}">
            <property name="SourceFiles" value="${common_SourceFiles}" overwrite="true"/>     
        </if>
        <if test="${specific_SourceFiles !=''}">
           	<property name="SourceFiles" value="" overwrite="true"/>     
        	<foreach item="String" in="${specific_SourceFiles}" delim=";" property="SourceFilename">
        		<property name="SourceFiles" value="${SourceFiles}
			&lt;File RelativePath=&quot;${SourceFilename}&quot; /&gt;"/> 
		</foreach>   
        </if>

        ###########################################################################################            
        #If the specific_SourceHeaders has data, the common values will not be used.
        ###########################################################################################
        <if test="${specific_SourceHeaders==''}">
            <property name="SourceHeaders" value="${common_SourceHeaders}" overwrite="true"/>     
        </if>
        <if test="${specific_SourceHeaders !=''}">
           	<property name="SourceHeaders" value="" overwrite="true"/>     
        	<foreach item="String" in="${specific_SourceHeaders}" delim=";" property="SourceFilename">
        		<property name="SourceHeaders" value="${SourceHeaders}
			&lt;File RelativePath=&quot;${SourceFilename}&quot; /&gt;"/> 
		</foreach>
        </if>
    </target>
    
    
    <target name="build_GEN_vcproj::create_vcproj">
<!-- Build the UUID /--> 	
            <exec program="C:\Program Files\Microsoft Visual Studio 8\Common7\Tools\uuidgen.exe" output="${GEN_workingdir}/${test}_uuid.txt"/>
<!--load the UUID as a property /-->
         <loadfile property="projectGUID" file="${GEN_workingdir}/${test}_uuid.txt"/>
<!-- Delete the UUID File /-->
            <delete file="${GEN_workingdir}/${test}_uuid.txt"/>
            <property name="projectGUID" value="${string::trim(projectGUID)}"/>
            <property name="temp_vcproj" value="temp.vcproj"/>
<!-- Set the frame and full_test_name property if we are building a single template  /-->
            <if test="${not CreatingAllVCProj}">
    		    <property name="frame" value="${test}"/>
                <property name="full_test_name" value="GEN_${test}_tt"/>
    	    </if>
            <property name="templateName" value="iC${frame}Test"/>
<!-- Check to see if the common values have already been loaded if not load them /-->
            <if test="${not CommonValuesUploaded}">
    		    <call target="build_GEN_vcproj::GetCommonValues"/>
    	    </if>
<!-- Get the specific values is the exist /-->
            <call target="build_GEN_vcproj::init"/>
<!-- Delete the temp.vcproj if it already exists /-->
            <delete file="${TempVcproj}" failonerror = "false"/>
<!-- Copy the frame and insert the valuse obtained by from the GEN_vcproj_list.xml to the temp.vcproj /-->	
            <copy file="${GEN_bindir}\${OAI_frame}" tofile="${TempVcproj}" overwrite="true">
                <filterchain>
                    <expandproperties/>
                    <replacetokens>                    
                    	    <token key="VCPROJNAME" value="${VCProjName}"/>
                            <token key="VCPROJVERSION" value="${VCProjVersion}"/>
                            <token key="VCPROJINCLUDES" value="${VCProjIncludes}"/>
                            <token key="RELEASELINKERDEPENDENCIES" value="${ReleaseLinkerDependencies}"/>
                            <token key="DEBUGLINKERDEPENDENCIES" value="${DebugLinkerDependencies}"/>
                            <token key="RELEASEPREPROCESSORDEFINITIONS" value="${ReleasePreprocessorDefinitions}"/>
                            <token key="DEBUGPREPROCESSORDEFINITIONS" value="${DebugPreprocessorDefinitions}"/>
                            <token key="RELEASELINKERINCLUDES" value="${ReleaseLinkerIncludes}"/>
                            <token key="DEBUGLINKERINCLUDES" value="${DebugLinkerIncludes}"/>
                            <token key="RELEASEOUTPUTFILE" value="${ReleaseOutputFile}"/>
                            <token key="DEBUGOUTPUTFILE" value="${DebugOutputFile}"/>
                            <token key="RELEASEIMPORTLIB" value="${ReleaseImportLib}"/>
                            <token key="DEBUGIMPORTLIB" value="${DebugImportLib}"/>
                            <token key="SOURCEHEADERS" value="${SourceHeaders}"/>
                            <token key="SOURCEFILES" value="${SourceFiles}"/>
                            <token key="PROJECTGUID" value="${projectGUID}"/>
                            <token key="WARNASERROR" value="${WarnAsError}"/>
                    </replacetokens>
                </filterchain>
            </copy>
<!-- Delete the template.vcproj if it already exists /-->
            <delete file="${full_path_vcproj}" failonerror = "false"/>
<!-- Copy the temp.vcproj to the template.vcproj and replace more tokens /-->
<!-- The dual copy lets the user use tokens in the GEN_vcproj_list.xml /-->
            <copy file="${TempVcproj}" tofile="${full_path_vcproj}" overwrite="true">
                <filterchain>
                    <expandproperties/>
                    <replacetokens>                                                              
    		            <token key="REVISION" value="${revision}"/>                                           
    		            <token key="TEMPLATENAME" value="${templateName}"/> 
                            <token key="FRAME" value ="${frame}" /> 
                            <token key="FRAMECAP" value="${string::to-upper(frame)}"/>
                    </replacetokens>
                </filterchain>
            </copy>
<!-- Delete the temp.vcproj if it already exists /-->
            <delete file="${TempVcproj}" failonerror = "false"/> 

        <property name="cvs_tag" value="${revision}" overwrite="false"/>
        <property name="user_name" value="UNKNOWN" overwrite="false"/>
        <property name="server_name" value="UNKNOWN" overwrite="false"/>

<!-- Set properties needed for the .rc file /-->
        <regex pattern="Rev(?'revision_number'.*)[aeb]|Rev(?'revision_number'.*)$" input="${revision}"/>
	    <property name="revision_number" value="${string::replace(revision_number,'.',',')}"/>
        

<!-- Copy the frame and insert the valuse obtained by from the GEN_vcproj_list.xml to the template.rc /-->	
        <copy file="${GEN_bindir}\GEN_frame_tt.rc" tofile="${full_path_rc}" overwrite="true">
            <filterchain>
                <expandproperties/>
                <replacetokens>            
                    <token key="REVISION" value="${revision}"/>
                    <token key="REVISION_NUMBER" value="${revision_number}"/>
                    <token key="FRAME" value ="${frame}" />
                    <token key="CVS_TAG" value="${cvs_tag}"/>
                    <token key="USER_NAME" value="${user_name}"/>
                    <token key="SERVER_NAME" value="${server_name}"/>
                </replacetokens>
            </filterchain>  
        </copy>
        <echo message="==========================================================="/> 
        <echo message="SUMMARY FOR ${test}"/> 
        <echo message="==========================================================="/> 
        <echo message="    REVISION = ${revision}"/>
        <echo message="    REVISION_NUMBER = ${revision_number}"/>
        <echo message="    FRAME = ${frame}"/>
	    <echo message="    FRAMECAP = ${string::to-upper(frame)}"/>
        <echo message="    VCPROJVERSION = ${VCProjVersion}"/>
        <echo message="    VCPROJINCLUDES = ${VCProjIncludes}"/>
        <echo message="    RELEASELINKERDEPENDENCIES = ${ReleaseLinkerDependencies}"/>
        <echo message="    DEBUGLINKERDEPENDENCIES = ${DebugLinkerDependencies}"/>
        <echo message="    RELEASEPREPROCESSORDEFINITIONS = ${ReleasePreprocessorDefinitions}"/>
        <echo message="    DEBUGPREPROCESSORDEFINITIONS = ${DebugPreprocessorDefinitions}"/>
        <echo message="    RELEASELINKERINCLUDES = ${ReleaseLinkerIncludes}"/>
        <echo message="    DEBUGLINKERINCLUDES = ${DebugLinkerIncludes}"/>
        <echo message="    RELEASEOUTPUTFILE = ${ReleaseOutputFile}"/>
        <echo message="    DEBUGOUTPUTFILE = ${DebugOutputFile}"/>
        <echo message="    RELEASEIMPORTLIB = ${ReleaseImportLib}"/>
        <echo message="    DEBUGIMPORTLIB = ${DebugImportLib}"/>
        <echo message="    PROJECTGUID = ${projectGUID}"/>
        <echo message="    SOURCEFILES = ${SourceFiles}"/>
        <echo message="    SOURCEHEADERS = ${SourceHeaders}"/>
        <echo message=" "/>
	<echo message="    FILES CREATED:"/>
	<echo message="    VCPROJ FILE: &quot;${full_path_vcproj}&quot;"/>
	<echo message="    RC FILE:     &quot;${full_path_rc}&quot;"/>
        <echo message="==========================================================="/> 
        <echo message="END OF SUMMARY FOR ${test}"/> 
        <echo message="==========================================================="/>   
			
 
        
        <echo message="OK ${target::get-current-target()} ${test}"    />
        
    </target>  
    
    
</project>   
